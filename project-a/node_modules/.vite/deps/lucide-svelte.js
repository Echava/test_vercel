import "./chunk-QBFALKJV.js";
import {
  add_locations,
  check_target,
  each,
  element,
  index,
  init,
  legacy_api,
  legacy_rest_props,
  prop,
  set_attributes,
  slot,
  spread_props,
  wrap_snippet
} from "./chunk-7Y3OIEN2.js";
import "./chunk-7AEQXN7F.js";
import {
  append,
  comment,
  ns_template
} from "./chunk-UE3YPPLO.js";
import {
  child,
  first_child,
  get,
  mark_module_end,
  mark_module_start,
  pop,
  push,
  reset,
  sibling,
  strict_equals,
  template_effect
} from "./chunk-GJOLH4ZF.js";
import "./chunk-UUM4N7O4.js";
import {
  validate_dynamic_element_tag
} from "./chunk-VWJCU25H.js";
import "./chunk-ECHV7LBW.js";
import "./chunk-NFWMW7N6.js";
import {
  FILENAME,
  NAMESPACE_SVG
} from "./chunk-NT4IM65S.js";
import "./chunk-2GO4TZ74.js";
import {
  __export
} from "./chunk-HPRLEMBT.js";

// node_modules/lucide-svelte/dist/icons/index.js
var icons_exports = {};
__export(icons_exports, {
  AArrowDown: () => A_arrow_down,
  AArrowUp: () => A_arrow_up,
  ALargeSmall: () => A_large_small,
  Accessibility: () => Accessibility,
  Activity: () => Activity,
  AirVent: () => Air_vent,
  Airplay: () => Airplay,
  AlarmClock: () => Alarm_clock,
  AlarmClockCheck: () => Alarm_clock_check,
  AlarmClockMinus: () => Alarm_clock_minus,
  AlarmClockOff: () => Alarm_clock_off,
  AlarmClockPlus: () => Alarm_clock_plus,
  AlarmSmoke: () => Alarm_smoke,
  Album: () => Album,
  AlignCenter: () => Align_center,
  AlignCenterHorizontal: () => Align_center_horizontal,
  AlignCenterVertical: () => Align_center_vertical,
  AlignEndHorizontal: () => Align_end_horizontal,
  AlignEndVertical: () => Align_end_vertical,
  AlignHorizontalDistributeCenter: () => Align_horizontal_distribute_center,
  AlignHorizontalDistributeEnd: () => Align_horizontal_distribute_end,
  AlignHorizontalDistributeStart: () => Align_horizontal_distribute_start,
  AlignHorizontalJustifyCenter: () => Align_horizontal_justify_center,
  AlignHorizontalJustifyEnd: () => Align_horizontal_justify_end,
  AlignHorizontalJustifyStart: () => Align_horizontal_justify_start,
  AlignHorizontalSpaceAround: () => Align_horizontal_space_around,
  AlignHorizontalSpaceBetween: () => Align_horizontal_space_between,
  AlignJustify: () => Align_justify,
  AlignLeft: () => Align_left,
  AlignRight: () => Align_right,
  AlignStartHorizontal: () => Align_start_horizontal,
  AlignStartVertical: () => Align_start_vertical,
  AlignVerticalDistributeCenter: () => Align_vertical_distribute_center,
  AlignVerticalDistributeEnd: () => Align_vertical_distribute_end,
  AlignVerticalDistributeStart: () => Align_vertical_distribute_start,
  AlignVerticalJustifyCenter: () => Align_vertical_justify_center,
  AlignVerticalJustifyEnd: () => Align_vertical_justify_end,
  AlignVerticalJustifyStart: () => Align_vertical_justify_start,
  AlignVerticalSpaceAround: () => Align_vertical_space_around,
  AlignVerticalSpaceBetween: () => Align_vertical_space_between,
  Ambulance: () => Ambulance,
  Ampersand: () => Ampersand,
  Ampersands: () => Ampersands,
  Amphora: () => Amphora,
  Anchor: () => Anchor,
  Angry: () => Angry,
  Annoyed: () => Annoyed,
  Antenna: () => Antenna,
  Anvil: () => Anvil,
  Aperture: () => Aperture,
  AppWindow: () => App_window,
  AppWindowMac: () => App_window_mac,
  Apple: () => Apple,
  Archive: () => Archive,
  ArchiveRestore: () => Archive_restore,
  ArchiveX: () => Archive_x,
  Armchair: () => Armchair,
  ArrowBigDown: () => Arrow_big_down,
  ArrowBigDownDash: () => Arrow_big_down_dash,
  ArrowBigLeft: () => Arrow_big_left,
  ArrowBigLeftDash: () => Arrow_big_left_dash,
  ArrowBigRight: () => Arrow_big_right,
  ArrowBigRightDash: () => Arrow_big_right_dash,
  ArrowBigUp: () => Arrow_big_up,
  ArrowBigUpDash: () => Arrow_big_up_dash,
  ArrowDown: () => Arrow_down,
  ArrowDown01: () => Arrow_down_0_1,
  ArrowDown10: () => Arrow_down_1_0,
  ArrowDownAZ: () => Arrow_down_a_z,
  ArrowDownFromLine: () => Arrow_down_from_line,
  ArrowDownLeft: () => Arrow_down_left,
  ArrowDownNarrowWide: () => Arrow_down_narrow_wide,
  ArrowDownRight: () => Arrow_down_right,
  ArrowDownToDot: () => Arrow_down_to_dot,
  ArrowDownToLine: () => Arrow_down_to_line,
  ArrowDownUp: () => Arrow_down_up,
  ArrowDownWideNarrow: () => Arrow_down_wide_narrow,
  ArrowDownZA: () => Arrow_down_z_a,
  ArrowLeft: () => Arrow_left,
  ArrowLeftFromLine: () => Arrow_left_from_line,
  ArrowLeftRight: () => Arrow_left_right,
  ArrowLeftToLine: () => Arrow_left_to_line,
  ArrowRight: () => Arrow_right,
  ArrowRightFromLine: () => Arrow_right_from_line,
  ArrowRightLeft: () => Arrow_right_left,
  ArrowRightToLine: () => Arrow_right_to_line,
  ArrowUp: () => Arrow_up,
  ArrowUp01: () => Arrow_up_0_1,
  ArrowUp10: () => Arrow_up_1_0,
  ArrowUpAZ: () => Arrow_up_a_z,
  ArrowUpDown: () => Arrow_up_down,
  ArrowUpFromDot: () => Arrow_up_from_dot,
  ArrowUpFromLine: () => Arrow_up_from_line,
  ArrowUpLeft: () => Arrow_up_left,
  ArrowUpNarrowWide: () => Arrow_up_narrow_wide,
  ArrowUpRight: () => Arrow_up_right,
  ArrowUpToLine: () => Arrow_up_to_line,
  ArrowUpWideNarrow: () => Arrow_up_wide_narrow,
  ArrowUpZA: () => Arrow_up_z_a,
  ArrowsUpFromLine: () => Arrows_up_from_line,
  Asterisk: () => Asterisk,
  AtSign: () => At_sign,
  Atom: () => Atom,
  AudioLines: () => Audio_lines,
  AudioWaveform: () => Audio_waveform,
  Award: () => Award,
  Axe: () => Axe,
  Axis3d: () => Axis_3d,
  Baby: () => Baby,
  Backpack: () => Backpack,
  Badge: () => Badge,
  BadgeAlert: () => Badge_alert,
  BadgeCent: () => Badge_cent,
  BadgeCheck: () => Badge_check,
  BadgeDollarSign: () => Badge_dollar_sign,
  BadgeEuro: () => Badge_euro,
  BadgeHelp: () => Badge_help,
  BadgeIndianRupee: () => Badge_indian_rupee,
  BadgeInfo: () => Badge_info,
  BadgeJapaneseYen: () => Badge_japanese_yen,
  BadgeMinus: () => Badge_minus,
  BadgePercent: () => Badge_percent,
  BadgePlus: () => Badge_plus,
  BadgePoundSterling: () => Badge_pound_sterling,
  BadgeRussianRuble: () => Badge_russian_ruble,
  BadgeSwissFranc: () => Badge_swiss_franc,
  BadgeX: () => Badge_x,
  BaggageClaim: () => Baggage_claim,
  Ban: () => Ban,
  Banana: () => Banana,
  Bandage: () => Bandage,
  Banknote: () => Banknote,
  Barcode: () => Barcode,
  Baseline: () => Baseline,
  Bath: () => Bath,
  Battery: () => Battery,
  BatteryCharging: () => Battery_charging,
  BatteryFull: () => Battery_full,
  BatteryLow: () => Battery_low,
  BatteryMedium: () => Battery_medium,
  BatteryWarning: () => Battery_warning,
  Beaker: () => Beaker,
  Bean: () => Bean,
  BeanOff: () => Bean_off,
  Bed: () => Bed,
  BedDouble: () => Bed_double,
  BedSingle: () => Bed_single,
  Beef: () => Beef,
  Beer: () => Beer,
  BeerOff: () => Beer_off,
  Bell: () => Bell,
  BellDot: () => Bell_dot,
  BellElectric: () => Bell_electric,
  BellMinus: () => Bell_minus,
  BellOff: () => Bell_off,
  BellPlus: () => Bell_plus,
  BellRing: () => Bell_ring,
  BetweenHorizontalEnd: () => Between_horizontal_end,
  BetweenHorizontalStart: () => Between_horizontal_start,
  BetweenVerticalEnd: () => Between_vertical_end,
  BetweenVerticalStart: () => Between_vertical_start,
  BicepsFlexed: () => Biceps_flexed,
  Bike: () => Bike,
  Binary: () => Binary,
  Binoculars: () => Binoculars,
  Biohazard: () => Biohazard,
  Bird: () => Bird,
  Bitcoin: () => Bitcoin,
  Blend: () => Blend,
  Blinds: () => Blinds,
  Blocks: () => Blocks,
  Bluetooth: () => Bluetooth,
  BluetoothConnected: () => Bluetooth_connected,
  BluetoothOff: () => Bluetooth_off,
  BluetoothSearching: () => Bluetooth_searching,
  Bold: () => Bold,
  Bolt: () => Bolt,
  Bomb: () => Bomb,
  Bone: () => Bone,
  Book: () => Book,
  BookA: () => Book_a,
  BookAudio: () => Book_audio,
  BookCheck: () => Book_check,
  BookCopy: () => Book_copy,
  BookDashed: () => Book_dashed,
  BookDown: () => Book_down,
  BookHeadphones: () => Book_headphones,
  BookHeart: () => Book_heart,
  BookImage: () => Book_image,
  BookKey: () => Book_key,
  BookLock: () => Book_lock,
  BookMarked: () => Book_marked,
  BookMinus: () => Book_minus,
  BookOpen: () => Book_open,
  BookOpenCheck: () => Book_open_check,
  BookOpenText: () => Book_open_text,
  BookPlus: () => Book_plus,
  BookText: () => Book_text,
  BookType: () => Book_type,
  BookUp: () => Book_up,
  BookUp2: () => Book_up_2,
  BookUser: () => Book_user,
  BookX: () => Book_x,
  Bookmark: () => Bookmark,
  BookmarkCheck: () => Bookmark_check,
  BookmarkMinus: () => Bookmark_minus,
  BookmarkPlus: () => Bookmark_plus,
  BookmarkX: () => Bookmark_x,
  BoomBox: () => Boom_box,
  Bot: () => Bot,
  BotMessageSquare: () => Bot_message_square,
  BotOff: () => Bot_off,
  Box: () => Box,
  Boxes: () => Boxes,
  Braces: () => Braces,
  Brackets: () => Brackets,
  Brain: () => Brain,
  BrainCircuit: () => Brain_circuit,
  BrainCog: () => Brain_cog,
  BrickWall: () => Brick_wall,
  Briefcase: () => Briefcase,
  BriefcaseBusiness: () => Briefcase_business,
  BriefcaseConveyorBelt: () => Briefcase_conveyor_belt,
  BriefcaseMedical: () => Briefcase_medical,
  BringToFront: () => Bring_to_front,
  Brush: () => Brush,
  Bug: () => Bug,
  BugOff: () => Bug_off,
  BugPlay: () => Bug_play,
  Building: () => Building,
  Building2: () => Building_2,
  Bus: () => Bus,
  BusFront: () => Bus_front,
  Cable: () => Cable,
  CableCar: () => Cable_car,
  Cake: () => Cake,
  CakeSlice: () => Cake_slice,
  Calculator: () => Calculator,
  Calendar: () => Calendar,
  Calendar1: () => Calendar_1,
  CalendarArrowDown: () => Calendar_arrow_down,
  CalendarArrowUp: () => Calendar_arrow_up,
  CalendarCheck: () => Calendar_check,
  CalendarCheck2: () => Calendar_check_2,
  CalendarClock: () => Calendar_clock,
  CalendarCog: () => Calendar_cog,
  CalendarDays: () => Calendar_days,
  CalendarFold: () => Calendar_fold,
  CalendarHeart: () => Calendar_heart,
  CalendarMinus: () => Calendar_minus,
  CalendarMinus2: () => Calendar_minus_2,
  CalendarOff: () => Calendar_off,
  CalendarPlus: () => Calendar_plus,
  CalendarPlus2: () => Calendar_plus_2,
  CalendarRange: () => Calendar_range,
  CalendarSearch: () => Calendar_search,
  CalendarX: () => Calendar_x,
  CalendarX2: () => Calendar_x_2,
  Camera: () => Camera,
  CameraOff: () => Camera_off,
  Candy: () => Candy,
  CandyCane: () => Candy_cane,
  CandyOff: () => Candy_off,
  Cannabis: () => Cannabis,
  Captions: () => Captions,
  CaptionsOff: () => Captions_off,
  Car: () => Car,
  CarFront: () => Car_front,
  CarTaxiFront: () => Car_taxi_front,
  Caravan: () => Caravan,
  Carrot: () => Carrot,
  CaseLower: () => Case_lower,
  CaseSensitive: () => Case_sensitive,
  CaseUpper: () => Case_upper,
  CassetteTape: () => Cassette_tape,
  Cast: () => Cast,
  Castle: () => Castle,
  Cat: () => Cat,
  Cctv: () => Cctv,
  ChartArea: () => Chart_area,
  ChartBar: () => Chart_bar,
  ChartBarBig: () => Chart_bar_big,
  ChartBarDecreasing: () => Chart_bar_decreasing,
  ChartBarIncreasing: () => Chart_bar_increasing,
  ChartBarStacked: () => Chart_bar_stacked,
  ChartCandlestick: () => Chart_candlestick,
  ChartColumn: () => Chart_column,
  ChartColumnBig: () => Chart_column_big,
  ChartColumnDecreasing: () => Chart_column_decreasing,
  ChartColumnIncreasing: () => Chart_column_increasing,
  ChartColumnStacked: () => Chart_column_stacked,
  ChartGantt: () => Chart_gantt,
  ChartLine: () => Chart_line,
  ChartNetwork: () => Chart_network,
  ChartNoAxesColumn: () => Chart_no_axes_column,
  ChartNoAxesColumnDecreasing: () => Chart_no_axes_column_decreasing,
  ChartNoAxesColumnIncreasing: () => Chart_no_axes_column_increasing,
  ChartNoAxesCombined: () => Chart_no_axes_combined,
  ChartNoAxesGantt: () => Chart_no_axes_gantt,
  ChartPie: () => Chart_pie,
  ChartScatter: () => Chart_scatter,
  ChartSpline: () => Chart_spline,
  Check: () => Check,
  CheckCheck: () => Check_check,
  ChefHat: () => Chef_hat,
  Cherry: () => Cherry,
  ChevronDown: () => Chevron_down,
  ChevronFirst: () => Chevron_first,
  ChevronLast: () => Chevron_last,
  ChevronLeft: () => Chevron_left,
  ChevronRight: () => Chevron_right,
  ChevronUp: () => Chevron_up,
  ChevronsDown: () => Chevrons_down,
  ChevronsDownUp: () => Chevrons_down_up,
  ChevronsLeft: () => Chevrons_left,
  ChevronsLeftRight: () => Chevrons_left_right,
  ChevronsLeftRightEllipsis: () => Chevrons_left_right_ellipsis,
  ChevronsRight: () => Chevrons_right,
  ChevronsRightLeft: () => Chevrons_right_left,
  ChevronsUp: () => Chevrons_up,
  ChevronsUpDown: () => Chevrons_up_down,
  Chrome: () => Chrome,
  Church: () => Church,
  Cigarette: () => Cigarette,
  CigaretteOff: () => Cigarette_off,
  Circle: () => Circle,
  CircleAlert: () => Circle_alert,
  CircleArrowDown: () => Circle_arrow_down,
  CircleArrowLeft: () => Circle_arrow_left,
  CircleArrowOutDownLeft: () => Circle_arrow_out_down_left,
  CircleArrowOutDownRight: () => Circle_arrow_out_down_right,
  CircleArrowOutUpLeft: () => Circle_arrow_out_up_left,
  CircleArrowOutUpRight: () => Circle_arrow_out_up_right,
  CircleArrowRight: () => Circle_arrow_right,
  CircleArrowUp: () => Circle_arrow_up,
  CircleCheck: () => Circle_check,
  CircleCheckBig: () => Circle_check_big,
  CircleChevronDown: () => Circle_chevron_down,
  CircleChevronLeft: () => Circle_chevron_left,
  CircleChevronRight: () => Circle_chevron_right,
  CircleChevronUp: () => Circle_chevron_up,
  CircleDashed: () => Circle_dashed,
  CircleDivide: () => Circle_divide,
  CircleDollarSign: () => Circle_dollar_sign,
  CircleDot: () => Circle_dot,
  CircleDotDashed: () => Circle_dot_dashed,
  CircleEllipsis: () => Circle_ellipsis,
  CircleEqual: () => Circle_equal,
  CircleFadingArrowUp: () => Circle_fading_arrow_up,
  CircleFadingPlus: () => Circle_fading_plus,
  CircleGauge: () => Circle_gauge,
  CircleHelp: () => Circle_help,
  CircleMinus: () => Circle_minus,
  CircleOff: () => Circle_off,
  CircleParking: () => Circle_parking,
  CircleParkingOff: () => Circle_parking_off,
  CirclePause: () => Circle_pause,
  CirclePercent: () => Circle_percent,
  CirclePlay: () => Circle_play,
  CirclePlus: () => Circle_plus,
  CirclePower: () => Circle_power,
  CircleSlash: () => Circle_slash,
  CircleSlash2: () => Circle_slash_2,
  CircleStop: () => Circle_stop,
  CircleUser: () => Circle_user,
  CircleUserRound: () => Circle_user_round,
  CircleX: () => Circle_x,
  CircuitBoard: () => Circuit_board,
  Citrus: () => Citrus,
  Clapperboard: () => Clapperboard,
  Clipboard: () => Clipboard,
  ClipboardCheck: () => Clipboard_check,
  ClipboardCopy: () => Clipboard_copy,
  ClipboardList: () => Clipboard_list,
  ClipboardMinus: () => Clipboard_minus,
  ClipboardPaste: () => Clipboard_paste,
  ClipboardPen: () => Clipboard_pen,
  ClipboardPenLine: () => Clipboard_pen_line,
  ClipboardPlus: () => Clipboard_plus,
  ClipboardType: () => Clipboard_type,
  ClipboardX: () => Clipboard_x,
  Clock: () => Clock,
  Clock1: () => Clock_1,
  Clock10: () => Clock_10,
  Clock11: () => Clock_11,
  Clock12: () => Clock_12,
  Clock2: () => Clock_2,
  Clock3: () => Clock_3,
  Clock4: () => Clock_4,
  Clock5: () => Clock_5,
  Clock6: () => Clock_6,
  Clock7: () => Clock_7,
  Clock8: () => Clock_8,
  Clock9: () => Clock_9,
  ClockAlert: () => Clock_alert,
  ClockArrowDown: () => Clock_arrow_down,
  ClockArrowUp: () => Clock_arrow_up,
  Cloud: () => Cloud,
  CloudCog: () => Cloud_cog,
  CloudDownload: () => Cloud_download,
  CloudDrizzle: () => Cloud_drizzle,
  CloudFog: () => Cloud_fog,
  CloudHail: () => Cloud_hail,
  CloudLightning: () => Cloud_lightning,
  CloudMoon: () => Cloud_moon,
  CloudMoonRain: () => Cloud_moon_rain,
  CloudOff: () => Cloud_off,
  CloudRain: () => Cloud_rain,
  CloudRainWind: () => Cloud_rain_wind,
  CloudSnow: () => Cloud_snow,
  CloudSun: () => Cloud_sun,
  CloudSunRain: () => Cloud_sun_rain,
  CloudUpload: () => Cloud_upload,
  Cloudy: () => Cloudy,
  Clover: () => Clover,
  Club: () => Club,
  Code: () => Code,
  CodeXml: () => Code_xml,
  Codepen: () => Codepen,
  Codesandbox: () => Codesandbox,
  Coffee: () => Coffee,
  Cog: () => Cog,
  Coins: () => Coins,
  Columns2: () => Columns_2,
  Columns3: () => Columns_3,
  Columns4: () => Columns_4,
  Combine: () => Combine,
  Command: () => Command,
  Compass: () => Compass,
  Component: () => Component,
  Computer: () => Computer,
  ConciergeBell: () => Concierge_bell,
  Cone: () => Cone,
  Construction: () => Construction,
  Contact: () => Contact,
  ContactRound: () => Contact_round,
  Container: () => Container,
  Contrast: () => Contrast,
  Cookie: () => Cookie,
  CookingPot: () => Cooking_pot,
  Copy: () => Copy,
  CopyCheck: () => Copy_check,
  CopyMinus: () => Copy_minus,
  CopyPlus: () => Copy_plus,
  CopySlash: () => Copy_slash,
  CopyX: () => Copy_x,
  Copyleft: () => Copyleft,
  Copyright: () => Copyright,
  CornerDownLeft: () => Corner_down_left,
  CornerDownRight: () => Corner_down_right,
  CornerLeftDown: () => Corner_left_down,
  CornerLeftUp: () => Corner_left_up,
  CornerRightDown: () => Corner_right_down,
  CornerRightUp: () => Corner_right_up,
  CornerUpLeft: () => Corner_up_left,
  CornerUpRight: () => Corner_up_right,
  Cpu: () => Cpu,
  CreativeCommons: () => Creative_commons,
  CreditCard: () => Credit_card,
  Croissant: () => Croissant,
  Crop: () => Crop,
  Cross: () => Cross,
  Crosshair: () => Crosshair,
  Crown: () => Crown,
  Cuboid: () => Cuboid,
  CupSoda: () => Cup_soda,
  Currency: () => Currency,
  Cylinder: () => Cylinder,
  Dam: () => Dam,
  Database: () => Database,
  DatabaseBackup: () => Database_backup,
  DatabaseZap: () => Database_zap,
  Delete: () => Delete,
  Dessert: () => Dessert,
  Diameter: () => Diameter,
  Diamond: () => Diamond,
  DiamondMinus: () => Diamond_minus,
  DiamondPercent: () => Diamond_percent,
  DiamondPlus: () => Diamond_plus,
  Dice1: () => Dice_1,
  Dice2: () => Dice_2,
  Dice3: () => Dice_3,
  Dice4: () => Dice_4,
  Dice5: () => Dice_5,
  Dice6: () => Dice_6,
  Dices: () => Dices,
  Diff: () => Diff,
  Disc: () => Disc,
  Disc2: () => Disc_2,
  Disc3: () => Disc_3,
  DiscAlbum: () => Disc_album,
  Divide: () => Divide,
  Dna: () => Dna,
  DnaOff: () => Dna_off,
  Dock: () => Dock,
  Dog: () => Dog,
  DollarSign: () => Dollar_sign,
  Donut: () => Donut,
  DoorClosed: () => Door_closed,
  DoorOpen: () => Door_open,
  Dot: () => Dot,
  Download: () => Download,
  DraftingCompass: () => Drafting_compass,
  Drama: () => Drama,
  Dribbble: () => Dribbble,
  Drill: () => Drill,
  Droplet: () => Droplet,
  Droplets: () => Droplets,
  Drum: () => Drum,
  Drumstick: () => Drumstick,
  Dumbbell: () => Dumbbell,
  Ear: () => Ear,
  EarOff: () => Ear_off,
  Earth: () => Earth,
  EarthLock: () => Earth_lock,
  Eclipse: () => Eclipse,
  Egg: () => Egg,
  EggFried: () => Egg_fried,
  EggOff: () => Egg_off,
  Ellipsis: () => Ellipsis,
  EllipsisVertical: () => Ellipsis_vertical,
  Equal: () => Equal,
  EqualNot: () => Equal_not,
  Eraser: () => Eraser,
  EthernetPort: () => Ethernet_port,
  Euro: () => Euro,
  Expand: () => Expand,
  ExternalLink: () => External_link,
  Eye: () => Eye,
  EyeClosed: () => Eye_closed,
  EyeOff: () => Eye_off,
  Facebook: () => Facebook,
  Factory: () => Factory,
  Fan: () => Fan,
  FastForward: () => Fast_forward,
  Feather: () => Feather,
  Fence: () => Fence,
  FerrisWheel: () => Ferris_wheel,
  Figma: () => Figma,
  File: () => File,
  FileArchive: () => File_archive,
  FileAudio: () => File_audio,
  FileAudio2: () => File_audio_2,
  FileAxis3d: () => File_axis_3d,
  FileBadge: () => File_badge,
  FileBadge2: () => File_badge_2,
  FileBox: () => File_box,
  FileChartColumn: () => File_chart_column,
  FileChartColumnIncreasing: () => File_chart_column_increasing,
  FileChartLine: () => File_chart_line,
  FileChartPie: () => File_chart_pie,
  FileCheck: () => File_check,
  FileCheck2: () => File_check_2,
  FileClock: () => File_clock,
  FileCode: () => File_code,
  FileCode2: () => File_code_2,
  FileCog: () => File_cog,
  FileDiff: () => File_diff,
  FileDigit: () => File_digit,
  FileDown: () => File_down,
  FileHeart: () => File_heart,
  FileImage: () => File_image,
  FileInput: () => File_input,
  FileJson: () => File_json,
  FileJson2: () => File_json_2,
  FileKey: () => File_key,
  FileKey2: () => File_key_2,
  FileLock: () => File_lock,
  FileLock2: () => File_lock_2,
  FileMinus: () => File_minus,
  FileMinus2: () => File_minus_2,
  FileMusic: () => File_music,
  FileOutput: () => File_output,
  FilePen: () => File_pen,
  FilePenLine: () => File_pen_line,
  FilePlus: () => File_plus,
  FilePlus2: () => File_plus_2,
  FileQuestion: () => File_question,
  FileScan: () => File_scan,
  FileSearch: () => File_search,
  FileSearch2: () => File_search_2,
  FileSliders: () => File_sliders,
  FileSpreadsheet: () => File_spreadsheet,
  FileStack: () => File_stack,
  FileSymlink: () => File_symlink,
  FileTerminal: () => File_terminal,
  FileText: () => File_text,
  FileType: () => File_type,
  FileType2: () => File_type_2,
  FileUp: () => File_up,
  FileUser: () => File_user,
  FileVideo: () => File_video,
  FileVideo2: () => File_video_2,
  FileVolume: () => File_volume,
  FileVolume2: () => File_volume_2,
  FileWarning: () => File_warning,
  FileX: () => File_x,
  FileX2: () => File_x_2,
  Files: () => Files,
  Film: () => Film,
  Filter: () => Filter,
  FilterX: () => Filter_x,
  Fingerprint: () => Fingerprint,
  FireExtinguisher: () => Fire_extinguisher,
  Fish: () => Fish,
  FishOff: () => Fish_off,
  FishSymbol: () => Fish_symbol,
  Flag: () => Flag,
  FlagOff: () => Flag_off,
  FlagTriangleLeft: () => Flag_triangle_left,
  FlagTriangleRight: () => Flag_triangle_right,
  Flame: () => Flame,
  FlameKindling: () => Flame_kindling,
  Flashlight: () => Flashlight,
  FlashlightOff: () => Flashlight_off,
  FlaskConical: () => Flask_conical,
  FlaskConicalOff: () => Flask_conical_off,
  FlaskRound: () => Flask_round,
  FlipHorizontal: () => Flip_horizontal,
  FlipHorizontal2: () => Flip_horizontal_2,
  FlipVertical: () => Flip_vertical,
  FlipVertical2: () => Flip_vertical_2,
  Flower: () => Flower,
  Flower2: () => Flower_2,
  Focus: () => Focus,
  FoldHorizontal: () => Fold_horizontal,
  FoldVertical: () => Fold_vertical,
  Folder: () => Folder,
  FolderArchive: () => Folder_archive,
  FolderCheck: () => Folder_check,
  FolderClock: () => Folder_clock,
  FolderClosed: () => Folder_closed,
  FolderCode: () => Folder_code,
  FolderCog: () => Folder_cog,
  FolderDot: () => Folder_dot,
  FolderDown: () => Folder_down,
  FolderGit: () => Folder_git,
  FolderGit2: () => Folder_git_2,
  FolderHeart: () => Folder_heart,
  FolderInput: () => Folder_input,
  FolderKanban: () => Folder_kanban,
  FolderKey: () => Folder_key,
  FolderLock: () => Folder_lock,
  FolderMinus: () => Folder_minus,
  FolderOpen: () => Folder_open,
  FolderOpenDot: () => Folder_open_dot,
  FolderOutput: () => Folder_output,
  FolderPen: () => Folder_pen,
  FolderPlus: () => Folder_plus,
  FolderRoot: () => Folder_root,
  FolderSearch: () => Folder_search,
  FolderSearch2: () => Folder_search_2,
  FolderSymlink: () => Folder_symlink,
  FolderSync: () => Folder_sync,
  FolderTree: () => Folder_tree,
  FolderUp: () => Folder_up,
  FolderX: () => Folder_x,
  Folders: () => Folders,
  Footprints: () => Footprints,
  Forklift: () => Forklift,
  Forward: () => Forward,
  Frame: () => Frame,
  Framer: () => Framer,
  Frown: () => Frown,
  Fuel: () => Fuel,
  Fullscreen: () => Fullscreen,
  GalleryHorizontal: () => Gallery_horizontal,
  GalleryHorizontalEnd: () => Gallery_horizontal_end,
  GalleryThumbnails: () => Gallery_thumbnails,
  GalleryVertical: () => Gallery_vertical,
  GalleryVerticalEnd: () => Gallery_vertical_end,
  Gamepad: () => Gamepad,
  Gamepad2: () => Gamepad_2,
  Gauge: () => Gauge,
  Gavel: () => Gavel,
  Gem: () => Gem,
  Ghost: () => Ghost,
  Gift: () => Gift,
  GitBranch: () => Git_branch,
  GitBranchPlus: () => Git_branch_plus,
  GitCommitHorizontal: () => Git_commit_horizontal,
  GitCommitVertical: () => Git_commit_vertical,
  GitCompare: () => Git_compare,
  GitCompareArrows: () => Git_compare_arrows,
  GitFork: () => Git_fork,
  GitGraph: () => Git_graph,
  GitMerge: () => Git_merge,
  GitPullRequest: () => Git_pull_request,
  GitPullRequestArrow: () => Git_pull_request_arrow,
  GitPullRequestClosed: () => Git_pull_request_closed,
  GitPullRequestCreate: () => Git_pull_request_create,
  GitPullRequestCreateArrow: () => Git_pull_request_create_arrow,
  GitPullRequestDraft: () => Git_pull_request_draft,
  Github: () => Github,
  Gitlab: () => Gitlab,
  GlassWater: () => Glass_water,
  Glasses: () => Glasses,
  Globe: () => Globe,
  GlobeLock: () => Globe_lock,
  Goal: () => Goal,
  Grab: () => Grab,
  GraduationCap: () => Graduation_cap,
  Grape: () => Grape,
  Grid2x2: () => Grid_2x2,
  Grid2x2Check: () => Grid_2x2_check,
  Grid2x2Plus: () => Grid_2x2_plus,
  Grid2x2X: () => Grid_2x2_x,
  Grid3x3: () => Grid_3x3,
  Grip: () => Grip,
  GripHorizontal: () => Grip_horizontal,
  GripVertical: () => Grip_vertical,
  Group: () => Group,
  Guitar: () => Guitar,
  Ham: () => Ham,
  Hammer: () => Hammer,
  Hand: () => Hand,
  HandCoins: () => Hand_coins,
  HandHeart: () => Hand_heart,
  HandHelping: () => Hand_helping,
  HandMetal: () => Hand_metal,
  HandPlatter: () => Hand_platter,
  Handshake: () => Handshake,
  HardDrive: () => Hard_drive,
  HardDriveDownload: () => Hard_drive_download,
  HardDriveUpload: () => Hard_drive_upload,
  HardHat: () => Hard_hat,
  Hash: () => Hash,
  Haze: () => Haze,
  HdmiPort: () => Hdmi_port,
  Heading: () => Heading,
  Heading1: () => Heading_1,
  Heading2: () => Heading_2,
  Heading3: () => Heading_3,
  Heading4: () => Heading_4,
  Heading5: () => Heading_5,
  Heading6: () => Heading_6,
  HeadphoneOff: () => Headphone_off,
  Headphones: () => Headphones,
  Headset: () => Headset,
  Heart: () => Heart,
  HeartCrack: () => Heart_crack,
  HeartHandshake: () => Heart_handshake,
  HeartOff: () => Heart_off,
  HeartPulse: () => Heart_pulse,
  Heater: () => Heater,
  Hexagon: () => Hexagon,
  Highlighter: () => Highlighter,
  History: () => History,
  Hop: () => Hop,
  HopOff: () => Hop_off,
  Hospital: () => Hospital,
  Hotel: () => Hotel,
  Hourglass: () => Hourglass,
  House: () => House,
  HousePlug: () => House_plug,
  HousePlus: () => House_plus,
  IceCreamBowl: () => Ice_cream_bowl,
  IceCreamCone: () => Ice_cream_cone,
  IdCard: () => Id_card,
  Image: () => Image,
  ImageDown: () => Image_down,
  ImageMinus: () => Image_minus,
  ImageOff: () => Image_off,
  ImagePlay: () => Image_play,
  ImagePlus: () => Image_plus,
  ImageUp: () => Image_up,
  Images: () => Images,
  Import: () => Import,
  Inbox: () => Inbox,
  IndentDecrease: () => Indent_decrease,
  IndentIncrease: () => Indent_increase,
  IndianRupee: () => Indian_rupee,
  Infinity: () => Infinity,
  Info: () => Info,
  InspectionPanel: () => Inspection_panel,
  Instagram: () => Instagram,
  Italic: () => Italic,
  IterationCcw: () => Iteration_ccw,
  IterationCw: () => Iteration_cw,
  JapaneseYen: () => Japanese_yen,
  Joystick: () => Joystick,
  Kanban: () => Kanban,
  Key: () => Key,
  KeyRound: () => Key_round,
  KeySquare: () => Key_square,
  Keyboard: () => Keyboard,
  KeyboardMusic: () => Keyboard_music,
  KeyboardOff: () => Keyboard_off,
  Lamp: () => Lamp,
  LampCeiling: () => Lamp_ceiling,
  LampDesk: () => Lamp_desk,
  LampFloor: () => Lamp_floor,
  LampWallDown: () => Lamp_wall_down,
  LampWallUp: () => Lamp_wall_up,
  LandPlot: () => Land_plot,
  Landmark: () => Landmark,
  Languages: () => Languages,
  Laptop: () => Laptop,
  LaptopMinimal: () => Laptop_minimal,
  Lasso: () => Lasso,
  LassoSelect: () => Lasso_select,
  Laugh: () => Laugh,
  Layers: () => Layers,
  Layers2: () => Layers_2,
  Layers3: () => Layers_3,
  LayoutDashboard: () => Layout_dashboard,
  LayoutGrid: () => Layout_grid,
  LayoutList: () => Layout_list,
  LayoutPanelLeft: () => Layout_panel_left,
  LayoutPanelTop: () => Layout_panel_top,
  LayoutTemplate: () => Layout_template,
  Leaf: () => Leaf,
  LeafyGreen: () => Leafy_green,
  Lectern: () => Lectern,
  LetterText: () => Letter_text,
  Library: () => Library,
  LibraryBig: () => Library_big,
  LifeBuoy: () => Life_buoy,
  Ligature: () => Ligature,
  Lightbulb: () => Lightbulb,
  LightbulbOff: () => Lightbulb_off,
  Link: () => Link,
  Link2: () => Link_2,
  Link2Off: () => Link_2_off,
  Linkedin: () => Linkedin,
  List: () => List,
  ListCheck: () => List_check,
  ListChecks: () => List_checks,
  ListCollapse: () => List_collapse,
  ListEnd: () => List_end,
  ListFilter: () => List_filter,
  ListMinus: () => List_minus,
  ListMusic: () => List_music,
  ListOrdered: () => List_ordered,
  ListPlus: () => List_plus,
  ListRestart: () => List_restart,
  ListStart: () => List_start,
  ListTodo: () => List_todo,
  ListTree: () => List_tree,
  ListVideo: () => List_video,
  ListX: () => List_x,
  Loader: () => Loader,
  LoaderCircle: () => Loader_circle,
  LoaderPinwheel: () => Loader_pinwheel,
  Locate: () => Locate,
  LocateFixed: () => Locate_fixed,
  LocateOff: () => Locate_off,
  Lock: () => Lock,
  LockKeyhole: () => Lock_keyhole,
  LockKeyholeOpen: () => Lock_keyhole_open,
  LockOpen: () => Lock_open,
  LogIn: () => Log_in,
  LogOut: () => Log_out,
  Logs: () => Logs,
  Lollipop: () => Lollipop,
  Luggage: () => Luggage,
  Magnet: () => Magnet,
  Mail: () => Mail,
  MailCheck: () => Mail_check,
  MailMinus: () => Mail_minus,
  MailOpen: () => Mail_open,
  MailPlus: () => Mail_plus,
  MailQuestion: () => Mail_question,
  MailSearch: () => Mail_search,
  MailWarning: () => Mail_warning,
  MailX: () => Mail_x,
  Mailbox: () => Mailbox,
  Mails: () => Mails,
  Map: () => Map,
  MapPin: () => Map_pin,
  MapPinCheck: () => Map_pin_check,
  MapPinCheckInside: () => Map_pin_check_inside,
  MapPinHouse: () => Map_pin_house,
  MapPinMinus: () => Map_pin_minus,
  MapPinMinusInside: () => Map_pin_minus_inside,
  MapPinOff: () => Map_pin_off,
  MapPinPlus: () => Map_pin_plus,
  MapPinPlusInside: () => Map_pin_plus_inside,
  MapPinX: () => Map_pin_x,
  MapPinXInside: () => Map_pin_x_inside,
  MapPinned: () => Map_pinned,
  Martini: () => Martini,
  Maximize: () => Maximize,
  Maximize2: () => Maximize_2,
  Medal: () => Medal,
  Megaphone: () => Megaphone,
  MegaphoneOff: () => Megaphone_off,
  Meh: () => Meh,
  MemoryStick: () => Memory_stick,
  Menu: () => Menu,
  Merge: () => Merge,
  MessageCircle: () => Message_circle,
  MessageCircleCode: () => Message_circle_code,
  MessageCircleDashed: () => Message_circle_dashed,
  MessageCircleHeart: () => Message_circle_heart,
  MessageCircleMore: () => Message_circle_more,
  MessageCircleOff: () => Message_circle_off,
  MessageCirclePlus: () => Message_circle_plus,
  MessageCircleQuestion: () => Message_circle_question,
  MessageCircleReply: () => Message_circle_reply,
  MessageCircleWarning: () => Message_circle_warning,
  MessageCircleX: () => Message_circle_x,
  MessageSquare: () => Message_square,
  MessageSquareCode: () => Message_square_code,
  MessageSquareDashed: () => Message_square_dashed,
  MessageSquareDiff: () => Message_square_diff,
  MessageSquareDot: () => Message_square_dot,
  MessageSquareHeart: () => Message_square_heart,
  MessageSquareLock: () => Message_square_lock,
  MessageSquareMore: () => Message_square_more,
  MessageSquareOff: () => Message_square_off,
  MessageSquarePlus: () => Message_square_plus,
  MessageSquareQuote: () => Message_square_quote,
  MessageSquareReply: () => Message_square_reply,
  MessageSquareShare: () => Message_square_share,
  MessageSquareText: () => Message_square_text,
  MessageSquareWarning: () => Message_square_warning,
  MessageSquareX: () => Message_square_x,
  MessagesSquare: () => Messages_square,
  Mic: () => Mic,
  MicOff: () => Mic_off,
  MicVocal: () => Mic_vocal,
  Microchip: () => Microchip,
  Microscope: () => Microscope,
  Microwave: () => Microwave,
  Milestone: () => Milestone,
  Milk: () => Milk,
  MilkOff: () => Milk_off,
  Minimize: () => Minimize,
  Minimize2: () => Minimize_2,
  Minus: () => Minus,
  Monitor: () => Monitor,
  MonitorCheck: () => Monitor_check,
  MonitorCog: () => Monitor_cog,
  MonitorDot: () => Monitor_dot,
  MonitorDown: () => Monitor_down,
  MonitorOff: () => Monitor_off,
  MonitorPause: () => Monitor_pause,
  MonitorPlay: () => Monitor_play,
  MonitorSmartphone: () => Monitor_smartphone,
  MonitorSpeaker: () => Monitor_speaker,
  MonitorStop: () => Monitor_stop,
  MonitorUp: () => Monitor_up,
  MonitorX: () => Monitor_x,
  Moon: () => Moon,
  MoonStar: () => Moon_star,
  Mountain: () => Mountain,
  MountainSnow: () => Mountain_snow,
  Mouse: () => Mouse,
  MouseOff: () => Mouse_off,
  MousePointer: () => Mouse_pointer,
  MousePointer2: () => Mouse_pointer_2,
  MousePointerBan: () => Mouse_pointer_ban,
  MousePointerClick: () => Mouse_pointer_click,
  Move: () => Move,
  Move3d: () => Move_3d,
  MoveDiagonal: () => Move_diagonal,
  MoveDiagonal2: () => Move_diagonal_2,
  MoveDown: () => Move_down,
  MoveDownLeft: () => Move_down_left,
  MoveDownRight: () => Move_down_right,
  MoveHorizontal: () => Move_horizontal,
  MoveLeft: () => Move_left,
  MoveRight: () => Move_right,
  MoveUp: () => Move_up,
  MoveUpLeft: () => Move_up_left,
  MoveUpRight: () => Move_up_right,
  MoveVertical: () => Move_vertical,
  Music: () => Music,
  Music2: () => Music_2,
  Music3: () => Music_3,
  Music4: () => Music_4,
  Navigation: () => Navigation,
  Navigation2: () => Navigation_2,
  Navigation2Off: () => Navigation_2_off,
  NavigationOff: () => Navigation_off,
  Network: () => Network,
  Newspaper: () => Newspaper,
  Nfc: () => Nfc,
  Notebook: () => Notebook,
  NotebookPen: () => Notebook_pen,
  NotebookTabs: () => Notebook_tabs,
  NotebookText: () => Notebook_text,
  NotepadText: () => Notepad_text,
  NotepadTextDashed: () => Notepad_text_dashed,
  Nut: () => Nut,
  NutOff: () => Nut_off,
  Octagon: () => Octagon,
  OctagonAlert: () => Octagon_alert,
  OctagonMinus: () => Octagon_minus,
  OctagonPause: () => Octagon_pause,
  OctagonX: () => Octagon_x,
  Omega: () => Omega,
  Option: () => Option,
  Orbit: () => Orbit,
  Origami: () => Origami,
  Package: () => Package,
  Package2: () => Package_2,
  PackageCheck: () => Package_check,
  PackageMinus: () => Package_minus,
  PackageOpen: () => Package_open,
  PackagePlus: () => Package_plus,
  PackageSearch: () => Package_search,
  PackageX: () => Package_x,
  PaintBucket: () => Paint_bucket,
  PaintRoller: () => Paint_roller,
  Paintbrush: () => Paintbrush,
  PaintbrushVertical: () => Paintbrush_vertical,
  Palette: () => Palette,
  PanelBottom: () => Panel_bottom,
  PanelBottomClose: () => Panel_bottom_close,
  PanelBottomDashed: () => Panel_bottom_dashed,
  PanelBottomOpen: () => Panel_bottom_open,
  PanelLeft: () => Panel_left,
  PanelLeftClose: () => Panel_left_close,
  PanelLeftDashed: () => Panel_left_dashed,
  PanelLeftOpen: () => Panel_left_open,
  PanelRight: () => Panel_right,
  PanelRightClose: () => Panel_right_close,
  PanelRightDashed: () => Panel_right_dashed,
  PanelRightOpen: () => Panel_right_open,
  PanelTop: () => Panel_top,
  PanelTopClose: () => Panel_top_close,
  PanelTopDashed: () => Panel_top_dashed,
  PanelTopOpen: () => Panel_top_open,
  PanelsLeftBottom: () => Panels_left_bottom,
  PanelsRightBottom: () => Panels_right_bottom,
  PanelsTopLeft: () => Panels_top_left,
  Paperclip: () => Paperclip,
  Parentheses: () => Parentheses,
  ParkingMeter: () => Parking_meter,
  PartyPopper: () => Party_popper,
  Pause: () => Pause,
  PawPrint: () => Paw_print,
  PcCase: () => Pc_case,
  Pen: () => Pen,
  PenLine: () => Pen_line,
  PenOff: () => Pen_off,
  PenTool: () => Pen_tool,
  Pencil: () => Pencil,
  PencilLine: () => Pencil_line,
  PencilOff: () => Pencil_off,
  PencilRuler: () => Pencil_ruler,
  Pentagon: () => Pentagon,
  Percent: () => Percent,
  PersonStanding: () => Person_standing,
  PhilippinePeso: () => Philippine_peso,
  Phone: () => Phone,
  PhoneCall: () => Phone_call,
  PhoneForwarded: () => Phone_forwarded,
  PhoneIncoming: () => Phone_incoming,
  PhoneMissed: () => Phone_missed,
  PhoneOff: () => Phone_off,
  PhoneOutgoing: () => Phone_outgoing,
  Pi: () => Pi,
  Piano: () => Piano,
  Pickaxe: () => Pickaxe,
  PictureInPicture: () => Picture_in_picture,
  PictureInPicture2: () => Picture_in_picture_2,
  PiggyBank: () => Piggy_bank,
  Pilcrow: () => Pilcrow,
  PilcrowLeft: () => Pilcrow_left,
  PilcrowRight: () => Pilcrow_right,
  Pill: () => Pill,
  PillBottle: () => Pill_bottle,
  Pin: () => Pin,
  PinOff: () => Pin_off,
  Pipette: () => Pipette,
  Pizza: () => Pizza,
  Plane: () => Plane,
  PlaneLanding: () => Plane_landing,
  PlaneTakeoff: () => Plane_takeoff,
  Play: () => Play,
  Plug: () => Plug,
  Plug2: () => Plug_2,
  PlugZap: () => Plug_zap,
  Plus: () => Plus,
  Pocket: () => Pocket,
  PocketKnife: () => Pocket_knife,
  Podcast: () => Podcast,
  Pointer: () => Pointer,
  PointerOff: () => Pointer_off,
  Popcorn: () => Popcorn,
  Popsicle: () => Popsicle,
  PoundSterling: () => Pound_sterling,
  Power: () => Power,
  PowerOff: () => Power_off,
  Presentation: () => Presentation,
  Printer: () => Printer,
  PrinterCheck: () => Printer_check,
  Projector: () => Projector,
  Proportions: () => Proportions,
  Puzzle: () => Puzzle,
  Pyramid: () => Pyramid,
  QrCode: () => Qr_code,
  Quote: () => Quote,
  Rabbit: () => Rabbit,
  Radar: () => Radar,
  Radiation: () => Radiation,
  Radical: () => Radical,
  Radio: () => Radio,
  RadioReceiver: () => Radio_receiver,
  RadioTower: () => Radio_tower,
  Radius: () => Radius,
  RailSymbol: () => Rail_symbol,
  Rainbow: () => Rainbow,
  Rat: () => Rat,
  Ratio: () => Ratio,
  Receipt: () => Receipt,
  ReceiptCent: () => Receipt_cent,
  ReceiptEuro: () => Receipt_euro,
  ReceiptIndianRupee: () => Receipt_indian_rupee,
  ReceiptJapaneseYen: () => Receipt_japanese_yen,
  ReceiptPoundSterling: () => Receipt_pound_sterling,
  ReceiptRussianRuble: () => Receipt_russian_ruble,
  ReceiptSwissFranc: () => Receipt_swiss_franc,
  ReceiptText: () => Receipt_text,
  RectangleEllipsis: () => Rectangle_ellipsis,
  RectangleHorizontal: () => Rectangle_horizontal,
  RectangleVertical: () => Rectangle_vertical,
  Recycle: () => Recycle,
  Redo: () => Redo,
  Redo2: () => Redo_2,
  RedoDot: () => Redo_dot,
  RefreshCcw: () => Refresh_ccw,
  RefreshCcwDot: () => Refresh_ccw_dot,
  RefreshCw: () => Refresh_cw,
  RefreshCwOff: () => Refresh_cw_off,
  Refrigerator: () => Refrigerator,
  Regex: () => Regex,
  RemoveFormatting: () => Remove_formatting,
  Repeat: () => Repeat,
  Repeat1: () => Repeat_1,
  Repeat2: () => Repeat_2,
  Replace: () => Replace,
  ReplaceAll: () => Replace_all,
  Reply: () => Reply,
  ReplyAll: () => Reply_all,
  Rewind: () => Rewind,
  Ribbon: () => Ribbon,
  Rocket: () => Rocket,
  RockingChair: () => Rocking_chair,
  RollerCoaster: () => Roller_coaster,
  Rotate3d: () => Rotate_3d,
  RotateCcw: () => Rotate_ccw,
  RotateCcwSquare: () => Rotate_ccw_square,
  RotateCw: () => Rotate_cw,
  RotateCwSquare: () => Rotate_cw_square,
  Route: () => Route,
  RouteOff: () => Route_off,
  Router: () => Router,
  Rows2: () => Rows_2,
  Rows3: () => Rows_3,
  Rows4: () => Rows_4,
  Rss: () => Rss,
  Ruler: () => Ruler,
  RussianRuble: () => Russian_ruble,
  Sailboat: () => Sailboat,
  Salad: () => Salad,
  Sandwich: () => Sandwich,
  Satellite: () => Satellite,
  SatelliteDish: () => Satellite_dish,
  Save: () => Save,
  SaveAll: () => Save_all,
  SaveOff: () => Save_off,
  Scale: () => Scale,
  Scale3d: () => Scale_3d,
  Scaling: () => Scaling,
  Scan: () => Scan,
  ScanBarcode: () => Scan_barcode,
  ScanEye: () => Scan_eye,
  ScanFace: () => Scan_face,
  ScanLine: () => Scan_line,
  ScanQrCode: () => Scan_qr_code,
  ScanSearch: () => Scan_search,
  ScanText: () => Scan_text,
  School: () => School,
  Scissors: () => Scissors,
  ScissorsLineDashed: () => Scissors_line_dashed,
  ScreenShare: () => Screen_share,
  ScreenShareOff: () => Screen_share_off,
  Scroll: () => Scroll,
  ScrollText: () => Scroll_text,
  Search: () => Search,
  SearchCheck: () => Search_check,
  SearchCode: () => Search_code,
  SearchSlash: () => Search_slash,
  SearchX: () => Search_x,
  Section: () => Section,
  Send: () => Send,
  SendHorizontal: () => Send_horizontal,
  SendToBack: () => Send_to_back,
  SeparatorHorizontal: () => Separator_horizontal,
  SeparatorVertical: () => Separator_vertical,
  Server: () => Server,
  ServerCog: () => Server_cog,
  ServerCrash: () => Server_crash,
  ServerOff: () => Server_off,
  Settings: () => Settings,
  Settings2: () => Settings_2,
  Shapes: () => Shapes,
  Share: () => Share,
  Share2: () => Share_2,
  Sheet: () => Sheet,
  Shell: () => Shell,
  Shield: () => Shield,
  ShieldAlert: () => Shield_alert,
  ShieldBan: () => Shield_ban,
  ShieldCheck: () => Shield_check,
  ShieldEllipsis: () => Shield_ellipsis,
  ShieldHalf: () => Shield_half,
  ShieldMinus: () => Shield_minus,
  ShieldOff: () => Shield_off,
  ShieldPlus: () => Shield_plus,
  ShieldQuestion: () => Shield_question,
  ShieldX: () => Shield_x,
  Ship: () => Ship,
  ShipWheel: () => Ship_wheel,
  Shirt: () => Shirt,
  ShoppingBag: () => Shopping_bag,
  ShoppingBasket: () => Shopping_basket,
  ShoppingCart: () => Shopping_cart,
  Shovel: () => Shovel,
  ShowerHead: () => Shower_head,
  Shrink: () => Shrink,
  Shrub: () => Shrub,
  Shuffle: () => Shuffle,
  Sigma: () => Sigma,
  Signal: () => Signal,
  SignalHigh: () => Signal_high,
  SignalLow: () => Signal_low,
  SignalMedium: () => Signal_medium,
  SignalZero: () => Signal_zero,
  Signature: () => Signature,
  Signpost: () => Signpost,
  SignpostBig: () => Signpost_big,
  Siren: () => Siren,
  SkipBack: () => Skip_back,
  SkipForward: () => Skip_forward,
  Skull: () => Skull,
  Slack: () => Slack,
  Slash: () => Slash,
  Slice: () => Slice,
  SlidersHorizontal: () => Sliders_horizontal,
  SlidersVertical: () => Sliders_vertical,
  Smartphone: () => Smartphone,
  SmartphoneCharging: () => Smartphone_charging,
  SmartphoneNfc: () => Smartphone_nfc,
  Smile: () => Smile,
  SmilePlus: () => Smile_plus,
  Snail: () => Snail,
  Snowflake: () => Snowflake,
  Sofa: () => Sofa,
  Soup: () => Soup,
  Space: () => Space,
  Spade: () => Spade,
  Sparkle: () => Sparkle,
  Sparkles: () => Sparkles,
  Speaker: () => Speaker,
  Speech: () => Speech,
  SpellCheck: () => Spell_check,
  SpellCheck2: () => Spell_check_2,
  Spline: () => Spline,
  Split: () => Split,
  SprayCan: () => Spray_can,
  Sprout: () => Sprout,
  Square: () => Square,
  SquareActivity: () => Square_activity,
  SquareArrowDown: () => Square_arrow_down,
  SquareArrowDownLeft: () => Square_arrow_down_left,
  SquareArrowDownRight: () => Square_arrow_down_right,
  SquareArrowLeft: () => Square_arrow_left,
  SquareArrowOutDownLeft: () => Square_arrow_out_down_left,
  SquareArrowOutDownRight: () => Square_arrow_out_down_right,
  SquareArrowOutUpLeft: () => Square_arrow_out_up_left,
  SquareArrowOutUpRight: () => Square_arrow_out_up_right,
  SquareArrowRight: () => Square_arrow_right,
  SquareArrowUp: () => Square_arrow_up,
  SquareArrowUpLeft: () => Square_arrow_up_left,
  SquareArrowUpRight: () => Square_arrow_up_right,
  SquareAsterisk: () => Square_asterisk,
  SquareBottomDashedScissors: () => Square_bottom_dashed_scissors,
  SquareChartGantt: () => Square_chart_gantt,
  SquareCheck: () => Square_check,
  SquareCheckBig: () => Square_check_big,
  SquareChevronDown: () => Square_chevron_down,
  SquareChevronLeft: () => Square_chevron_left,
  SquareChevronRight: () => Square_chevron_right,
  SquareChevronUp: () => Square_chevron_up,
  SquareCode: () => Square_code,
  SquareDashed: () => Square_dashed,
  SquareDashedBottom: () => Square_dashed_bottom,
  SquareDashedBottomCode: () => Square_dashed_bottom_code,
  SquareDashedKanban: () => Square_dashed_kanban,
  SquareDashedMousePointer: () => Square_dashed_mouse_pointer,
  SquareDivide: () => Square_divide,
  SquareDot: () => Square_dot,
  SquareEqual: () => Square_equal,
  SquareFunction: () => Square_function,
  SquareKanban: () => Square_kanban,
  SquareLibrary: () => Square_library,
  SquareM: () => Square_m,
  SquareMenu: () => Square_menu,
  SquareMinus: () => Square_minus,
  SquareMousePointer: () => Square_mouse_pointer,
  SquareParking: () => Square_parking,
  SquareParkingOff: () => Square_parking_off,
  SquarePen: () => Square_pen,
  SquarePercent: () => Square_percent,
  SquarePi: () => Square_pi,
  SquarePilcrow: () => Square_pilcrow,
  SquarePlay: () => Square_play,
  SquarePlus: () => Square_plus,
  SquarePower: () => Square_power,
  SquareRadical: () => Square_radical,
  SquareScissors: () => Square_scissors,
  SquareSigma: () => Square_sigma,
  SquareSlash: () => Square_slash,
  SquareSplitHorizontal: () => Square_split_horizontal,
  SquareSplitVertical: () => Square_split_vertical,
  SquareSquare: () => Square_square,
  SquareStack: () => Square_stack,
  SquareTerminal: () => Square_terminal,
  SquareUser: () => Square_user,
  SquareUserRound: () => Square_user_round,
  SquareX: () => Square_x,
  Squircle: () => Squircle,
  Squirrel: () => Squirrel,
  Stamp: () => Stamp,
  Star: () => Star,
  StarHalf: () => Star_half,
  StarOff: () => Star_off,
  StepBack: () => Step_back,
  StepForward: () => Step_forward,
  Stethoscope: () => Stethoscope,
  Sticker: () => Sticker,
  StickyNote: () => Sticky_note,
  Store: () => Store,
  StretchHorizontal: () => Stretch_horizontal,
  StretchVertical: () => Stretch_vertical,
  Strikethrough: () => Strikethrough,
  Subscript: () => Subscript,
  Sun: () => Sun,
  SunDim: () => Sun_dim,
  SunMedium: () => Sun_medium,
  SunMoon: () => Sun_moon,
  SunSnow: () => Sun_snow,
  Sunrise: () => Sunrise,
  Sunset: () => Sunset,
  Superscript: () => Superscript,
  SwatchBook: () => Swatch_book,
  SwissFranc: () => Swiss_franc,
  SwitchCamera: () => Switch_camera,
  Sword: () => Sword,
  Swords: () => Swords,
  Syringe: () => Syringe,
  Table: () => Table,
  Table2: () => Table_2,
  TableCellsMerge: () => Table_cells_merge,
  TableCellsSplit: () => Table_cells_split,
  TableColumnsSplit: () => Table_columns_split,
  TableOfContents: () => Table_of_contents,
  TableProperties: () => Table_properties,
  TableRowsSplit: () => Table_rows_split,
  Tablet: () => Tablet,
  TabletSmartphone: () => Tablet_smartphone,
  Tablets: () => Tablets,
  Tag: () => Tag,
  Tags: () => Tags,
  Tally1: () => Tally_1,
  Tally2: () => Tally_2,
  Tally3: () => Tally_3,
  Tally4: () => Tally_4,
  Tally5: () => Tally_5,
  Tangent: () => Tangent,
  Target: () => Target,
  Telescope: () => Telescope,
  Tent: () => Tent,
  TentTree: () => Tent_tree,
  Terminal: () => Terminal,
  TestTube: () => Test_tube,
  TestTubeDiagonal: () => Test_tube_diagonal,
  TestTubes: () => Test_tubes,
  Text: () => Text,
  TextCursor: () => Text_cursor,
  TextCursorInput: () => Text_cursor_input,
  TextQuote: () => Text_quote,
  TextSearch: () => Text_search,
  TextSelect: () => Text_select,
  Theater: () => Theater,
  Thermometer: () => Thermometer,
  ThermometerSnowflake: () => Thermometer_snowflake,
  ThermometerSun: () => Thermometer_sun,
  ThumbsDown: () => Thumbs_down,
  ThumbsUp: () => Thumbs_up,
  Ticket: () => Ticket,
  TicketCheck: () => Ticket_check,
  TicketMinus: () => Ticket_minus,
  TicketPercent: () => Ticket_percent,
  TicketPlus: () => Ticket_plus,
  TicketSlash: () => Ticket_slash,
  TicketX: () => Ticket_x,
  Tickets: () => Tickets,
  TicketsPlane: () => Tickets_plane,
  Timer: () => Timer,
  TimerOff: () => Timer_off,
  TimerReset: () => Timer_reset,
  ToggleLeft: () => Toggle_left,
  ToggleRight: () => Toggle_right,
  Tornado: () => Tornado,
  Torus: () => Torus,
  Touchpad: () => Touchpad,
  TouchpadOff: () => Touchpad_off,
  TowerControl: () => Tower_control,
  ToyBrick: () => Toy_brick,
  Tractor: () => Tractor,
  TrafficCone: () => Traffic_cone,
  TrainFront: () => Train_front,
  TrainFrontTunnel: () => Train_front_tunnel,
  TrainTrack: () => Train_track,
  TramFront: () => Tram_front,
  Trash: () => Trash,
  Trash2: () => Trash_2,
  TreeDeciduous: () => Tree_deciduous,
  TreePalm: () => Tree_palm,
  TreePine: () => Tree_pine,
  Trees: () => Trees,
  Trello: () => Trello,
  TrendingDown: () => Trending_down,
  TrendingUp: () => Trending_up,
  TrendingUpDown: () => Trending_up_down,
  Triangle: () => Triangle,
  TriangleAlert: () => Triangle_alert,
  TriangleRight: () => Triangle_right,
  Trophy: () => Trophy,
  Truck: () => Truck,
  Turtle: () => Turtle,
  Tv: () => Tv,
  TvMinimal: () => Tv_minimal,
  TvMinimalPlay: () => Tv_minimal_play,
  Twitch: () => Twitch,
  Twitter: () => Twitter,
  Type: () => Type,
  TypeOutline: () => Type_outline,
  Umbrella: () => Umbrella,
  UmbrellaOff: () => Umbrella_off,
  Underline: () => Underline,
  Undo: () => Undo,
  Undo2: () => Undo_2,
  UndoDot: () => Undo_dot,
  UnfoldHorizontal: () => Unfold_horizontal,
  UnfoldVertical: () => Unfold_vertical,
  Ungroup: () => Ungroup,
  University: () => University,
  Unlink: () => Unlink,
  Unlink2: () => Unlink_2,
  Unplug: () => Unplug,
  Upload: () => Upload,
  Usb: () => Usb,
  User: () => User,
  UserCheck: () => User_check,
  UserCog: () => User_cog,
  UserMinus: () => User_minus,
  UserPen: () => User_pen,
  UserPlus: () => User_plus,
  UserRound: () => User_round,
  UserRoundCheck: () => User_round_check,
  UserRoundCog: () => User_round_cog,
  UserRoundMinus: () => User_round_minus,
  UserRoundPen: () => User_round_pen,
  UserRoundPlus: () => User_round_plus,
  UserRoundSearch: () => User_round_search,
  UserRoundX: () => User_round_x,
  UserSearch: () => User_search,
  UserX: () => User_x,
  Users: () => Users,
  UsersRound: () => Users_round,
  Utensils: () => Utensils,
  UtensilsCrossed: () => Utensils_crossed,
  UtilityPole: () => Utility_pole,
  Variable: () => Variable,
  Vault: () => Vault,
  Vegan: () => Vegan,
  VenetianMask: () => Venetian_mask,
  Vibrate: () => Vibrate,
  VibrateOff: () => Vibrate_off,
  Video: () => Video,
  VideoOff: () => Video_off,
  Videotape: () => Videotape,
  View: () => View,
  Voicemail: () => Voicemail,
  Volleyball: () => Volleyball,
  Volume: () => Volume,
  Volume1: () => Volume_1,
  Volume2: () => Volume_2,
  VolumeOff: () => Volume_off,
  VolumeX: () => Volume_x,
  Vote: () => Vote,
  Wallet: () => Wallet,
  WalletCards: () => Wallet_cards,
  WalletMinimal: () => Wallet_minimal,
  Wallpaper: () => Wallpaper,
  Wand: () => Wand,
  WandSparkles: () => Wand_sparkles,
  Warehouse: () => Warehouse,
  WashingMachine: () => Washing_machine,
  Watch: () => Watch,
  Waves: () => Waves,
  Waypoints: () => Waypoints,
  Webcam: () => Webcam,
  Webhook: () => Webhook,
  WebhookOff: () => Webhook_off,
  Weight: () => Weight,
  Wheat: () => Wheat,
  WheatOff: () => Wheat_off,
  WholeWord: () => Whole_word,
  Wifi: () => Wifi,
  WifiHigh: () => Wifi_high,
  WifiLow: () => Wifi_low,
  WifiOff: () => Wifi_off,
  WifiZero: () => Wifi_zero,
  Wind: () => Wind,
  WindArrowDown: () => Wind_arrow_down,
  Wine: () => Wine,
  WineOff: () => Wine_off,
  Workflow: () => Workflow,
  Worm: () => Worm,
  WrapText: () => Wrap_text,
  Wrench: () => Wrench,
  X: () => X,
  Youtube: () => Youtube,
  Zap: () => Zap,
  ZapOff: () => Zap_off,
  ZoomIn: () => Zoom_in,
  ZoomOut: () => Zoom_out
});

// node_modules/lucide-svelte/dist/defaultAttributes.js
var defaultAttributes = {
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": 2,
  "stroke-linecap": "round",
  "stroke-linejoin": "round"
};
var defaultAttributes_default = defaultAttributes;

// node_modules/lucide-svelte/dist/Icon.svelte
mark_module_start();
Icon[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/Icon.svelte";
var root = add_locations(ns_template(`<svg><!><!></svg>`), Icon[FILENAME], [[14, 0]]);
function Icon($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  const $$restProps = legacy_rest_props($$sanitized_props, [
    "name",
    "color",
    "size",
    "strokeWidth",
    "absoluteStrokeWidth",
    "iconNode"
  ]);
  push($$props, false, Icon);
  let name = prop($$props, "name", 8, void 0);
  let color = prop($$props, "color", 8, "currentColor");
  let size = prop($$props, "size", 8, 24);
  let strokeWidth = prop($$props, "strokeWidth", 8, 2);
  let absoluteStrokeWidth = prop($$props, "absoluteStrokeWidth", 8, false);
  let iconNode = prop($$props, "iconNode", 24, () => []);
  const mergeClasses = (...classes) => classes.filter((className, index2, array) => {
    return Boolean(className) && strict_equals(array.indexOf(className), index2);
  }).join(" ");
  init();
  var svg = root();
  let attributes;
  var node = child(svg);
  each(node, 1, iconNode, index, ($$anchor2, $$item) => {
    let tag = () => get($$item)[0];
    tag();
    let attrs = () => get($$item)[1];
    attrs();
    var fragment = comment();
    var node_1 = first_child(fragment);
    validate_dynamic_element_tag(tag);
    element(
      node_1,
      tag,
      true,
      ($$element, $$anchor3) => {
        let attributes_1;
        template_effect(() => attributes_1 = set_attributes($$element, attributes_1, { ...attrs() }, void 0, $$element.namespaceURI !== NAMESPACE_SVG, $$element.nodeName.includes("-")));
      },
      void 0,
      [35, 4]
    );
    append($$anchor2, fragment);
  });
  var node_2 = sibling(node);
  slot(node_2, $$props, "default", {}, null);
  reset(svg);
  template_effect(() => attributes = set_attributes(
    svg,
    attributes,
    {
      ...defaultAttributes_default,
      ...$$restProps,
      width: size(),
      height: size(),
      stroke: color(),
      "stroke-width": absoluteStrokeWidth() ? Number(strokeWidth()) * 24 / Number(size()) : strokeWidth(),
      class: mergeClasses("lucide-icon", "lucide", name() ? `lucide-${name()}` : "", $$sanitized_props.class)
    },
    void 0,
    true
  ));
  append($$anchor, svg);
  return pop({ ...legacy_api() });
}
mark_module_end(Icon);

// node_modules/lucide-svelte/dist/icons/a-arrow-down.svelte
mark_module_start();
A_arrow_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/a-arrow-down.svelte";
function A_arrow_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, A_arrow_down);
  const iconNode = [
    ["path", { "d": "M3.5 13h6" }],
    ["path", { "d": "m2 16 4.5-9 4.5 9" }],
    ["path", { "d": "M18 7v9" }],
    ["path", { "d": "m14 12 4 4 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "a-arrow-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(A_arrow_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(A_arrow_down);

// node_modules/lucide-svelte/dist/icons/a-arrow-up.svelte
mark_module_start();
A_arrow_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/a-arrow-up.svelte";
function A_arrow_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, A_arrow_up);
  const iconNode = [
    ["path", { "d": "M3.5 13h6" }],
    ["path", { "d": "m2 16 4.5-9 4.5 9" }],
    ["path", { "d": "M18 16V7" }],
    ["path", { "d": "m14 11 4-4 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "a-arrow-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(A_arrow_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(A_arrow_up);

// node_modules/lucide-svelte/dist/icons/a-large-small.svelte
mark_module_start();
A_large_small[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/a-large-small.svelte";
function A_large_small($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, A_large_small);
  const iconNode = [
    ["path", { "d": "M21 14h-5" }],
    [
      "path",
      { "d": "M16 16v-3.5a2.5 2.5 0 0 1 5 0V16" }
    ],
    ["path", { "d": "M4.5 13h6" }],
    ["path", { "d": "m3 16 4.5-9 4.5 9" }]
  ];
  Icon($$anchor, spread_props({ name: "a-large-small" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(A_large_small, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(A_large_small);

// node_modules/lucide-svelte/dist/icons/accessibility.svelte
mark_module_start();
Accessibility[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/accessibility.svelte";
function Accessibility($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Accessibility);
  const iconNode = [
    [
      "circle",
      { "cx": "16", "cy": "4", "r": "1" }
    ],
    ["path", { "d": "m18 19 1-7-6 1" }],
    ["path", { "d": "m5 8 3-3 5.5 3-2.36 3.5" }],
    [
      "path",
      { "d": "M4.24 14.5a5 5 0 0 0 6.88 6" }
    ],
    [
      "path",
      { "d": "M13.76 17.5a5 5 0 0 0-6.88-6" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "accessibility" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Accessibility, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Accessibility);

// node_modules/lucide-svelte/dist/icons/activity.svelte
mark_module_start();
Activity[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/activity.svelte";
function Activity($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Activity);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "activity" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Activity, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Activity);

// node_modules/lucide-svelte/dist/icons/air-vent.svelte
mark_module_start();
Air_vent[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/air-vent.svelte";
function Air_vent($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Air_vent);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 12H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"
      }
    ],
    ["path", { "d": "M6 8h12" }],
    [
      "path",
      {
        "d": "M18.3 17.7a2.5 2.5 0 0 1-3.16 3.83 2.53 2.53 0 0 1-1.14-2V12"
      }
    ],
    [
      "path",
      { "d": "M6.6 15.6A2 2 0 1 0 10 17v-5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "air-vent" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Air_vent, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Air_vent);

// node_modules/lucide-svelte/dist/icons/airplay.svelte
mark_module_start();
Airplay[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/airplay.svelte";
function Airplay($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Airplay);
  const iconNode = [
    [
      "path",
      {
        "d": "M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"
      }
    ],
    ["path", { "d": "m12 15 5 6H7Z" }]
  ];
  Icon($$anchor, spread_props({ name: "airplay" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Airplay, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Airplay);

// node_modules/lucide-svelte/dist/icons/alarm-clock-check.svelte
mark_module_start();
Alarm_clock_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/alarm-clock-check.svelte";
function Alarm_clock_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Alarm_clock_check);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "13", "r": "8" }
    ],
    ["path", { "d": "M5 3 2 6" }],
    ["path", { "d": "m22 6-3-3" }],
    ["path", { "d": "M6.38 18.7 4 21" }],
    ["path", { "d": "M17.64 18.67 20 21" }],
    ["path", { "d": "m9 13 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "alarm-clock-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Alarm_clock_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Alarm_clock_check);

// node_modules/lucide-svelte/dist/icons/alarm-clock-minus.svelte
mark_module_start();
Alarm_clock_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/alarm-clock-minus.svelte";
function Alarm_clock_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Alarm_clock_minus);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "13", "r": "8" }
    ],
    ["path", { "d": "M5 3 2 6" }],
    ["path", { "d": "m22 6-3-3" }],
    ["path", { "d": "M6.38 18.7 4 21" }],
    ["path", { "d": "M17.64 18.67 20 21" }],
    ["path", { "d": "M9 13h6" }]
  ];
  Icon($$anchor, spread_props({ name: "alarm-clock-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Alarm_clock_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Alarm_clock_minus);

// node_modules/lucide-svelte/dist/icons/alarm-clock-off.svelte
mark_module_start();
Alarm_clock_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/alarm-clock-off.svelte";
function Alarm_clock_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Alarm_clock_off);
  const iconNode = [
    [
      "path",
      { "d": "M6.87 6.87a8 8 0 1 0 11.26 11.26" }
    ],
    [
      "path",
      { "d": "M19.9 14.25a8 8 0 0 0-9.15-9.15" }
    ],
    ["path", { "d": "m22 6-3-3" }],
    ["path", { "d": "M6.26 18.67 4 21" }],
    ["path", { "d": "m2 2 20 20" }],
    ["path", { "d": "M4 4 2 6" }]
  ];
  Icon($$anchor, spread_props({ name: "alarm-clock-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Alarm_clock_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Alarm_clock_off);

// node_modules/lucide-svelte/dist/icons/alarm-clock-plus.svelte
mark_module_start();
Alarm_clock_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/alarm-clock-plus.svelte";
function Alarm_clock_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Alarm_clock_plus);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "13", "r": "8" }
    ],
    ["path", { "d": "M5 3 2 6" }],
    ["path", { "d": "m22 6-3-3" }],
    ["path", { "d": "M6.38 18.7 4 21" }],
    ["path", { "d": "M17.64 18.67 20 21" }],
    ["path", { "d": "M12 10v6" }],
    ["path", { "d": "M9 13h6" }]
  ];
  Icon($$anchor, spread_props({ name: "alarm-clock-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Alarm_clock_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Alarm_clock_plus);

// node_modules/lucide-svelte/dist/icons/alarm-clock.svelte
mark_module_start();
Alarm_clock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/alarm-clock.svelte";
function Alarm_clock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Alarm_clock);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "13", "r": "8" }
    ],
    ["path", { "d": "M12 9v4l2 2" }],
    ["path", { "d": "M5 3 2 6" }],
    ["path", { "d": "m22 6-3-3" }],
    ["path", { "d": "M6.38 18.7 4 21" }],
    ["path", { "d": "M17.64 18.67 20 21" }]
  ];
  Icon($$anchor, spread_props({ name: "alarm-clock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Alarm_clock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Alarm_clock);

// node_modules/lucide-svelte/dist/icons/alarm-smoke.svelte
mark_module_start();
Alarm_smoke[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/alarm-smoke.svelte";
function Alarm_smoke($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Alarm_smoke);
  const iconNode = [
    ["path", { "d": "M11 21c0-2.5 2-2.5 2-5" }],
    ["path", { "d": "M16 21c0-2.5 2-2.5 2-5" }],
    [
      "path",
      {
        "d": "m19 8-.8 3a1.25 1.25 0 0 1-1.2 1H7a1.25 1.25 0 0 1-1.2-1L5 8"
      }
    ],
    [
      "path",
      {
        "d": "M21 3a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a1 1 0 0 1 1-1z"
      }
    ],
    ["path", { "d": "M6 21c0-2.5 2-2.5 2-5" }]
  ];
  Icon($$anchor, spread_props({ name: "alarm-smoke" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Alarm_smoke, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Alarm_smoke);

// node_modules/lucide-svelte/dist/icons/album.svelte
mark_module_start();
Album[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/album.svelte";
function Album($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Album);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "polyline",
      { "points": "11 3 11 11 14 8 17 11 17 3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "album" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Album, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Album);

// node_modules/lucide-svelte/dist/icons/align-center-horizontal.svelte
mark_module_start();
Align_center_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-center-horizontal.svelte";
function Align_center_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_center_horizontal);
  const iconNode = [
    ["path", { "d": "M2 12h20" }],
    [
      "path",
      {
        "d": "M10 16v4a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-4"
      }
    ],
    [
      "path",
      { "d": "M10 8V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4" }
    ],
    [
      "path",
      {
        "d": "M20 16v1a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-1"
      }
    ],
    [
      "path",
      { "d": "M14 8V7c0-1.1.9-2 2-2h2a2 2 0 0 1 2 2v1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "align-center-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_center_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_center_horizontal);

// node_modules/lucide-svelte/dist/icons/align-center-vertical.svelte
mark_module_start();
Align_center_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-center-vertical.svelte";
function Align_center_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_center_vertical);
  const iconNode = [
    ["path", { "d": "M12 2v20" }],
    [
      "path",
      { "d": "M8 10H4a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h4" }
    ],
    [
      "path",
      {
        "d": "M16 10h4a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-4"
      }
    ],
    [
      "path",
      {
        "d": "M8 20H7a2 2 0 0 1-2-2v-2c0-1.1.9-2 2-2h1"
      }
    ],
    [
      "path",
      {
        "d": "M16 14h1a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "align-center-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_center_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_center_vertical);

// node_modules/lucide-svelte/dist/icons/align-center.svelte
mark_module_start();
Align_center[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-center.svelte";
function Align_center($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_center);
  const iconNode = [
    ["path", { "d": "M17 12H7" }],
    ["path", { "d": "M19 18H5" }],
    ["path", { "d": "M21 6H3" }]
  ];
  Icon($$anchor, spread_props({ name: "align-center" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_center, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_center);

// node_modules/lucide-svelte/dist/icons/align-end-horizontal.svelte
mark_module_start();
Align_end_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-end-horizontal.svelte";
function Align_end_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_end_horizontal);
  const iconNode = [
    [
      "rect",
      {
        "width": "6",
        "height": "16",
        "x": "4",
        "y": "2",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "6",
        "height": "9",
        "x": "14",
        "y": "9",
        "rx": "2"
      }
    ],
    ["path", { "d": "M22 22H2" }]
  ];
  Icon($$anchor, spread_props({ name: "align-end-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_end_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_end_horizontal);

// node_modules/lucide-svelte/dist/icons/align-end-vertical.svelte
mark_module_start();
Align_end_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-end-vertical.svelte";
function Align_end_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_end_vertical);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "6",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "9",
        "height": "6",
        "x": "9",
        "y": "14",
        "rx": "2"
      }
    ],
    ["path", { "d": "M22 22V2" }]
  ];
  Icon($$anchor, spread_props({ name: "align-end-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_end_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_end_vertical);

// node_modules/lucide-svelte/dist/icons/align-horizontal-distribute-center.svelte
mark_module_start();
Align_horizontal_distribute_center[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-horizontal-distribute-center.svelte";
function Align_horizontal_distribute_center($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_horizontal_distribute_center);
  const iconNode = [
    [
      "rect",
      {
        "width": "6",
        "height": "14",
        "x": "4",
        "y": "5",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "6",
        "height": "10",
        "x": "14",
        "y": "7",
        "rx": "2"
      }
    ],
    ["path", { "d": "M17 22v-5" }],
    ["path", { "d": "M17 7V2" }],
    ["path", { "d": "M7 22v-3" }],
    ["path", { "d": "M7 5V2" }]
  ];
  Icon($$anchor, spread_props({ name: "align-horizontal-distribute-center" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_horizontal_distribute_center, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_horizontal_distribute_center);

// node_modules/lucide-svelte/dist/icons/align-horizontal-distribute-end.svelte
mark_module_start();
Align_horizontal_distribute_end[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-horizontal-distribute-end.svelte";
function Align_horizontal_distribute_end($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_horizontal_distribute_end);
  const iconNode = [
    [
      "rect",
      {
        "width": "6",
        "height": "14",
        "x": "4",
        "y": "5",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "6",
        "height": "10",
        "x": "14",
        "y": "7",
        "rx": "2"
      }
    ],
    ["path", { "d": "M10 2v20" }],
    ["path", { "d": "M20 2v20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-horizontal-distribute-end" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_horizontal_distribute_end, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_horizontal_distribute_end);

// node_modules/lucide-svelte/dist/icons/align-horizontal-distribute-start.svelte
mark_module_start();
Align_horizontal_distribute_start[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-horizontal-distribute-start.svelte";
function Align_horizontal_distribute_start($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_horizontal_distribute_start);
  const iconNode = [
    [
      "rect",
      {
        "width": "6",
        "height": "14",
        "x": "4",
        "y": "5",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "6",
        "height": "10",
        "x": "14",
        "y": "7",
        "rx": "2"
      }
    ],
    ["path", { "d": "M4 2v20" }],
    ["path", { "d": "M14 2v20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-horizontal-distribute-start" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_horizontal_distribute_start, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_horizontal_distribute_start);

// node_modules/lucide-svelte/dist/icons/align-horizontal-justify-center.svelte
mark_module_start();
Align_horizontal_justify_center[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-horizontal-justify-center.svelte";
function Align_horizontal_justify_center($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_horizontal_justify_center);
  const iconNode = [
    [
      "rect",
      {
        "width": "6",
        "height": "14",
        "x": "2",
        "y": "5",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "6",
        "height": "10",
        "x": "16",
        "y": "7",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 2v20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-horizontal-justify-center" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_horizontal_justify_center, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_horizontal_justify_center);

// node_modules/lucide-svelte/dist/icons/align-horizontal-justify-end.svelte
mark_module_start();
Align_horizontal_justify_end[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-horizontal-justify-end.svelte";
function Align_horizontal_justify_end($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_horizontal_justify_end);
  const iconNode = [
    [
      "rect",
      {
        "width": "6",
        "height": "14",
        "x": "2",
        "y": "5",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "6",
        "height": "10",
        "x": "12",
        "y": "7",
        "rx": "2"
      }
    ],
    ["path", { "d": "M22 2v20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-horizontal-justify-end" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_horizontal_justify_end, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_horizontal_justify_end);

// node_modules/lucide-svelte/dist/icons/align-horizontal-justify-start.svelte
mark_module_start();
Align_horizontal_justify_start[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-horizontal-justify-start.svelte";
function Align_horizontal_justify_start($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_horizontal_justify_start);
  const iconNode = [
    [
      "rect",
      {
        "width": "6",
        "height": "14",
        "x": "6",
        "y": "5",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "6",
        "height": "10",
        "x": "16",
        "y": "7",
        "rx": "2"
      }
    ],
    ["path", { "d": "M2 2v20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-horizontal-justify-start" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_horizontal_justify_start, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_horizontal_justify_start);

// node_modules/lucide-svelte/dist/icons/align-horizontal-space-around.svelte
mark_module_start();
Align_horizontal_space_around[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-horizontal-space-around.svelte";
function Align_horizontal_space_around($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_horizontal_space_around);
  const iconNode = [
    [
      "rect",
      {
        "width": "6",
        "height": "10",
        "x": "9",
        "y": "7",
        "rx": "2"
      }
    ],
    ["path", { "d": "M4 22V2" }],
    ["path", { "d": "M20 22V2" }]
  ];
  Icon($$anchor, spread_props({ name: "align-horizontal-space-around" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_horizontal_space_around, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_horizontal_space_around);

// node_modules/lucide-svelte/dist/icons/align-horizontal-space-between.svelte
mark_module_start();
Align_horizontal_space_between[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-horizontal-space-between.svelte";
function Align_horizontal_space_between($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_horizontal_space_between);
  const iconNode = [
    [
      "rect",
      {
        "width": "6",
        "height": "14",
        "x": "3",
        "y": "5",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "6",
        "height": "10",
        "x": "15",
        "y": "7",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 2v20" }],
    ["path", { "d": "M21 2v20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-horizontal-space-between" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_horizontal_space_between, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_horizontal_space_between);

// node_modules/lucide-svelte/dist/icons/align-justify.svelte
mark_module_start();
Align_justify[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-justify.svelte";
function Align_justify($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_justify);
  const iconNode = [
    ["path", { "d": "M3 12h18" }],
    ["path", { "d": "M3 18h18" }],
    ["path", { "d": "M3 6h18" }]
  ];
  Icon($$anchor, spread_props({ name: "align-justify" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_justify, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_justify);

// node_modules/lucide-svelte/dist/icons/align-left.svelte
mark_module_start();
Align_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-left.svelte";
function Align_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_left);
  const iconNode = [
    ["path", { "d": "M15 12H3" }],
    ["path", { "d": "M17 18H3" }],
    ["path", { "d": "M21 6H3" }]
  ];
  Icon($$anchor, spread_props({ name: "align-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_left);

// node_modules/lucide-svelte/dist/icons/align-right.svelte
mark_module_start();
Align_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-right.svelte";
function Align_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_right);
  const iconNode = [
    ["path", { "d": "M21 12H9" }],
    ["path", { "d": "M21 18H7" }],
    ["path", { "d": "M21 6H3" }]
  ];
  Icon($$anchor, spread_props({ name: "align-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_right);

// node_modules/lucide-svelte/dist/icons/align-start-horizontal.svelte
mark_module_start();
Align_start_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-start-horizontal.svelte";
function Align_start_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_start_horizontal);
  const iconNode = [
    [
      "rect",
      {
        "width": "6",
        "height": "16",
        "x": "4",
        "y": "6",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "6",
        "height": "9",
        "x": "14",
        "y": "6",
        "rx": "2"
      }
    ],
    ["path", { "d": "M22 2H2" }]
  ];
  Icon($$anchor, spread_props({ name: "align-start-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_start_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_start_horizontal);

// node_modules/lucide-svelte/dist/icons/align-start-vertical.svelte
mark_module_start();
Align_start_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-start-vertical.svelte";
function Align_start_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_start_vertical);
  const iconNode = [
    [
      "rect",
      {
        "width": "9",
        "height": "6",
        "x": "6",
        "y": "14",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "16",
        "height": "6",
        "x": "6",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M2 2v20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-start-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_start_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_start_vertical);

// node_modules/lucide-svelte/dist/icons/align-vertical-distribute-center.svelte
mark_module_start();
Align_vertical_distribute_center[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-vertical-distribute-center.svelte";
function Align_vertical_distribute_center($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_vertical_distribute_center);
  const iconNode = [
    ["path", { "d": "M22 17h-3" }],
    ["path", { "d": "M22 7h-5" }],
    ["path", { "d": "M5 17H2" }],
    ["path", { "d": "M7 7H2" }],
    [
      "rect",
      {
        "x": "5",
        "y": "14",
        "width": "14",
        "height": "6",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "x": "7",
        "y": "4",
        "width": "10",
        "height": "6",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "align-vertical-distribute-center" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_vertical_distribute_center, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_vertical_distribute_center);

// node_modules/lucide-svelte/dist/icons/align-vertical-distribute-end.svelte
mark_module_start();
Align_vertical_distribute_end[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-vertical-distribute-end.svelte";
function Align_vertical_distribute_end($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_vertical_distribute_end);
  const iconNode = [
    [
      "rect",
      {
        "width": "14",
        "height": "6",
        "x": "5",
        "y": "14",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "10",
        "height": "6",
        "x": "7",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M2 20h20" }],
    ["path", { "d": "M2 10h20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-vertical-distribute-end" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_vertical_distribute_end, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_vertical_distribute_end);

// node_modules/lucide-svelte/dist/icons/align-vertical-distribute-start.svelte
mark_module_start();
Align_vertical_distribute_start[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-vertical-distribute-start.svelte";
function Align_vertical_distribute_start($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_vertical_distribute_start);
  const iconNode = [
    [
      "rect",
      {
        "width": "14",
        "height": "6",
        "x": "5",
        "y": "14",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "10",
        "height": "6",
        "x": "7",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M2 14h20" }],
    ["path", { "d": "M2 4h20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-vertical-distribute-start" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_vertical_distribute_start, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_vertical_distribute_start);

// node_modules/lucide-svelte/dist/icons/align-vertical-justify-center.svelte
mark_module_start();
Align_vertical_justify_center[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-vertical-justify-center.svelte";
function Align_vertical_justify_center($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_vertical_justify_center);
  const iconNode = [
    [
      "rect",
      {
        "width": "14",
        "height": "6",
        "x": "5",
        "y": "16",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "10",
        "height": "6",
        "x": "7",
        "y": "2",
        "rx": "2"
      }
    ],
    ["path", { "d": "M2 12h20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-vertical-justify-center" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_vertical_justify_center, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_vertical_justify_center);

// node_modules/lucide-svelte/dist/icons/align-vertical-justify-end.svelte
mark_module_start();
Align_vertical_justify_end[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-vertical-justify-end.svelte";
function Align_vertical_justify_end($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_vertical_justify_end);
  const iconNode = [
    [
      "rect",
      {
        "width": "14",
        "height": "6",
        "x": "5",
        "y": "12",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "10",
        "height": "6",
        "x": "7",
        "y": "2",
        "rx": "2"
      }
    ],
    ["path", { "d": "M2 22h20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-vertical-justify-end" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_vertical_justify_end, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_vertical_justify_end);

// node_modules/lucide-svelte/dist/icons/align-vertical-justify-start.svelte
mark_module_start();
Align_vertical_justify_start[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-vertical-justify-start.svelte";
function Align_vertical_justify_start($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_vertical_justify_start);
  const iconNode = [
    [
      "rect",
      {
        "width": "14",
        "height": "6",
        "x": "5",
        "y": "16",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "10",
        "height": "6",
        "x": "7",
        "y": "6",
        "rx": "2"
      }
    ],
    ["path", { "d": "M2 2h20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-vertical-justify-start" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_vertical_justify_start, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_vertical_justify_start);

// node_modules/lucide-svelte/dist/icons/align-vertical-space-around.svelte
mark_module_start();
Align_vertical_space_around[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-vertical-space-around.svelte";
function Align_vertical_space_around($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_vertical_space_around);
  const iconNode = [
    [
      "rect",
      {
        "width": "10",
        "height": "6",
        "x": "7",
        "y": "9",
        "rx": "2"
      }
    ],
    ["path", { "d": "M22 20H2" }],
    ["path", { "d": "M22 4H2" }]
  ];
  Icon($$anchor, spread_props({ name: "align-vertical-space-around" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_vertical_space_around, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_vertical_space_around);

// node_modules/lucide-svelte/dist/icons/align-vertical-space-between.svelte
mark_module_start();
Align_vertical_space_between[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/align-vertical-space-between.svelte";
function Align_vertical_space_between($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Align_vertical_space_between);
  const iconNode = [
    [
      "rect",
      {
        "width": "14",
        "height": "6",
        "x": "5",
        "y": "15",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "10",
        "height": "6",
        "x": "7",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M2 21h20" }],
    ["path", { "d": "M2 3h20" }]
  ];
  Icon($$anchor, spread_props({ name: "align-vertical-space-between" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Align_vertical_space_between, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Align_vertical_space_between);

// node_modules/lucide-svelte/dist/icons/ambulance.svelte
mark_module_start();
Ambulance[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ambulance.svelte";
function Ambulance($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ambulance);
  const iconNode = [
    ["path", { "d": "M10 10H6" }],
    [
      "path",
      {
        "d": "M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2"
      }
    ],
    [
      "path",
      {
        "d": "M19 18h2a1 1 0 0 0 1-1v-3.28a1 1 0 0 0-.684-.948l-1.923-.641a1 1 0 0 1-.578-.502l-1.539-3.076A1 1 0 0 0 16.382 8H14"
      }
    ],
    ["path", { "d": "M8 8v4" }],
    ["path", { "d": "M9 18h6" }],
    [
      "circle",
      { "cx": "17", "cy": "18", "r": "2" }
    ],
    [
      "circle",
      { "cx": "7", "cy": "18", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ambulance" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ambulance, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ambulance);

// node_modules/lucide-svelte/dist/icons/ampersand.svelte
mark_module_start();
Ampersand[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ampersand.svelte";
function Ampersand($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ampersand);
  const iconNode = [
    [
      "path",
      {
        "d": "M17.5 12c0 4.4-3.6 8-8 8A4.5 4.5 0 0 1 5 15.5c0-6 8-4 8-8.5a3 3 0 1 0-6 0c0 3 2.5 8.5 12 13"
      }
    ],
    ["path", { "d": "M16 12h3" }]
  ];
  Icon($$anchor, spread_props({ name: "ampersand" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ampersand, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ampersand);

// node_modules/lucide-svelte/dist/icons/ampersands.svelte
mark_module_start();
Ampersands[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ampersands.svelte";
function Ampersands($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ampersands);
  const iconNode = [
    [
      "path",
      {
        "d": "M10 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5"
      }
    ],
    [
      "path",
      {
        "d": "M22 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ampersands" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ampersands, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ampersands);

// node_modules/lucide-svelte/dist/icons/amphora.svelte
mark_module_start();
Amphora[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/amphora.svelte";
function Amphora($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Amphora);
  const iconNode = [
    [
      "path",
      {
        "d": "M10 2v5.632c0 .424-.272.795-.653.982A6 6 0 0 0 6 14c.006 4 3 7 5 8"
      }
    ],
    [
      "path",
      { "d": "M10 5H8a2 2 0 0 0 0 4h.68" }
    ],
    [
      "path",
      {
        "d": "M14 2v5.632c0 .424.272.795.652.982A6 6 0 0 1 18 14c0 4-3 7-5 8"
      }
    ],
    [
      "path",
      { "d": "M14 5h2a2 2 0 0 1 0 4h-.68" }
    ],
    ["path", { "d": "M18 22H6" }],
    ["path", { "d": "M9 2h6" }]
  ];
  Icon($$anchor, spread_props({ name: "amphora" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Amphora, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Amphora);

// node_modules/lucide-svelte/dist/icons/anchor.svelte
mark_module_start();
Anchor[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/anchor.svelte";
function Anchor($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Anchor);
  const iconNode = [
    ["path", { "d": "M12 22V8" }],
    [
      "path",
      { "d": "M5 12H2a10 10 0 0 0 20 0h-3" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "5", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "anchor" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Anchor, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Anchor);

// node_modules/lucide-svelte/dist/icons/angry.svelte
mark_module_start();
Angry[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/angry.svelte";
function Angry($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Angry);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      { "d": "M16 16s-1.5-2-4-2-4 2-4 2" }
    ],
    ["path", { "d": "M7.5 8 10 9" }],
    ["path", { "d": "m14 9 2.5-1" }],
    ["path", { "d": "M9 10h.01" }],
    ["path", { "d": "M15 10h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "angry" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Angry, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Angry);

// node_modules/lucide-svelte/dist/icons/annoyed.svelte
mark_module_start();
Annoyed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/annoyed.svelte";
function Annoyed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Annoyed);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "M8 15h8" }],
    ["path", { "d": "M8 9h2" }],
    ["path", { "d": "M14 9h2" }]
  ];
  Icon($$anchor, spread_props({ name: "annoyed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Annoyed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Annoyed);

// node_modules/lucide-svelte/dist/icons/antenna.svelte
mark_module_start();
Antenna[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/antenna.svelte";
function Antenna($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Antenna);
  const iconNode = [
    ["path", { "d": "M2 12 7 2" }],
    ["path", { "d": "m7 12 5-10" }],
    ["path", { "d": "m12 12 5-10" }],
    ["path", { "d": "m17 12 5-10" }],
    ["path", { "d": "M4.5 7h15" }],
    ["path", { "d": "M12 16v6" }]
  ];
  Icon($$anchor, spread_props({ name: "antenna" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Antenna, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Antenna);

// node_modules/lucide-svelte/dist/icons/anvil.svelte
mark_module_start();
Anvil[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/anvil.svelte";
function Anvil($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Anvil);
  const iconNode = [
    [
      "path",
      { "d": "M7 10H6a4 4 0 0 1-4-4 1 1 0 0 1 1-1h4" }
    ],
    [
      "path",
      {
        "d": "M7 5a1 1 0 0 1 1-1h13a1 1 0 0 1 1 1 7 7 0 0 1-7 7H8a1 1 0 0 1-1-1z"
      }
    ],
    ["path", { "d": "M9 12v5" }],
    ["path", { "d": "M15 12v5" }],
    [
      "path",
      {
        "d": "M5 20a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3 1 1 0 0 1-1 1H6a1 1 0 0 1-1-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "anvil" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Anvil, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Anvil);

// node_modules/lucide-svelte/dist/icons/aperture.svelte
mark_module_start();
Aperture[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/aperture.svelte";
function Aperture($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Aperture);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m14.31 8 5.74 9.94" }],
    ["path", { "d": "M9.69 8h11.48" }],
    ["path", { "d": "m7.38 12 5.74-9.94" }],
    ["path", { "d": "M9.69 16 3.95 6.06" }],
    ["path", { "d": "M14.31 16H2.83" }],
    ["path", { "d": "m16.62 12-5.74 9.94" }]
  ];
  Icon($$anchor, spread_props({ name: "aperture" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Aperture, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Aperture);

// node_modules/lucide-svelte/dist/icons/app-window-mac.svelte
mark_module_start();
App_window_mac[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/app-window-mac.svelte";
function App_window_mac($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, App_window_mac);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "16",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M6 8h.01" }],
    ["path", { "d": "M10 8h.01" }],
    ["path", { "d": "M14 8h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "app-window-mac" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(App_window_mac, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(App_window_mac);

// node_modules/lucide-svelte/dist/icons/app-window.svelte
mark_module_start();
App_window[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/app-window.svelte";
function App_window($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, App_window);
  const iconNode = [
    [
      "rect",
      {
        "x": "2",
        "y": "4",
        "width": "20",
        "height": "16",
        "rx": "2"
      }
    ],
    ["path", { "d": "M10 4v4" }],
    ["path", { "d": "M2 8h20" }],
    ["path", { "d": "M6 4v4" }]
  ];
  Icon($$anchor, spread_props({ name: "app-window" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(App_window, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(App_window);

// node_modules/lucide-svelte/dist/icons/apple.svelte
mark_module_start();
Apple[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/apple.svelte";
function Apple($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Apple);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 20.94c1.5 0 2.75 1.06 4 1.06 3 0 6-8 6-12.22A4.91 4.91 0 0 0 17 5c-2.22 0-4 1.44-5 2-1-.56-2.78-2-5-2a4.9 4.9 0 0 0-5 4.78C2 14 5 22 8 22c1.25 0 2.5-1.06 4-1.06Z"
      }
    ],
    ["path", { "d": "M10 2c1 .5 2 2 2 5" }]
  ];
  Icon($$anchor, spread_props({ name: "apple" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Apple, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Apple);

// node_modules/lucide-svelte/dist/icons/archive-restore.svelte
mark_module_start();
Archive_restore[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/archive-restore.svelte";
function Archive_restore($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Archive_restore);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "5",
        "x": "2",
        "y": "3",
        "rx": "1"
      }
    ],
    ["path", { "d": "M4 8v11a2 2 0 0 0 2 2h2" }],
    [
      "path",
      { "d": "M20 8v11a2 2 0 0 1-2 2h-2" }
    ],
    ["path", { "d": "m9 15 3-3 3 3" }],
    ["path", { "d": "M12 12v9" }]
  ];
  Icon($$anchor, spread_props({ name: "archive-restore" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Archive_restore, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Archive_restore);

// node_modules/lucide-svelte/dist/icons/archive-x.svelte
mark_module_start();
Archive_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/archive-x.svelte";
function Archive_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Archive_x);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "5",
        "x": "2",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "path",
      {
        "d": "M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8"
      }
    ],
    ["path", { "d": "m9.5 17 5-5" }],
    ["path", { "d": "m9.5 12 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "archive-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Archive_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Archive_x);

// node_modules/lucide-svelte/dist/icons/archive.svelte
mark_module_start();
Archive[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/archive.svelte";
function Archive($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Archive);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "5",
        "x": "2",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "path",
      {
        "d": "M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8"
      }
    ],
    ["path", { "d": "M10 12h4" }]
  ];
  Icon($$anchor, spread_props({ name: "archive" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Archive, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Archive);

// node_modules/lucide-svelte/dist/icons/armchair.svelte
mark_module_start();
Armchair[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/armchair.svelte";
function Armchair($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Armchair);
  const iconNode = [
    [
      "path",
      { "d": "M19 9V6a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v3" }
    ],
    [
      "path",
      {
        "d": "M3 16a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v1.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V11a2 2 0 0 0-4 0z"
      }
    ],
    ["path", { "d": "M5 18v2" }],
    ["path", { "d": "M19 18v2" }]
  ];
  Icon($$anchor, spread_props({ name: "armchair" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Armchair, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Armchair);

// node_modules/lucide-svelte/dist/icons/arrow-big-down-dash.svelte
mark_module_start();
Arrow_big_down_dash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-big-down-dash.svelte";
function Arrow_big_down_dash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_big_down_dash);
  const iconNode = [
    ["path", { "d": "M15 5H9" }],
    ["path", { "d": "M15 9v3h4l-7 7-7-7h4V9z" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-big-down-dash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_big_down_dash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_big_down_dash);

// node_modules/lucide-svelte/dist/icons/arrow-big-down.svelte
mark_module_start();
Arrow_big_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-big-down.svelte";
function Arrow_big_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_big_down);
  const iconNode = [
    [
      "path",
      { "d": "M15 6v6h4l-7 7-7-7h4V6h6z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "arrow-big-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_big_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_big_down);

// node_modules/lucide-svelte/dist/icons/arrow-big-left-dash.svelte
mark_module_start();
Arrow_big_left_dash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-big-left-dash.svelte";
function Arrow_big_left_dash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_big_left_dash);
  const iconNode = [
    ["path", { "d": "M19 15V9" }],
    [
      "path",
      { "d": "M15 15h-3v4l-7-7 7-7v4h3v6z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "arrow-big-left-dash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_big_left_dash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_big_left_dash);

// node_modules/lucide-svelte/dist/icons/arrow-big-left.svelte
mark_module_start();
Arrow_big_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-big-left.svelte";
function Arrow_big_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_big_left);
  const iconNode = [
    [
      "path",
      { "d": "M18 15h-6v4l-7-7 7-7v4h6v6z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "arrow-big-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_big_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_big_left);

// node_modules/lucide-svelte/dist/icons/arrow-big-right-dash.svelte
mark_module_start();
Arrow_big_right_dash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-big-right-dash.svelte";
function Arrow_big_right_dash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_big_right_dash);
  const iconNode = [
    ["path", { "d": "M5 9v6" }],
    ["path", { "d": "M9 9h3V5l7 7-7 7v-4H9V9z" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-big-right-dash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_big_right_dash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_big_right_dash);

// node_modules/lucide-svelte/dist/icons/arrow-big-right.svelte
mark_module_start();
Arrow_big_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-big-right.svelte";
function Arrow_big_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_big_right);
  const iconNode = [
    ["path", { "d": "M6 9h6V5l7 7-7 7v-4H6V9z" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-big-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_big_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_big_right);

// node_modules/lucide-svelte/dist/icons/arrow-big-up-dash.svelte
mark_module_start();
Arrow_big_up_dash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-big-up-dash.svelte";
function Arrow_big_up_dash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_big_up_dash);
  const iconNode = [
    ["path", { "d": "M9 19h6" }],
    [
      "path",
      { "d": "M9 15v-3H5l7-7 7 7h-4v3H9z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "arrow-big-up-dash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_big_up_dash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_big_up_dash);

// node_modules/lucide-svelte/dist/icons/arrow-big-up.svelte
mark_module_start();
Arrow_big_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-big-up.svelte";
function Arrow_big_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_big_up);
  const iconNode = [
    [
      "path",
      { "d": "M9 18v-6H5l7-7 7 7h-4v6H9z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "arrow-big-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_big_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_big_up);

// node_modules/lucide-svelte/dist/icons/arrow-down-0-1.svelte
mark_module_start();
Arrow_down_0_1[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-0-1.svelte";
function Arrow_down_0_1($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_0_1);
  const iconNode = [
    ["path", { "d": "m3 16 4 4 4-4" }],
    ["path", { "d": "M7 20V4" }],
    [
      "rect",
      {
        "x": "15",
        "y": "4",
        "width": "4",
        "height": "6",
        "ry": "2"
      }
    ],
    ["path", { "d": "M17 20v-6h-2" }],
    ["path", { "d": "M15 20h4" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-0-1" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_0_1, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_0_1);

// node_modules/lucide-svelte/dist/icons/arrow-down-1-0.svelte
mark_module_start();
Arrow_down_1_0[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-1-0.svelte";
function Arrow_down_1_0($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_1_0);
  const iconNode = [
    ["path", { "d": "m3 16 4 4 4-4" }],
    ["path", { "d": "M7 20V4" }],
    ["path", { "d": "M17 10V4h-2" }],
    ["path", { "d": "M15 10h4" }],
    [
      "rect",
      {
        "x": "15",
        "y": "14",
        "width": "4",
        "height": "6",
        "ry": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-1-0" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_1_0, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_1_0);

// node_modules/lucide-svelte/dist/icons/arrow-down-a-z.svelte
mark_module_start();
Arrow_down_a_z[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-a-z.svelte";
function Arrow_down_a_z($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_a_z);
  const iconNode = [
    ["path", { "d": "m3 16 4 4 4-4" }],
    ["path", { "d": "M7 20V4" }],
    ["path", { "d": "M20 8h-5" }],
    [
      "path",
      { "d": "M15 10V6.5a2.5 2.5 0 0 1 5 0V10" }
    ],
    ["path", { "d": "M15 14h5l-5 6h5" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-a-z" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_a_z, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_a_z);

// node_modules/lucide-svelte/dist/icons/arrow-down-from-line.svelte
mark_module_start();
Arrow_down_from_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-from-line.svelte";
function Arrow_down_from_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_from_line);
  const iconNode = [
    ["path", { "d": "M19 3H5" }],
    ["path", { "d": "M12 21V7" }],
    ["path", { "d": "m6 15 6 6 6-6" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-from-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_from_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_from_line);

// node_modules/lucide-svelte/dist/icons/arrow-down-left.svelte
mark_module_start();
Arrow_down_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-left.svelte";
function Arrow_down_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_left);
  const iconNode = [
    ["path", { "d": "M17 7 7 17" }],
    ["path", { "d": "M17 17H7V7" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_left);

// node_modules/lucide-svelte/dist/icons/arrow-down-narrow-wide.svelte
mark_module_start();
Arrow_down_narrow_wide[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-narrow-wide.svelte";
function Arrow_down_narrow_wide($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_narrow_wide);
  const iconNode = [
    ["path", { "d": "m3 16 4 4 4-4" }],
    ["path", { "d": "M7 20V4" }],
    ["path", { "d": "M11 4h4" }],
    ["path", { "d": "M11 8h7" }],
    ["path", { "d": "M11 12h10" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-narrow-wide" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_narrow_wide, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_narrow_wide);

// node_modules/lucide-svelte/dist/icons/arrow-down-right.svelte
mark_module_start();
Arrow_down_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-right.svelte";
function Arrow_down_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_right);
  const iconNode = [
    ["path", { "d": "m7 7 10 10" }],
    ["path", { "d": "M17 7v10H7" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_right);

// node_modules/lucide-svelte/dist/icons/arrow-down-to-dot.svelte
mark_module_start();
Arrow_down_to_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-to-dot.svelte";
function Arrow_down_to_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_to_dot);
  const iconNode = [
    ["path", { "d": "M12 2v14" }],
    ["path", { "d": "m19 9-7 7-7-7" }],
    [
      "circle",
      { "cx": "12", "cy": "21", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-to-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_to_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_to_dot);

// node_modules/lucide-svelte/dist/icons/arrow-down-to-line.svelte
mark_module_start();
Arrow_down_to_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-to-line.svelte";
function Arrow_down_to_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_to_line);
  const iconNode = [
    ["path", { "d": "M12 17V3" }],
    ["path", { "d": "m6 11 6 6 6-6" }],
    ["path", { "d": "M19 21H5" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-to-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_to_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_to_line);

// node_modules/lucide-svelte/dist/icons/arrow-down-up.svelte
mark_module_start();
Arrow_down_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-up.svelte";
function Arrow_down_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_up);
  const iconNode = [
    ["path", { "d": "m3 16 4 4 4-4" }],
    ["path", { "d": "M7 20V4" }],
    ["path", { "d": "m21 8-4-4-4 4" }],
    ["path", { "d": "M17 4v16" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_up);

// node_modules/lucide-svelte/dist/icons/arrow-down-wide-narrow.svelte
mark_module_start();
Arrow_down_wide_narrow[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-wide-narrow.svelte";
function Arrow_down_wide_narrow($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_wide_narrow);
  const iconNode = [
    ["path", { "d": "m3 16 4 4 4-4" }],
    ["path", { "d": "M7 20V4" }],
    ["path", { "d": "M11 4h10" }],
    ["path", { "d": "M11 8h7" }],
    ["path", { "d": "M11 12h4" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-wide-narrow" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_wide_narrow, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_wide_narrow);

// node_modules/lucide-svelte/dist/icons/arrow-down-z-a.svelte
mark_module_start();
Arrow_down_z_a[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down-z-a.svelte";
function Arrow_down_z_a($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down_z_a);
  const iconNode = [
    ["path", { "d": "m3 16 4 4 4-4" }],
    ["path", { "d": "M7 4v16" }],
    ["path", { "d": "M15 4h5l-5 6h5" }],
    [
      "path",
      { "d": "M15 20v-3.5a2.5 2.5 0 0 1 5 0V20" }
    ],
    ["path", { "d": "M20 18h-5" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down-z-a" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down_z_a, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down_z_a);

// node_modules/lucide-svelte/dist/icons/arrow-down.svelte
mark_module_start();
Arrow_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-down.svelte";
function Arrow_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_down);
  const iconNode = [
    ["path", { "d": "M12 5v14" }],
    ["path", { "d": "m19 12-7 7-7-7" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_down);

// node_modules/lucide-svelte/dist/icons/arrow-left-from-line.svelte
mark_module_start();
Arrow_left_from_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-left-from-line.svelte";
function Arrow_left_from_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_left_from_line);
  const iconNode = [
    ["path", { "d": "m9 6-6 6 6 6" }],
    ["path", { "d": "M3 12h14" }],
    ["path", { "d": "M21 19V5" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-left-from-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_left_from_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_left_from_line);

// node_modules/lucide-svelte/dist/icons/arrow-left-right.svelte
mark_module_start();
Arrow_left_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-left-right.svelte";
function Arrow_left_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_left_right);
  const iconNode = [
    ["path", { "d": "M8 3 4 7l4 4" }],
    ["path", { "d": "M4 7h16" }],
    ["path", { "d": "m16 21 4-4-4-4" }],
    ["path", { "d": "M20 17H4" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-left-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_left_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_left_right);

// node_modules/lucide-svelte/dist/icons/arrow-left-to-line.svelte
mark_module_start();
Arrow_left_to_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-left-to-line.svelte";
function Arrow_left_to_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_left_to_line);
  const iconNode = [
    ["path", { "d": "M3 19V5" }],
    ["path", { "d": "m13 6-6 6 6 6" }],
    ["path", { "d": "M7 12h14" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-left-to-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_left_to_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_left_to_line);

// node_modules/lucide-svelte/dist/icons/arrow-left.svelte
mark_module_start();
Arrow_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-left.svelte";
function Arrow_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_left);
  const iconNode = [
    ["path", { "d": "m12 19-7-7 7-7" }],
    ["path", { "d": "M19 12H5" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_left);

// node_modules/lucide-svelte/dist/icons/arrow-right-from-line.svelte
mark_module_start();
Arrow_right_from_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-right-from-line.svelte";
function Arrow_right_from_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_right_from_line);
  const iconNode = [
    ["path", { "d": "M3 5v14" }],
    ["path", { "d": "M21 12H7" }],
    ["path", { "d": "m15 18 6-6-6-6" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-right-from-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_right_from_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_right_from_line);

// node_modules/lucide-svelte/dist/icons/arrow-right-left.svelte
mark_module_start();
Arrow_right_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-right-left.svelte";
function Arrow_right_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_right_left);
  const iconNode = [
    ["path", { "d": "m16 3 4 4-4 4" }],
    ["path", { "d": "M20 7H4" }],
    ["path", { "d": "m8 21-4-4 4-4" }],
    ["path", { "d": "M4 17h16" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-right-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_right_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_right_left);

// node_modules/lucide-svelte/dist/icons/arrow-right-to-line.svelte
mark_module_start();
Arrow_right_to_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-right-to-line.svelte";
function Arrow_right_to_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_right_to_line);
  const iconNode = [
    ["path", { "d": "M17 12H3" }],
    ["path", { "d": "m11 18 6-6-6-6" }],
    ["path", { "d": "M21 5v14" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-right-to-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_right_to_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_right_to_line);

// node_modules/lucide-svelte/dist/icons/arrow-right.svelte
mark_module_start();
Arrow_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-right.svelte";
function Arrow_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_right);
  const iconNode = [
    ["path", { "d": "M5 12h14" }],
    ["path", { "d": "m12 5 7 7-7 7" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_right);

// node_modules/lucide-svelte/dist/icons/arrow-up-0-1.svelte
mark_module_start();
Arrow_up_0_1[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-0-1.svelte";
function Arrow_up_0_1($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_0_1);
  const iconNode = [
    ["path", { "d": "m3 8 4-4 4 4" }],
    ["path", { "d": "M7 4v16" }],
    [
      "rect",
      {
        "x": "15",
        "y": "4",
        "width": "4",
        "height": "6",
        "ry": "2"
      }
    ],
    ["path", { "d": "M17 20v-6h-2" }],
    ["path", { "d": "M15 20h4" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-0-1" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_0_1, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_0_1);

// node_modules/lucide-svelte/dist/icons/arrow-up-1-0.svelte
mark_module_start();
Arrow_up_1_0[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-1-0.svelte";
function Arrow_up_1_0($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_1_0);
  const iconNode = [
    ["path", { "d": "m3 8 4-4 4 4" }],
    ["path", { "d": "M7 4v16" }],
    ["path", { "d": "M17 10V4h-2" }],
    ["path", { "d": "M15 10h4" }],
    [
      "rect",
      {
        "x": "15",
        "y": "14",
        "width": "4",
        "height": "6",
        "ry": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-1-0" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_1_0, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_1_0);

// node_modules/lucide-svelte/dist/icons/arrow-up-a-z.svelte
mark_module_start();
Arrow_up_a_z[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-a-z.svelte";
function Arrow_up_a_z($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_a_z);
  const iconNode = [
    ["path", { "d": "m3 8 4-4 4 4" }],
    ["path", { "d": "M7 4v16" }],
    ["path", { "d": "M20 8h-5" }],
    [
      "path",
      { "d": "M15 10V6.5a2.5 2.5 0 0 1 5 0V10" }
    ],
    ["path", { "d": "M15 14h5l-5 6h5" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-a-z" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_a_z, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_a_z);

// node_modules/lucide-svelte/dist/icons/arrow-up-down.svelte
mark_module_start();
Arrow_up_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-down.svelte";
function Arrow_up_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_down);
  const iconNode = [
    ["path", { "d": "m21 16-4 4-4-4" }],
    ["path", { "d": "M17 20V4" }],
    ["path", { "d": "m3 8 4-4 4 4" }],
    ["path", { "d": "M7 4v16" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_down);

// node_modules/lucide-svelte/dist/icons/arrow-up-from-dot.svelte
mark_module_start();
Arrow_up_from_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-from-dot.svelte";
function Arrow_up_from_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_from_dot);
  const iconNode = [
    ["path", { "d": "m5 9 7-7 7 7" }],
    ["path", { "d": "M12 16V2" }],
    [
      "circle",
      { "cx": "12", "cy": "21", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-from-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_from_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_from_dot);

// node_modules/lucide-svelte/dist/icons/arrow-up-from-line.svelte
mark_module_start();
Arrow_up_from_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-from-line.svelte";
function Arrow_up_from_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_from_line);
  const iconNode = [
    ["path", { "d": "m18 9-6-6-6 6" }],
    ["path", { "d": "M12 3v14" }],
    ["path", { "d": "M5 21h14" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-from-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_from_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_from_line);

// node_modules/lucide-svelte/dist/icons/arrow-up-left.svelte
mark_module_start();
Arrow_up_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-left.svelte";
function Arrow_up_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_left);
  const iconNode = [
    ["path", { "d": "M7 17V7h10" }],
    ["path", { "d": "M17 17 7 7" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_left);

// node_modules/lucide-svelte/dist/icons/arrow-up-narrow-wide.svelte
mark_module_start();
Arrow_up_narrow_wide[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-narrow-wide.svelte";
function Arrow_up_narrow_wide($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_narrow_wide);
  const iconNode = [
    ["path", { "d": "m3 8 4-4 4 4" }],
    ["path", { "d": "M7 4v16" }],
    ["path", { "d": "M11 12h4" }],
    ["path", { "d": "M11 16h7" }],
    ["path", { "d": "M11 20h10" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-narrow-wide" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_narrow_wide, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_narrow_wide);

// node_modules/lucide-svelte/dist/icons/arrow-up-right.svelte
mark_module_start();
Arrow_up_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-right.svelte";
function Arrow_up_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_right);
  const iconNode = [
    ["path", { "d": "M7 7h10v10" }],
    ["path", { "d": "M7 17 17 7" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_right);

// node_modules/lucide-svelte/dist/icons/arrow-up-to-line.svelte
mark_module_start();
Arrow_up_to_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-to-line.svelte";
function Arrow_up_to_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_to_line);
  const iconNode = [
    ["path", { "d": "M5 3h14" }],
    ["path", { "d": "m18 13-6-6-6 6" }],
    ["path", { "d": "M12 7v14" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-to-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_to_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_to_line);

// node_modules/lucide-svelte/dist/icons/arrow-up-wide-narrow.svelte
mark_module_start();
Arrow_up_wide_narrow[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-wide-narrow.svelte";
function Arrow_up_wide_narrow($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_wide_narrow);
  const iconNode = [
    ["path", { "d": "m3 8 4-4 4 4" }],
    ["path", { "d": "M7 4v16" }],
    ["path", { "d": "M11 12h10" }],
    ["path", { "d": "M11 16h7" }],
    ["path", { "d": "M11 20h4" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-wide-narrow" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_wide_narrow, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_wide_narrow);

// node_modules/lucide-svelte/dist/icons/arrow-up-z-a.svelte
mark_module_start();
Arrow_up_z_a[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up-z-a.svelte";
function Arrow_up_z_a($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up_z_a);
  const iconNode = [
    ["path", { "d": "m3 8 4-4 4 4" }],
    ["path", { "d": "M7 4v16" }],
    ["path", { "d": "M15 4h5l-5 6h5" }],
    [
      "path",
      { "d": "M15 20v-3.5a2.5 2.5 0 0 1 5 0V20" }
    ],
    ["path", { "d": "M20 18h-5" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up-z-a" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up_z_a, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up_z_a);

// node_modules/lucide-svelte/dist/icons/arrow-up.svelte
mark_module_start();
Arrow_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrow-up.svelte";
function Arrow_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrow_up);
  const iconNode = [
    ["path", { "d": "m5 12 7-7 7 7" }],
    ["path", { "d": "M12 19V5" }]
  ];
  Icon($$anchor, spread_props({ name: "arrow-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrow_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrow_up);

// node_modules/lucide-svelte/dist/icons/arrows-up-from-line.svelte
mark_module_start();
Arrows_up_from_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/arrows-up-from-line.svelte";
function Arrows_up_from_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Arrows_up_from_line);
  const iconNode = [
    ["path", { "d": "m4 6 3-3 3 3" }],
    ["path", { "d": "M7 17V3" }],
    ["path", { "d": "m14 6 3-3 3 3" }],
    ["path", { "d": "M17 17V3" }],
    ["path", { "d": "M4 21h16" }]
  ];
  Icon($$anchor, spread_props({ name: "arrows-up-from-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Arrows_up_from_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Arrows_up_from_line);

// node_modules/lucide-svelte/dist/icons/asterisk.svelte
mark_module_start();
Asterisk[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/asterisk.svelte";
function Asterisk($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Asterisk);
  const iconNode = [
    ["path", { "d": "M12 6v12" }],
    ["path", { "d": "M17.196 9 6.804 15" }],
    ["path", { "d": "m6.804 9 10.392 6" }]
  ];
  Icon($$anchor, spread_props({ name: "asterisk" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Asterisk, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Asterisk);

// node_modules/lucide-svelte/dist/icons/at-sign.svelte
mark_module_start();
At_sign[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/at-sign.svelte";
function At_sign($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, At_sign);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "4" }
    ],
    [
      "path",
      {
        "d": "M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-4 8"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "at-sign" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(At_sign, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(At_sign);

// node_modules/lucide-svelte/dist/icons/atom.svelte
mark_module_start();
Atom[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/atom.svelte";
function Atom($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Atom);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "1" }
    ],
    [
      "path",
      {
        "d": "M20.2 20.2c2.04-2.03.02-7.36-4.5-11.9-4.54-4.52-9.87-6.54-11.9-4.5-2.04 2.03-.02 7.36 4.5 11.9 4.54 4.52 9.87 6.54 11.9 4.5Z"
      }
    ],
    [
      "path",
      {
        "d": "M15.7 15.7c4.52-4.54 6.54-9.87 4.5-11.9-2.03-2.04-7.36-.02-11.9 4.5-4.52 4.54-6.54 9.87-4.5 11.9 2.03 2.04 7.36.02 11.9-4.5Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "atom" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Atom, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Atom);

// node_modules/lucide-svelte/dist/icons/audio-lines.svelte
mark_module_start();
Audio_lines[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/audio-lines.svelte";
function Audio_lines($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Audio_lines);
  const iconNode = [
    ["path", { "d": "M2 10v3" }],
    ["path", { "d": "M6 6v11" }],
    ["path", { "d": "M10 3v18" }],
    ["path", { "d": "M14 8v7" }],
    ["path", { "d": "M18 5v13" }],
    ["path", { "d": "M22 10v3" }]
  ];
  Icon($$anchor, spread_props({ name: "audio-lines" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Audio_lines, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Audio_lines);

// node_modules/lucide-svelte/dist/icons/audio-waveform.svelte
mark_module_start();
Audio_waveform[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/audio-waveform.svelte";
function Audio_waveform($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Audio_waveform);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 13a2 2 0 0 0 2-2V7a2 2 0 0 1 4 0v13a2 2 0 0 0 4 0V4a2 2 0 0 1 4 0v13a2 2 0 0 0 4 0v-4a2 2 0 0 1 2-2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "audio-waveform" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Audio_waveform, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Audio_waveform);

// node_modules/lucide-svelte/dist/icons/award.svelte
mark_module_start();
Award[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/award.svelte";
function Award($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Award);
  const iconNode = [
    [
      "path",
      {
        "d": "m15.477 12.89 1.515 8.526a.5.5 0 0 1-.81.47l-3.58-2.687a1 1 0 0 0-1.197 0l-3.586 2.686a.5.5 0 0 1-.81-.469l1.514-8.526"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "8", "r": "6" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "award" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Award, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Award);

// node_modules/lucide-svelte/dist/icons/axe.svelte
mark_module_start();
Axe[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/axe.svelte";
function Axe($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Axe);
  const iconNode = [
    [
      "path",
      { "d": "m14 12-8.5 8.5a2.12 2.12 0 1 1-3-3L11 9" }
    ],
    [
      "path",
      { "d": "M15 13 9 7l4-4 6 6h3a8 8 0 0 1-7 7z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "axe" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Axe, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Axe);

// node_modules/lucide-svelte/dist/icons/axis-3d.svelte
mark_module_start();
Axis_3d[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/axis-3d.svelte";
function Axis_3d($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Axis_3d);
  const iconNode = [
    ["path", { "d": "M4 4v16h16" }],
    ["path", { "d": "m4 20 7-7" }]
  ];
  Icon($$anchor, spread_props({ name: "axis-3d" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Axis_3d, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Axis_3d);

// node_modules/lucide-svelte/dist/icons/baby.svelte
mark_module_start();
Baby[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/baby.svelte";
function Baby($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Baby);
  const iconNode = [
    ["path", { "d": "M9 12h.01" }],
    ["path", { "d": "M15 12h.01" }],
    [
      "path",
      { "d": "M10 16c.5.3 1.2.5 2 .5s1.5-.2 2-.5" }
    ],
    [
      "path",
      {
        "d": "M19 6.3a9 9 0 0 1 1.8 3.9 2 2 0 0 1 0 3.6 9 9 0 0 1-17.6 0 2 2 0 0 1 0-3.6A9 9 0 0 1 12 3c2 0 3.5 1.1 3.5 2.5s-.9 2.5-2 2.5c-.8 0-1.5-.4-1.5-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "baby" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Baby, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Baby);

// node_modules/lucide-svelte/dist/icons/backpack.svelte
mark_module_start();
Backpack[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/backpack.svelte";
function Backpack($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Backpack);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z"
      }
    ],
    ["path", { "d": "M8 10h8" }],
    ["path", { "d": "M8 18h8" }],
    [
      "path",
      {
        "d": "M8 22v-6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v6"
      }
    ],
    [
      "path",
      { "d": "M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "backpack" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Backpack, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Backpack);

// node_modules/lucide-svelte/dist/icons/badge-alert.svelte
mark_module_start();
Badge_alert[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-alert.svelte";
function Badge_alert($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_alert);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "8",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12.01",
        "y1": "16",
        "y2": "16"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "badge-alert" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_alert, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_alert);

// node_modules/lucide-svelte/dist/icons/badge-cent.svelte
mark_module_start();
Badge_cent[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-cent.svelte";
function Badge_cent($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_cent);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    ["path", { "d": "M12 7v10" }],
    ["path", { "d": "M15.4 10a4 4 0 1 0 0 4" }]
  ];
  Icon($$anchor, spread_props({ name: "badge-cent" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_cent, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_cent);

// node_modules/lucide-svelte/dist/icons/badge-check.svelte
mark_module_start();
Badge_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-check.svelte";
function Badge_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_check);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    ["path", { "d": "m9 12 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "badge-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_check);

// node_modules/lucide-svelte/dist/icons/badge-dollar-sign.svelte
mark_module_start();
Badge_dollar_sign[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-dollar-sign.svelte";
function Badge_dollar_sign($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_dollar_sign);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    [
      "path",
      {
        "d": "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8"
      }
    ],
    ["path", { "d": "M12 18V6" }]
  ];
  Icon($$anchor, spread_props({ name: "badge-dollar-sign" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_dollar_sign, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_dollar_sign);

// node_modules/lucide-svelte/dist/icons/badge-euro.svelte
mark_module_start();
Badge_euro[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-euro.svelte";
function Badge_euro($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_euro);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    ["path", { "d": "M7 12h5" }],
    ["path", { "d": "M15 9.4a4 4 0 1 0 0 5.2" }]
  ];
  Icon($$anchor, spread_props({ name: "badge-euro" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_euro, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_euro);

// node_modules/lucide-svelte/dist/icons/badge-help.svelte
mark_module_start();
Badge_help[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-help.svelte";
function Badge_help($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_help);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    [
      "path",
      { "d": "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12.01",
        "y1": "17",
        "y2": "17"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "badge-help" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_help, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_help);

// node_modules/lucide-svelte/dist/icons/badge-indian-rupee.svelte
mark_module_start();
Badge_indian_rupee[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-indian-rupee.svelte";
function Badge_indian_rupee($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_indian_rupee);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    ["path", { "d": "M8 8h8" }],
    ["path", { "d": "M8 12h8" }],
    [
      "path",
      { "d": "m13 17-5-1h1a4 4 0 0 0 0-8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "badge-indian-rupee" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_indian_rupee, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_indian_rupee);

// node_modules/lucide-svelte/dist/icons/badge-info.svelte
mark_module_start();
Badge_info[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-info.svelte";
function Badge_info($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_info);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "16",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12.01",
        "y1": "8",
        "y2": "8"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "badge-info" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_info, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_info);

// node_modules/lucide-svelte/dist/icons/badge-japanese-yen.svelte
mark_module_start();
Badge_japanese_yen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-japanese-yen.svelte";
function Badge_japanese_yen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_japanese_yen);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    ["path", { "d": "m9 8 3 3v7" }],
    ["path", { "d": "m12 11 3-3" }],
    ["path", { "d": "M9 12h6" }],
    ["path", { "d": "M9 16h6" }]
  ];
  Icon($$anchor, spread_props({ name: "badge-japanese-yen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_japanese_yen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_japanese_yen);

// node_modules/lucide-svelte/dist/icons/badge-minus.svelte
mark_module_start();
Badge_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-minus.svelte";
function Badge_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "16",
        "y1": "12",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "badge-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_minus);

// node_modules/lucide-svelte/dist/icons/badge-percent.svelte
mark_module_start();
Badge_percent[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-percent.svelte";
function Badge_percent($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_percent);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    ["path", { "d": "m15 9-6 6" }],
    ["path", { "d": "M9 9h.01" }],
    ["path", { "d": "M15 15h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "badge-percent" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_percent, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_percent);

// node_modules/lucide-svelte/dist/icons/badge-plus.svelte
mark_module_start();
Badge_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-plus.svelte";
function Badge_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "8",
        "y2": "16"
      }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "16",
        "y1": "12",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "badge-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_plus);

// node_modules/lucide-svelte/dist/icons/badge-pound-sterling.svelte
mark_module_start();
Badge_pound_sterling[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-pound-sterling.svelte";
function Badge_pound_sterling($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_pound_sterling);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    ["path", { "d": "M8 12h4" }],
    [
      "path",
      { "d": "M10 16V9.5a2.5 2.5 0 0 1 5 0" }
    ],
    ["path", { "d": "M8 16h7" }]
  ];
  Icon($$anchor, spread_props({ name: "badge-pound-sterling" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_pound_sterling, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_pound_sterling);

// node_modules/lucide-svelte/dist/icons/badge-russian-ruble.svelte
mark_module_start();
Badge_russian_ruble[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-russian-ruble.svelte";
function Badge_russian_ruble($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_russian_ruble);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    ["path", { "d": "M9 16h5" }],
    [
      "path",
      { "d": "M9 12h5a2 2 0 1 0 0-4h-3v9" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "badge-russian-ruble" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_russian_ruble, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_russian_ruble);

// node_modules/lucide-svelte/dist/icons/badge-swiss-franc.svelte
mark_module_start();
Badge_swiss_franc[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-swiss-franc.svelte";
function Badge_swiss_franc($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_swiss_franc);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    ["path", { "d": "M11 17V8h4" }],
    ["path", { "d": "M11 12h3" }],
    ["path", { "d": "M9 16h4" }]
  ];
  Icon($$anchor, spread_props({ name: "badge-swiss-franc" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_swiss_franc, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_swiss_franc);

// node_modules/lucide-svelte/dist/icons/badge-x.svelte
mark_module_start();
Badge_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge-x.svelte";
function Badge_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "9",
        "y1": "9",
        "y2": "15"
      }
    ],
    [
      "line",
      {
        "x1": "9",
        "x2": "15",
        "y1": "9",
        "y2": "15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "badge-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge_x);

// node_modules/lucide-svelte/dist/icons/badge.svelte
mark_module_start();
Badge[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/badge.svelte";
function Badge($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Badge);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "badge" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Badge, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Badge);

// node_modules/lucide-svelte/dist/icons/baggage-claim.svelte
mark_module_start();
Baggage_claim[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/baggage-claim.svelte";
function Baggage_claim($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Baggage_claim);
  const iconNode = [
    [
      "path",
      { "d": "M22 18H6a2 2 0 0 1-2-2V7a2 2 0 0 0-2-2" }
    ],
    [
      "path",
      {
        "d": "M17 14V4a2 2 0 0 0-2-2h-1a2 2 0 0 0-2 2v10"
      }
    ],
    [
      "rect",
      {
        "width": "13",
        "height": "8",
        "x": "8",
        "y": "6",
        "rx": "1"
      }
    ],
    [
      "circle",
      { "cx": "18", "cy": "20", "r": "2" }
    ],
    [
      "circle",
      { "cx": "9", "cy": "20", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "baggage-claim" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Baggage_claim, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Baggage_claim);

// node_modules/lucide-svelte/dist/icons/ban.svelte
mark_module_start();
Ban[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ban.svelte";
function Ban($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ban);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m4.9 4.9 14.2 14.2" }]
  ];
  Icon($$anchor, spread_props({ name: "ban" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ban, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ban);

// node_modules/lucide-svelte/dist/icons/banana.svelte
mark_module_start();
Banana[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/banana.svelte";
function Banana($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Banana);
  const iconNode = [
    [
      "path",
      { "d": "M4 13c3.5-2 8-2 10 2a5.5 5.5 0 0 1 8 5" }
    ],
    [
      "path",
      {
        "d": "M5.15 17.89c5.52-1.52 8.65-6.89 7-12C11.55 4 11.5 2 13 2c3.22 0 5 5.5 5 8 0 6.5-4.2 12-10.49 12C5.11 22 2 22 2 20c0-1.5 1.14-1.55 3.15-2.11Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "banana" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Banana, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Banana);

// node_modules/lucide-svelte/dist/icons/bandage.svelte
mark_module_start();
Bandage[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bandage.svelte";
function Bandage($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bandage);
  const iconNode = [
    ["path", { "d": "M10 10.01h.01" }],
    ["path", { "d": "M10 14.01h.01" }],
    ["path", { "d": "M14 10.01h.01" }],
    ["path", { "d": "M14 14.01h.01" }],
    ["path", { "d": "M18 6v11.5" }],
    ["path", { "d": "M6 6v12" }],
    [
      "rect",
      {
        "x": "2",
        "y": "6",
        "width": "20",
        "height": "12",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bandage" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bandage, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bandage);

// node_modules/lucide-svelte/dist/icons/banknote.svelte
mark_module_start();
Banknote[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/banknote.svelte";
function Banknote($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Banknote);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "12",
        "x": "2",
        "y": "6",
        "rx": "2"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "2" }
    ],
    ["path", { "d": "M6 12h.01M18 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "banknote" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Banknote, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Banknote);

// node_modules/lucide-svelte/dist/icons/barcode.svelte
mark_module_start();
Barcode[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/barcode.svelte";
function Barcode($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Barcode);
  const iconNode = [
    ["path", { "d": "M3 5v14" }],
    ["path", { "d": "M8 5v14" }],
    ["path", { "d": "M12 5v14" }],
    ["path", { "d": "M17 5v14" }],
    ["path", { "d": "M21 5v14" }]
  ];
  Icon($$anchor, spread_props({ name: "barcode" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Barcode, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Barcode);

// node_modules/lucide-svelte/dist/icons/baseline.svelte
mark_module_start();
Baseline[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/baseline.svelte";
function Baseline($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Baseline);
  const iconNode = [
    ["path", { "d": "M4 20h16" }],
    ["path", { "d": "m6 16 6-12 6 12" }],
    ["path", { "d": "M8 12h8" }]
  ];
  Icon($$anchor, spread_props({ name: "baseline" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Baseline, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Baseline);

// node_modules/lucide-svelte/dist/icons/bath.svelte
mark_module_start();
Bath[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bath.svelte";
function Bath($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bath);
  const iconNode = [
    [
      "path",
      {
        "d": "M9 6 6.5 3.5a1.5 1.5 0 0 0-1-.5C4.683 3 4 3.683 4 4.5V17a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5"
      }
    ],
    [
      "line",
      { "x1": "10", "x2": "8", "y1": "5", "y2": "7" }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "7",
        "x2": "7",
        "y1": "19",
        "y2": "21"
      }
    ],
    [
      "line",
      {
        "x1": "17",
        "x2": "17",
        "y1": "19",
        "y2": "21"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bath" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bath, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bath);

// node_modules/lucide-svelte/dist/icons/battery-charging.svelte
mark_module_start();
Battery_charging[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/battery-charging.svelte";
function Battery_charging($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Battery_charging);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 7h1a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2h-2"
      }
    ],
    [
      "path",
      { "d": "M6 7H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h1" }
    ],
    ["path", { "d": "m11 7-3 5h4l-3 5" }],
    [
      "line",
      {
        "x1": "22",
        "x2": "22",
        "y1": "11",
        "y2": "13"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "battery-charging" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Battery_charging, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Battery_charging);

// node_modules/lucide-svelte/dist/icons/battery-full.svelte
mark_module_start();
Battery_full[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/battery-full.svelte";
function Battery_full($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Battery_full);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "10",
        "x": "2",
        "y": "7",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "line",
      {
        "x1": "22",
        "x2": "22",
        "y1": "11",
        "y2": "13"
      }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "6",
        "y1": "11",
        "y2": "13"
      }
    ],
    [
      "line",
      {
        "x1": "10",
        "x2": "10",
        "y1": "11",
        "y2": "13"
      }
    ],
    [
      "line",
      {
        "x1": "14",
        "x2": "14",
        "y1": "11",
        "y2": "13"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "battery-full" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Battery_full, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Battery_full);

// node_modules/lucide-svelte/dist/icons/battery-low.svelte
mark_module_start();
Battery_low[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/battery-low.svelte";
function Battery_low($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Battery_low);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "10",
        "x": "2",
        "y": "7",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "line",
      {
        "x1": "22",
        "x2": "22",
        "y1": "11",
        "y2": "13"
      }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "6",
        "y1": "11",
        "y2": "13"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "battery-low" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Battery_low, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Battery_low);

// node_modules/lucide-svelte/dist/icons/battery-medium.svelte
mark_module_start();
Battery_medium[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/battery-medium.svelte";
function Battery_medium($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Battery_medium);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "10",
        "x": "2",
        "y": "7",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "line",
      {
        "x1": "22",
        "x2": "22",
        "y1": "11",
        "y2": "13"
      }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "6",
        "y1": "11",
        "y2": "13"
      }
    ],
    [
      "line",
      {
        "x1": "10",
        "x2": "10",
        "y1": "11",
        "y2": "13"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "battery-medium" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Battery_medium, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Battery_medium);

// node_modules/lucide-svelte/dist/icons/battery-warning.svelte
mark_module_start();
Battery_warning[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/battery-warning.svelte";
function Battery_warning($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Battery_warning);
  const iconNode = [
    ["path", { "d": "M10 17h.01" }],
    ["path", { "d": "M10 7v6" }],
    [
      "path",
      {
        "d": "M14 7h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2h-2"
      }
    ],
    ["path", { "d": "M22 11v2" }],
    [
      "path",
      { "d": "M6 7H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "battery-warning" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Battery_warning, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Battery_warning);

// node_modules/lucide-svelte/dist/icons/battery.svelte
mark_module_start();
Battery[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/battery.svelte";
function Battery($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Battery);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "10",
        "x": "2",
        "y": "7",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "line",
      {
        "x1": "22",
        "x2": "22",
        "y1": "11",
        "y2": "13"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "battery" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Battery, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Battery);

// node_modules/lucide-svelte/dist/icons/beaker.svelte
mark_module_start();
Beaker[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/beaker.svelte";
function Beaker($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Beaker);
  const iconNode = [
    ["path", { "d": "M4.5 3h15" }],
    [
      "path",
      { "d": "M6 3v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V3" }
    ],
    ["path", { "d": "M6 14h12" }]
  ];
  Icon($$anchor, spread_props({ name: "beaker" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Beaker, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Beaker);

// node_modules/lucide-svelte/dist/icons/bean-off.svelte
mark_module_start();
Bean_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bean-off.svelte";
function Bean_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bean_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22a13.96 13.96 0 0 0 9.9-4.1"
      }
    ],
    [
      "path",
      {
        "d": "M10.75 5.093A6 6 0 0 1 22 8c0 2.411-.61 4.68-1.683 6.66"
      }
    ],
    [
      "path",
      {
        "d": "M5.341 10.62a4 4 0 0 0 6.487 1.208M10.62 5.341a4.015 4.015 0 0 1 2.039 2.04"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bean-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bean_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bean_off);

// node_modules/lucide-svelte/dist/icons/bean.svelte
mark_module_start();
Bean[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bean.svelte";
function Bean($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bean);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.165 6.598C9.954 7.478 9.64 8.36 9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22c7.732 0 14-6.268 14-14a6 6 0 0 0-11.835-1.402Z"
      }
    ],
    [
      "path",
      { "d": "M5.341 10.62a4 4 0 1 0 5.279-5.28" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bean" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bean, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bean);

// node_modules/lucide-svelte/dist/icons/bed-double.svelte
mark_module_start();
Bed_double[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bed-double.svelte";
function Bed_double($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bed_double);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 20v-8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v8"
      }
    ],
    [
      "path",
      {
        "d": "M4 10V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4"
      }
    ],
    ["path", { "d": "M12 4v6" }],
    ["path", { "d": "M2 18h20" }]
  ];
  Icon($$anchor, spread_props({ name: "bed-double" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bed_double, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bed_double);

// node_modules/lucide-svelte/dist/icons/bed-single.svelte
mark_module_start();
Bed_single[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bed-single.svelte";
function Bed_single($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bed_single);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 20v-8a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v8"
      }
    ],
    [
      "path",
      {
        "d": "M5 10V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v4"
      }
    ],
    ["path", { "d": "M3 18h18" }]
  ];
  Icon($$anchor, spread_props({ name: "bed-single" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bed_single, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bed_single);

// node_modules/lucide-svelte/dist/icons/bed.svelte
mark_module_start();
Bed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bed.svelte";
function Bed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bed);
  const iconNode = [
    ["path", { "d": "M2 4v16" }],
    ["path", { "d": "M2 8h18a2 2 0 0 1 2 2v10" }],
    ["path", { "d": "M2 17h20" }],
    ["path", { "d": "M6 8v9" }]
  ];
  Icon($$anchor, spread_props({ name: "bed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bed);

// node_modules/lucide-svelte/dist/icons/beef.svelte
mark_module_start();
Beef[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/beef.svelte";
function Beef($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Beef);
  const iconNode = [
    [
      "circle",
      { "cx": "12.5", "cy": "8.5", "r": "2.5" }
    ],
    [
      "path",
      {
        "d": "M12.5 2a6.5 6.5 0 0 0-6.22 4.6c-1.1 3.13-.78 3.9-3.18 6.08A3 3 0 0 0 5 18c4 0 8.4-1.8 11.4-4.3A6.5 6.5 0 0 0 12.5 2Z"
      }
    ],
    [
      "path",
      {
        "d": "m18.5 6 2.19 4.5a6.48 6.48 0 0 1 .31 2 6.49 6.49 0 0 1-2.6 5.2C15.4 20.2 11 22 7 22a3 3 0 0 1-2.68-1.66L2.4 16.5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "beef" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Beef, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Beef);

// node_modules/lucide-svelte/dist/icons/beer-off.svelte
mark_module_start();
Beer_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/beer-off.svelte";
function Beer_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Beer_off);
  const iconNode = [
    ["path", { "d": "M13 13v5" }],
    ["path", { "d": "M17 11.47V8" }],
    [
      "path",
      { "d": "M17 11h1a3 3 0 0 1 2.745 4.211" }
    ],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      {
        "d": "M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-3"
      }
    ],
    [
      "path",
      {
        "d": "M7.536 7.535C6.766 7.649 6.154 8 5.5 8a2.5 2.5 0 0 1-1.768-4.268"
      }
    ],
    [
      "path",
      {
        "d": "M8.727 3.204C9.306 2.767 9.885 2 11 2c1.56 0 2 1.5 3 1.5s1.72-.5 2.5-.5a1 1 0 1 1 0 5c-.78 0-1.5-.5-2.5-.5a3.149 3.149 0 0 0-.842.12"
      }
    ],
    ["path", { "d": "M9 14.6V18" }]
  ];
  Icon($$anchor, spread_props({ name: "beer-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Beer_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Beer_off);

// node_modules/lucide-svelte/dist/icons/beer.svelte
mark_module_start();
Beer[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/beer.svelte";
function Beer($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Beer);
  const iconNode = [
    [
      "path",
      { "d": "M17 11h1a3 3 0 0 1 0 6h-1" }
    ],
    ["path", { "d": "M9 12v6" }],
    ["path", { "d": "M13 12v6" }],
    [
      "path",
      {
        "d": "M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5S9.44 2 11 2s2 1.5 3 1.5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z"
      }
    ],
    [
      "path",
      { "d": "M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "beer" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Beer, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Beer);

// node_modules/lucide-svelte/dist/icons/bell-dot.svelte
mark_module_start();
Bell_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bell-dot.svelte";
function Bell_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bell_dot);
  const iconNode = [
    [
      "path",
      {
        "d": "M19.4 14.9C20.2 16.4 21 17 21 17H3s3-2 3-9c0-3.3 2.7-6 6-6 .7 0 1.3.1 1.9.3"
      }
    ],
    [
      "path",
      { "d": "M10.3 21a1.94 1.94 0 0 0 3.4 0" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "8", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bell-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bell_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bell_dot);

// node_modules/lucide-svelte/dist/icons/bell-electric.svelte
mark_module_start();
Bell_electric[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bell-electric.svelte";
function Bell_electric($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bell_electric);
  const iconNode = [
    [
      "path",
      { "d": "M18.8 4A6.3 8.7 0 0 1 20 9" }
    ],
    ["path", { "d": "M9 9h.01" }],
    [
      "circle",
      { "cx": "9", "cy": "9", "r": "7" }
    ],
    [
      "rect",
      {
        "width": "10",
        "height": "6",
        "x": "4",
        "y": "16",
        "rx": "2"
      }
    ],
    [
      "path",
      { "d": "M14 19c3 0 4.6-1.6 4.6-1.6" }
    ],
    [
      "circle",
      { "cx": "20", "cy": "16", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bell-electric" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bell_electric, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bell_electric);

// node_modules/lucide-svelte/dist/icons/bell-minus.svelte
mark_module_start();
Bell_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bell-minus.svelte";
function Bell_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bell_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M18.4 12c.8 3.8 2.6 5 2.6 5H3s3-2 3-9c0-3.3 2.7-6 6-6 1.8 0 3.4.8 4.5 2"
      }
    ],
    [
      "path",
      { "d": "M10.3 21a1.94 1.94 0 0 0 3.4 0" }
    ],
    ["path", { "d": "M15 8h6" }]
  ];
  Icon($$anchor, spread_props({ name: "bell-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bell_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bell_minus);

// node_modules/lucide-svelte/dist/icons/bell-off.svelte
mark_module_start();
Bell_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bell-off.svelte";
function Bell_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bell_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M8.7 3A6 6 0 0 1 18 8a21.3 21.3 0 0 0 .6 5"
      }
    ],
    [
      "path",
      { "d": "M17 17H3s3-2 3-9a4.67 4.67 0 0 1 .3-1.7" }
    ],
    [
      "path",
      { "d": "M10.3 21a1.94 1.94 0 0 0 3.4 0" }
    ],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "bell-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bell_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bell_off);

// node_modules/lucide-svelte/dist/icons/bell-plus.svelte
mark_module_start();
Bell_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bell-plus.svelte";
function Bell_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bell_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "M19.3 14.8C20.1 16.4 21 17 21 17H3s3-2 3-9c0-3.3 2.7-6 6-6 1 0 1.9.2 2.8.7"
      }
    ],
    [
      "path",
      { "d": "M10.3 21a1.94 1.94 0 0 0 3.4 0" }
    ],
    ["path", { "d": "M15 8h6" }],
    ["path", { "d": "M18 5v6" }]
  ];
  Icon($$anchor, spread_props({ name: "bell-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bell_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bell_plus);

// node_modules/lucide-svelte/dist/icons/bell-ring.svelte
mark_module_start();
Bell_ring[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bell-ring.svelte";
function Bell_ring($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bell_ring);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"
      }
    ],
    [
      "path",
      { "d": "M10.3 21a1.94 1.94 0 0 0 3.4 0" }
    ],
    ["path", { "d": "M4 2C2.8 3.7 2 5.7 2 8" }],
    ["path", { "d": "M22 8c0-2.3-.8-4.3-2-6" }]
  ];
  Icon($$anchor, spread_props({ name: "bell-ring" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bell_ring, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bell_ring);

// node_modules/lucide-svelte/dist/icons/bell.svelte
mark_module_start();
Bell[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bell.svelte";
function Bell($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bell);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"
      }
    ],
    [
      "path",
      { "d": "M10.3 21a1.94 1.94 0 0 0 3.4 0" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bell" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bell, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bell);

// node_modules/lucide-svelte/dist/icons/between-horizontal-end.svelte
mark_module_start();
Between_horizontal_end[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/between-horizontal-end.svelte";
function Between_horizontal_end($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Between_horizontal_end);
  const iconNode = [
    [
      "rect",
      {
        "width": "13",
        "height": "7",
        "x": "3",
        "y": "3",
        "rx": "1"
      }
    ],
    ["path", { "d": "m22 15-3-3 3-3" }],
    [
      "rect",
      {
        "width": "13",
        "height": "7",
        "x": "3",
        "y": "14",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "between-horizontal-end" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Between_horizontal_end, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Between_horizontal_end);

// node_modules/lucide-svelte/dist/icons/between-horizontal-start.svelte
mark_module_start();
Between_horizontal_start[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/between-horizontal-start.svelte";
function Between_horizontal_start($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Between_horizontal_start);
  const iconNode = [
    [
      "rect",
      {
        "width": "13",
        "height": "7",
        "x": "8",
        "y": "3",
        "rx": "1"
      }
    ],
    ["path", { "d": "m2 9 3 3-3 3" }],
    [
      "rect",
      {
        "width": "13",
        "height": "7",
        "x": "8",
        "y": "14",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "between-horizontal-start" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Between_horizontal_start, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Between_horizontal_start);

// node_modules/lucide-svelte/dist/icons/between-vertical-end.svelte
mark_module_start();
Between_vertical_end[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/between-vertical-end.svelte";
function Between_vertical_end($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Between_vertical_end);
  const iconNode = [
    [
      "rect",
      {
        "width": "7",
        "height": "13",
        "x": "3",
        "y": "3",
        "rx": "1"
      }
    ],
    ["path", { "d": "m9 22 3-3 3 3" }],
    [
      "rect",
      {
        "width": "7",
        "height": "13",
        "x": "14",
        "y": "3",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "between-vertical-end" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Between_vertical_end, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Between_vertical_end);

// node_modules/lucide-svelte/dist/icons/between-vertical-start.svelte
mark_module_start();
Between_vertical_start[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/between-vertical-start.svelte";
function Between_vertical_start($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Between_vertical_start);
  const iconNode = [
    [
      "rect",
      {
        "width": "7",
        "height": "13",
        "x": "3",
        "y": "8",
        "rx": "1"
      }
    ],
    ["path", { "d": "m15 2-3 3-3-3" }],
    [
      "rect",
      {
        "width": "7",
        "height": "13",
        "x": "14",
        "y": "8",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "between-vertical-start" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Between_vertical_start, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Between_vertical_start);

// node_modules/lucide-svelte/dist/icons/biceps-flexed.svelte
mark_module_start();
Biceps_flexed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/biceps-flexed.svelte";
function Biceps_flexed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Biceps_flexed);
  const iconNode = [
    [
      "path",
      {
        "d": "M12.409 13.017A5 5 0 0 1 22 15c0 3.866-4 7-9 7-4.077 0-8.153-.82-10.371-2.462-.426-.316-.631-.832-.62-1.362C2.118 12.723 2.627 2 10 2a3 3 0 0 1 3 3 2 2 0 0 1-2 2c-1.105 0-1.64-.444-2-1"
      }
    ],
    ["path", { "d": "M15 14a5 5 0 0 0-7.584 2" }],
    [
      "path",
      { "d": "M9.964 6.825C8.019 7.977 9.5 13 8 15" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "biceps-flexed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Biceps_flexed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Biceps_flexed);

// node_modules/lucide-svelte/dist/icons/bike.svelte
mark_module_start();
Bike[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bike.svelte";
function Bike($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bike);
  const iconNode = [
    [
      "circle",
      { "cx": "18.5", "cy": "17.5", "r": "3.5" }
    ],
    [
      "circle",
      { "cx": "5.5", "cy": "17.5", "r": "3.5" }
    ],
    [
      "circle",
      { "cx": "15", "cy": "5", "r": "1" }
    ],
    [
      "path",
      { "d": "M12 17.5V14l-3-3 4-3 2 3h2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bike" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bike, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bike);

// node_modules/lucide-svelte/dist/icons/binary.svelte
mark_module_start();
Binary[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/binary.svelte";
function Binary($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Binary);
  const iconNode = [
    [
      "rect",
      {
        "x": "14",
        "y": "14",
        "width": "4",
        "height": "6",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "x": "6",
        "y": "4",
        "width": "4",
        "height": "6",
        "rx": "2"
      }
    ],
    ["path", { "d": "M6 20h4" }],
    ["path", { "d": "M14 10h4" }],
    ["path", { "d": "M6 14h2v6" }],
    ["path", { "d": "M14 4h2v6" }]
  ];
  Icon($$anchor, spread_props({ name: "binary" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Binary, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Binary);

// node_modules/lucide-svelte/dist/icons/binoculars.svelte
mark_module_start();
Binoculars[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/binoculars.svelte";
function Binoculars($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Binoculars);
  const iconNode = [
    ["path", { "d": "M10 10h4" }],
    [
      "path",
      {
        "d": "M19 7V4a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v3"
      }
    ],
    [
      "path",
      {
        "d": "M20 21a2 2 0 0 0 2-2v-3.851c0-1.39-2-2.962-2-4.829V8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v11a2 2 0 0 0 2 2z"
      }
    ],
    ["path", { "d": "M 22 16 L 2 16" }],
    [
      "path",
      {
        "d": "M4 21a2 2 0 0 1-2-2v-3.851c0-1.39 2-2.962 2-4.829V8a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v11a2 2 0 0 1-2 2z"
      }
    ],
    [
      "path",
      { "d": "M9 7V4a1 1 0 0 0-1-1H6a1 1 0 0 0-1 1v3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "binoculars" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Binoculars, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Binoculars);

// node_modules/lucide-svelte/dist/icons/biohazard.svelte
mark_module_start();
Biohazard[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/biohazard.svelte";
function Biohazard($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Biohazard);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "11.9", "r": "2" }
    ],
    [
      "path",
      {
        "d": "M6.7 3.4c-.9 2.5 0 5.2 2.2 6.7C6.5 9 3.7 9.6 2 11.6"
      }
    ],
    ["path", { "d": "m8.9 10.1 1.4.8" }],
    [
      "path",
      {
        "d": "M17.3 3.4c.9 2.5 0 5.2-2.2 6.7 2.4-1.2 5.2-.6 6.9 1.5"
      }
    ],
    ["path", { "d": "m15.1 10.1-1.4.8" }],
    [
      "path",
      {
        "d": "M16.7 20.8c-2.6-.4-4.6-2.6-4.7-5.3-.2 2.6-2.1 4.8-4.7 5.2"
      }
    ],
    ["path", { "d": "M12 13.9v1.6" }],
    ["path", { "d": "M13.5 5.4c-1-.2-2-.2-3 0" }],
    [
      "path",
      { "d": "M17 16.4c.7-.7 1.2-1.6 1.5-2.5" }
    ],
    [
      "path",
      { "d": "M5.5 13.9c.3.9.8 1.8 1.5 2.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "biohazard" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Biohazard, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Biohazard);

// node_modules/lucide-svelte/dist/icons/bird.svelte
mark_module_start();
Bird[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bird.svelte";
function Bird($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bird);
  const iconNode = [
    ["path", { "d": "M16 7h.01" }],
    [
      "path",
      {
        "d": "M3.4 18H12a8 8 0 0 0 8-8V7a4 4 0 0 0-7.28-2.3L2 20"
      }
    ],
    ["path", { "d": "m20 7 2 .5-2 .5" }],
    ["path", { "d": "M10 18v3" }],
    ["path", { "d": "M14 17.75V21" }],
    [
      "path",
      { "d": "M7 18a6 6 0 0 0 3.84-10.61" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bird" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bird, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bird);

// node_modules/lucide-svelte/dist/icons/bitcoin.svelte
mark_module_start();
Bitcoin[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bitcoin.svelte";
function Bitcoin($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bitcoin);
  const iconNode = [
    [
      "path",
      {
        "d": "M11.767 19.089c4.924.868 6.14-6.025 1.216-6.894m-1.216 6.894L5.86 18.047m5.908 1.042-.347 1.97m1.563-8.864c4.924.869 6.14-6.025 1.215-6.893m-1.215 6.893-3.94-.694m5.155-6.2L8.29 4.26m5.908 1.042.348-1.97M7.48 20.364l3.126-17.727"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bitcoin" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bitcoin, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bitcoin);

// node_modules/lucide-svelte/dist/icons/blend.svelte
mark_module_start();
Blend[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/blend.svelte";
function Blend($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Blend);
  const iconNode = [
    [
      "circle",
      { "cx": "9", "cy": "9", "r": "7" }
    ],
    [
      "circle",
      { "cx": "15", "cy": "15", "r": "7" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "blend" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Blend, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Blend);

// node_modules/lucide-svelte/dist/icons/blinds.svelte
mark_module_start();
Blinds[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/blinds.svelte";
function Blinds($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Blinds);
  const iconNode = [
    ["path", { "d": "M3 3h18" }],
    ["path", { "d": "M20 7H8" }],
    ["path", { "d": "M20 11H8" }],
    ["path", { "d": "M10 19h10" }],
    ["path", { "d": "M8 15h12" }],
    ["path", { "d": "M4 3v14" }],
    [
      "circle",
      { "cx": "4", "cy": "19", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "blinds" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Blinds, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Blinds);

// node_modules/lucide-svelte/dist/icons/blocks.svelte
mark_module_start();
Blocks[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/blocks.svelte";
function Blocks($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Blocks);
  const iconNode = [
    [
      "rect",
      {
        "width": "7",
        "height": "7",
        "x": "14",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "path",
      {
        "d": "M10 21V8a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-5a1 1 0 0 0-1-1H3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "blocks" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Blocks, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Blocks);

// node_modules/lucide-svelte/dist/icons/bluetooth-connected.svelte
mark_module_start();
Bluetooth_connected[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bluetooth-connected.svelte";
function Bluetooth_connected($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bluetooth_connected);
  const iconNode = [
    [
      "path",
      { "d": "m7 7 10 10-5 5V2l5 5L7 17" }
    ],
    [
      "line",
      {
        "x1": "18",
        "x2": "21",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "3",
        "x2": "6",
        "y1": "12",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bluetooth-connected" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bluetooth_connected, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bluetooth_connected);

// node_modules/lucide-svelte/dist/icons/bluetooth-off.svelte
mark_module_start();
Bluetooth_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bluetooth-off.svelte";
function Bluetooth_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bluetooth_off);
  const iconNode = [
    ["path", { "d": "m17 17-5 5V12l-5 5" }],
    ["path", { "d": "m2 2 20 20" }],
    ["path", { "d": "M14.5 9.5 17 7l-5-5v4.5" }]
  ];
  Icon($$anchor, spread_props({ name: "bluetooth-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bluetooth_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bluetooth_off);

// node_modules/lucide-svelte/dist/icons/bluetooth-searching.svelte
mark_module_start();
Bluetooth_searching[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bluetooth-searching.svelte";
function Bluetooth_searching($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bluetooth_searching);
  const iconNode = [
    [
      "path",
      { "d": "m7 7 10 10-5 5V2l5 5L7 17" }
    ],
    [
      "path",
      { "d": "M20.83 14.83a4 4 0 0 0 0-5.66" }
    ],
    ["path", { "d": "M18 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "bluetooth-searching" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bluetooth_searching, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bluetooth_searching);

// node_modules/lucide-svelte/dist/icons/bluetooth.svelte
mark_module_start();
Bluetooth[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bluetooth.svelte";
function Bluetooth($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bluetooth);
  const iconNode = [
    [
      "path",
      { "d": "m7 7 10 10-5 5V2l5 5L7 17" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bluetooth" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bluetooth, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bluetooth);

// node_modules/lucide-svelte/dist/icons/bold.svelte
mark_module_start();
Bold[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bold.svelte";
function Bold($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bold);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 12h9a4 4 0 0 1 0 8H7a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h7a4 4 0 0 1 0 8"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bold" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bold, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bold);

// node_modules/lucide-svelte/dist/icons/bolt.svelte
mark_module_start();
Bolt[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bolt.svelte";
function Bolt($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bolt);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bolt" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bolt, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bolt);

// node_modules/lucide-svelte/dist/icons/bomb.svelte
mark_module_start();
Bomb[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bomb.svelte";
function Bomb($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bomb);
  const iconNode = [
    [
      "circle",
      { "cx": "11", "cy": "13", "r": "9" }
    ],
    [
      "path",
      {
        "d": "M14.35 4.65 16.3 2.7a2.41 2.41 0 0 1 3.4 0l1.6 1.6a2.4 2.4 0 0 1 0 3.4l-1.95 1.95"
      }
    ],
    ["path", { "d": "m22 2-1.5 1.5" }]
  ];
  Icon($$anchor, spread_props({ name: "bomb" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bomb, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bomb);

// node_modules/lucide-svelte/dist/icons/bone.svelte
mark_module_start();
Bone[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bone.svelte";
function Bone($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bone);
  const iconNode = [
    [
      "path",
      {
        "d": "M17 10c.7-.7 1.69 0 2.5 0a2.5 2.5 0 1 0 0-5 .5.5 0 0 1-.5-.5 2.5 2.5 0 1 0-5 0c0 .81.7 1.8 0 2.5l-7 7c-.7.7-1.69 0-2.5 0a2.5 2.5 0 0 0 0 5c.28 0 .5.22.5.5a2.5 2.5 0 1 0 5 0c0-.81-.7-1.8 0-2.5Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bone" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bone, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bone);

// node_modules/lucide-svelte/dist/icons/book-a.svelte
mark_module_start();
Book_a[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-a.svelte";
function Book_a($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_a);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    ["path", { "d": "m8 13 4-7 4 7" }],
    ["path", { "d": "M9.1 11h5.7" }]
  ];
  Icon($$anchor, spread_props({ name: "book-a" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_a, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_a);

// node_modules/lucide-svelte/dist/icons/book-audio.svelte
mark_module_start();
Book_audio[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-audio.svelte";
function Book_audio($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_audio);
  const iconNode = [
    ["path", { "d": "M12 6v7" }],
    ["path", { "d": "M16 8v3" }],
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    ["path", { "d": "M8 8v3" }]
  ];
  Icon($$anchor, spread_props({ name: "book-audio" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_audio, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_audio);

// node_modules/lucide-svelte/dist/icons/book-check.svelte
mark_module_start();
Book_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-check.svelte";
function Book_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_check);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    ["path", { "d": "m9 9.5 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "book-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_check);

// node_modules/lucide-svelte/dist/icons/book-copy.svelte
mark_module_start();
Book_copy[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-copy.svelte";
function Book_copy($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_copy);
  const iconNode = [
    ["path", { "d": "M2 16V4a2 2 0 0 1 2-2h11" }],
    [
      "path",
      {
        "d": "M22 18H11a2 2 0 1 0 0 4h10.5a.5.5 0 0 0 .5-.5v-15a.5.5 0 0 0-.5-.5H11a2 2 0 0 0-2 2v12"
      }
    ],
    ["path", { "d": "M5 14H4a2 2 0 1 0 0 4h1" }]
  ];
  Icon($$anchor, spread_props({ name: "book-copy" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_copy, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_copy);

// node_modules/lucide-svelte/dist/icons/book-dashed.svelte
mark_module_start();
Book_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-dashed.svelte";
function Book_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_dashed);
  const iconNode = [
    ["path", { "d": "M12 17h2" }],
    ["path", { "d": "M12 22h2" }],
    ["path", { "d": "M12 2h2" }],
    ["path", { "d": "M18 22h1a1 1 0 0 0 1-1" }],
    ["path", { "d": "M18 2h1a1 1 0 0 1 1 1v1" }],
    ["path", { "d": "M20 15v2h-2" }],
    ["path", { "d": "M20 8v3" }],
    ["path", { "d": "M4 11V9" }],
    ["path", { "d": "M4 19.5V15" }],
    [
      "path",
      { "d": "M4 5v-.5A2.5 2.5 0 0 1 6.5 2H8" }
    ],
    [
      "path",
      { "d": "M8 22H6.5a1 1 0 0 1 0-5H8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_dashed);

// node_modules/lucide-svelte/dist/icons/book-down.svelte
mark_module_start();
Book_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-down.svelte";
function Book_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_down);
  const iconNode = [
    ["path", { "d": "M12 13V7" }],
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    ["path", { "d": "m9 10 3 3 3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "book-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_down);

// node_modules/lucide-svelte/dist/icons/book-headphones.svelte
mark_module_start();
Book_headphones[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-headphones.svelte";
function Book_headphones($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_headphones);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    ["path", { "d": "M8 12v-2a4 4 0 0 1 8 0v2" }],
    [
      "circle",
      { "cx": "15", "cy": "12", "r": "1" }
    ],
    [
      "circle",
      { "cx": "9", "cy": "12", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book-headphones" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_headphones, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_headphones);

// node_modules/lucide-svelte/dist/icons/book-heart.svelte
mark_module_start();
Book_heart[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-heart.svelte";
function Book_heart($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_heart);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 8.2A2.22 2.22 0 0 0 13.8 6c-.8 0-1.4.3-1.8.9-.4-.6-1-.9-1.8-.9A2.22 2.22 0 0 0 8 8.2c0 .6.3 1.2.7 1.6A226.652 226.652 0 0 0 12 13a404 404 0 0 0 3.3-3.1 2.413 2.413 0 0 0 .7-1.7"
      }
    ],
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book-heart" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_heart, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_heart);

// node_modules/lucide-svelte/dist/icons/book-image.svelte
mark_module_start();
Book_image[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-image.svelte";
function Book_image($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_image);
  const iconNode = [
    [
      "path",
      { "d": "m20 13.7-2.1-2.1a2 2 0 0 0-2.8 0L9.7 17" }
    ],
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    [
      "circle",
      { "cx": "10", "cy": "8", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book-image" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_image, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_image);

// node_modules/lucide-svelte/dist/icons/book-key.svelte
mark_module_start();
Book_key[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-key.svelte";
function Book_key($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_key);
  const iconNode = [
    ["path", { "d": "m19 3 1 1" }],
    ["path", { "d": "m20 2-4.5 4.5" }],
    [
      "path",
      {
        "d": "M20 8v13a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    [
      "path",
      { "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H14" }
    ],
    [
      "circle",
      { "cx": "14", "cy": "8", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book-key" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_key, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_key);

// node_modules/lucide-svelte/dist/icons/book-lock.svelte
mark_module_start();
Book_lock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-lock.svelte";
function Book_lock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_lock);
  const iconNode = [
    ["path", { "d": "M18 6V4a2 2 0 1 0-4 0v2" }],
    [
      "path",
      {
        "d": "M20 15v6a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    [
      "path",
      { "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H10" }
    ],
    [
      "rect",
      {
        "x": "12",
        "y": "6",
        "width": "8",
        "height": "5",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book-lock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_lock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_lock);

// node_modules/lucide-svelte/dist/icons/book-marked.svelte
mark_module_start();
Book_marked[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-marked.svelte";
function Book_marked($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_marked);
  const iconNode = [
    ["path", { "d": "M10 2v8l3-3 3 3V2" }],
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book-marked" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_marked, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_marked);

// node_modules/lucide-svelte/dist/icons/book-minus.svelte
mark_module_start();
Book_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-minus.svelte";
function Book_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    ["path", { "d": "M9 10h6" }]
  ];
  Icon($$anchor, spread_props({ name: "book-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_minus);

// node_modules/lucide-svelte/dist/icons/book-open-check.svelte
mark_module_start();
Book_open_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-open-check.svelte";
function Book_open_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_open_check);
  const iconNode = [
    ["path", { "d": "M12 21V7" }],
    ["path", { "d": "m16 12 2 2 4-4" }],
    [
      "path",
      {
        "d": "M22 6V4a1 1 0 0 0-1-1h-5a4 4 0 0 0-4 4 4 4 0 0 0-4-4H3a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h6a3 3 0 0 1 3 3 3 3 0 0 1 3-3h6a1 1 0 0 0 1-1v-1.3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book-open-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_open_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_open_check);

// node_modules/lucide-svelte/dist/icons/book-open-text.svelte
mark_module_start();
Book_open_text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-open-text.svelte";
function Book_open_text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_open_text);
  const iconNode = [
    ["path", { "d": "M12 7v14" }],
    ["path", { "d": "M16 12h2" }],
    ["path", { "d": "M16 8h2" }],
    [
      "path",
      {
        "d": "M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z"
      }
    ],
    ["path", { "d": "M6 12h2" }],
    ["path", { "d": "M6 8h2" }]
  ];
  Icon($$anchor, spread_props({ name: "book-open-text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_open_text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_open_text);

// node_modules/lucide-svelte/dist/icons/book-open.svelte
mark_module_start();
Book_open[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-open.svelte";
function Book_open($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_open);
  const iconNode = [
    ["path", { "d": "M12 7v14" }],
    [
      "path",
      {
        "d": "M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book-open" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_open, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_open);

// node_modules/lucide-svelte/dist/icons/book-plus.svelte
mark_module_start();
Book_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-plus.svelte";
function Book_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_plus);
  const iconNode = [
    ["path", { "d": "M12 7v6" }],
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    ["path", { "d": "M9 10h6" }]
  ];
  Icon($$anchor, spread_props({ name: "book-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_plus);

// node_modules/lucide-svelte/dist/icons/book-text.svelte
mark_module_start();
Book_text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-text.svelte";
function Book_text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_text);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    ["path", { "d": "M8 11h8" }],
    ["path", { "d": "M8 7h6" }]
  ];
  Icon($$anchor, spread_props({ name: "book-text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_text);

// node_modules/lucide-svelte/dist/icons/book-type.svelte
mark_module_start();
Book_type[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-type.svelte";
function Book_type($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_type);
  const iconNode = [
    ["path", { "d": "M10 13h4" }],
    ["path", { "d": "M12 6v7" }],
    ["path", { "d": "M16 8V6H8v2" }],
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book-type" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_type, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_type);

// node_modules/lucide-svelte/dist/icons/book-up-2.svelte
mark_module_start();
Book_up_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-up-2.svelte";
function Book_up_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_up_2);
  const iconNode = [
    ["path", { "d": "M12 13V7" }],
    [
      "path",
      {
        "d": "M18 2h1a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    [
      "path",
      { "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2" }
    ],
    ["path", { "d": "m9 10 3-3 3 3" }],
    ["path", { "d": "m9 5 3-3 3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "book-up-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_up_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_up_2);

// node_modules/lucide-svelte/dist/icons/book-up.svelte
mark_module_start();
Book_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-up.svelte";
function Book_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_up);
  const iconNode = [
    ["path", { "d": "M12 13V7" }],
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    ["path", { "d": "m9 10 3-3 3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "book-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_up);

// node_modules/lucide-svelte/dist/icons/book-user.svelte
mark_module_start();
Book_user[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-user.svelte";
function Book_user($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_user);
  const iconNode = [
    ["path", { "d": "M15 13a3 3 0 1 0-6 0" }],
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "8", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book-user" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_user, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_user);

// node_modules/lucide-svelte/dist/icons/book-x.svelte
mark_module_start();
Book_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book-x.svelte";
function Book_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book_x);
  const iconNode = [
    ["path", { "d": "m14.5 7-5 5" }],
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ],
    ["path", { "d": "m9.5 7 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "book-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book_x);

// node_modules/lucide-svelte/dist/icons/book.svelte
mark_module_start();
Book[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/book.svelte";
function Book($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Book);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "book" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Book, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Book);

// node_modules/lucide-svelte/dist/icons/bookmark-check.svelte
mark_module_start();
Bookmark_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bookmark-check.svelte";
function Bookmark_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bookmark_check);
  const iconNode = [
    [
      "path",
      {
        "d": "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z"
      }
    ],
    ["path", { "d": "m9 10 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "bookmark-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bookmark_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bookmark_check);

// node_modules/lucide-svelte/dist/icons/bookmark-minus.svelte
mark_module_start();
Bookmark_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bookmark-minus.svelte";
function Bookmark_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bookmark_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "9",
        "y1": "10",
        "y2": "10"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bookmark-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bookmark_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bookmark_minus);

// node_modules/lucide-svelte/dist/icons/bookmark-plus.svelte
mark_module_start();
Bookmark_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bookmark-plus.svelte";
function Bookmark_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bookmark_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "7",
        "y2": "13"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "9",
        "y1": "10",
        "y2": "10"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bookmark-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bookmark_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bookmark_plus);

// node_modules/lucide-svelte/dist/icons/bookmark-x.svelte
mark_module_start();
Bookmark_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bookmark-x.svelte";
function Bookmark_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bookmark_x);
  const iconNode = [
    [
      "path",
      {
        "d": "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z"
      }
    ],
    ["path", { "d": "m14.5 7.5-5 5" }],
    ["path", { "d": "m9.5 7.5 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "bookmark-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bookmark_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bookmark_x);

// node_modules/lucide-svelte/dist/icons/bookmark.svelte
mark_module_start();
Bookmark[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bookmark.svelte";
function Bookmark($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bookmark);
  const iconNode = [
    [
      "path",
      {
        "d": "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bookmark" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bookmark, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bookmark);

// node_modules/lucide-svelte/dist/icons/boom-box.svelte
mark_module_start();
Boom_box[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/boom-box.svelte";
function Boom_box($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Boom_box);
  const iconNode = [
    [
      "path",
      { "d": "M4 9V5a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4" }
    ],
    ["path", { "d": "M8 8v1" }],
    ["path", { "d": "M12 8v1" }],
    ["path", { "d": "M16 8v1" }],
    [
      "rect",
      {
        "width": "20",
        "height": "12",
        "x": "2",
        "y": "9",
        "rx": "2"
      }
    ],
    [
      "circle",
      { "cx": "8", "cy": "15", "r": "2" }
    ],
    [
      "circle",
      { "cx": "16", "cy": "15", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "boom-box" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Boom_box, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Boom_box);

// node_modules/lucide-svelte/dist/icons/bot-message-square.svelte
mark_module_start();
Bot_message_square[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bot-message-square.svelte";
function Bot_message_square($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bot_message_square);
  const iconNode = [
    ["path", { "d": "M12 6V2H8" }],
    [
      "path",
      {
        "d": "m8 18-4 4V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2Z"
      }
    ],
    ["path", { "d": "M2 12h2" }],
    ["path", { "d": "M9 11v2" }],
    ["path", { "d": "M15 11v2" }],
    ["path", { "d": "M20 12h2" }]
  ];
  Icon($$anchor, spread_props({ name: "bot-message-square" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bot_message_square, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bot_message_square);

// node_modules/lucide-svelte/dist/icons/bot-off.svelte
mark_module_start();
Bot_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bot-off.svelte";
function Bot_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bot_off);
  const iconNode = [
    [
      "path",
      { "d": "M13.67 8H18a2 2 0 0 1 2 2v4.33" }
    ],
    ["path", { "d": "M2 14h2" }],
    ["path", { "d": "M20 14h2" }],
    ["path", { "d": "M22 22 2 2" }],
    [
      "path",
      {
        "d": "M8 8H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 1.414-.586"
      }
    ],
    ["path", { "d": "M9 13v2" }],
    ["path", { "d": "M9.67 4H12v2.33" }]
  ];
  Icon($$anchor, spread_props({ name: "bot-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bot_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bot_off);

// node_modules/lucide-svelte/dist/icons/bot.svelte
mark_module_start();
Bot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bot.svelte";
function Bot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bot);
  const iconNode = [
    ["path", { "d": "M12 8V4H8" }],
    [
      "rect",
      {
        "width": "16",
        "height": "12",
        "x": "4",
        "y": "8",
        "rx": "2"
      }
    ],
    ["path", { "d": "M2 14h2" }],
    ["path", { "d": "M20 14h2" }],
    ["path", { "d": "M15 13v2" }],
    ["path", { "d": "M9 13v2" }]
  ];
  Icon($$anchor, spread_props({ name: "bot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bot);

// node_modules/lucide-svelte/dist/icons/box.svelte
mark_module_start();
Box[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/box.svelte";
function Box($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Box);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z"
      }
    ],
    ["path", { "d": "m3.3 7 8.7 5 8.7-5" }],
    ["path", { "d": "M12 22V12" }]
  ];
  Icon($$anchor, spread_props({ name: "box" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Box, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Box);

// node_modules/lucide-svelte/dist/icons/boxes.svelte
mark_module_start();
Boxes[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/boxes.svelte";
function Boxes($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Boxes);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.97 12.92A2 2 0 0 0 2 14.63v3.24a2 2 0 0 0 .97 1.71l3 1.8a2 2 0 0 0 2.06 0L12 19v-5.5l-5-3-4.03 2.42Z"
      }
    ],
    ["path", { "d": "m7 16.5-4.74-2.85" }],
    ["path", { "d": "m7 16.5 5-3" }],
    ["path", { "d": "M7 16.5v5.17" }],
    [
      "path",
      {
        "d": "M12 13.5V19l3.97 2.38a2 2 0 0 0 2.06 0l3-1.8a2 2 0 0 0 .97-1.71v-3.24a2 2 0 0 0-.97-1.71L17 10.5l-5 3Z"
      }
    ],
    ["path", { "d": "m17 16.5-5-3" }],
    ["path", { "d": "m17 16.5 4.74-2.85" }],
    ["path", { "d": "M17 16.5v5.17" }],
    [
      "path",
      {
        "d": "M7.97 4.42A2 2 0 0 0 7 6.13v4.37l5 3 5-3V6.13a2 2 0 0 0-.97-1.71l-3-1.8a2 2 0 0 0-2.06 0l-3 1.8Z"
      }
    ],
    ["path", { "d": "M12 8 7.26 5.15" }],
    ["path", { "d": "m12 8 4.74-2.85" }],
    ["path", { "d": "M12 13.5V8" }]
  ];
  Icon($$anchor, spread_props({ name: "boxes" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Boxes, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Boxes);

// node_modules/lucide-svelte/dist/icons/braces.svelte
mark_module_start();
Braces[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/braces.svelte";
function Braces($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Braces);
  const iconNode = [
    [
      "path",
      {
        "d": "M8 3H7a2 2 0 0 0-2 2v5a2 2 0 0 1-2 2 2 2 0 0 1 2 2v5c0 1.1.9 2 2 2h1"
      }
    ],
    [
      "path",
      {
        "d": "M16 21h1a2 2 0 0 0 2-2v-5c0-1.1.9-2 2-2a2 2 0 0 1-2-2V5a2 2 0 0 0-2-2h-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "braces" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Braces, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Braces);

// node_modules/lucide-svelte/dist/icons/brackets.svelte
mark_module_start();
Brackets[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/brackets.svelte";
function Brackets($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Brackets);
  const iconNode = [
    ["path", { "d": "M16 3h3v18h-3" }],
    ["path", { "d": "M8 21H5V3h3" }]
  ];
  Icon($$anchor, spread_props({ name: "brackets" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Brackets, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Brackets);

// node_modules/lucide-svelte/dist/icons/brain-circuit.svelte
mark_module_start();
Brain_circuit[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/brain-circuit.svelte";
function Brain_circuit($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Brain_circuit);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 5a3 3 0 1 0-5.997.125 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z"
      }
    ],
    ["path", { "d": "M9 13a4.5 4.5 0 0 0 3-4" }],
    [
      "path",
      { "d": "M6.003 5.125A3 3 0 0 0 6.401 6.5" }
    ],
    [
      "path",
      { "d": "M3.477 10.896a4 4 0 0 1 .585-.396" }
    ],
    [
      "path",
      { "d": "M6 18a4 4 0 0 1-1.967-.516" }
    ],
    ["path", { "d": "M12 13h4" }],
    ["path", { "d": "M12 18h6a2 2 0 0 1 2 2v1" }],
    ["path", { "d": "M12 8h8" }],
    ["path", { "d": "M16 8V5a2 2 0 0 1 2-2" }],
    [
      "circle",
      { "cx": "16", "cy": "13", "r": ".5" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "3", "r": ".5" }
    ],
    [
      "circle",
      { "cx": "20", "cy": "21", "r": ".5" }
    ],
    [
      "circle",
      { "cx": "20", "cy": "8", "r": ".5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "brain-circuit" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Brain_circuit, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Brain_circuit);

// node_modules/lucide-svelte/dist/icons/brain-cog.svelte
mark_module_start();
Brain_cog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/brain-cog.svelte";
function Brain_cog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Brain_cog);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 5a3 3 0 1 0-5.997.142 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588 4 4 0 0 0 7.636 2.106 3.2 3.2 0 0 0 .164-.546c.028-.13.306-.13.335 0a3.2 3.2 0 0 0 .163.546 4 4 0 0 0 7.636-2.106 4 4 0 0 0 .556-6.588 4 4 0 0 0-2.526-5.77A3 3 0 1 0 12 5"
      }
    ],
    [
      "path",
      { "d": "M17.599 6.5a3 3 0 0 0 .399-1.375" }
    ],
    [
      "path",
      { "d": "M6.003 5.125A3 3 0 0 0 6.401 6.5" }
    ],
    [
      "path",
      { "d": "M3.477 10.896a4 4 0 0 1 .585-.396" }
    ],
    [
      "path",
      { "d": "M19.938 10.5a4 4 0 0 1 .585.396" }
    ],
    [
      "path",
      { "d": "M6 18a4 4 0 0 1-1.967-.516" }
    ],
    [
      "path",
      { "d": "M19.967 17.484A4 4 0 0 1 18 18" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ],
    ["path", { "d": "m15.7 10.4-.9.4" }],
    ["path", { "d": "m9.2 13.2-.9.4" }],
    ["path", { "d": "m13.6 15.7-.4-.9" }],
    ["path", { "d": "m10.8 9.2-.4-.9" }],
    ["path", { "d": "m15.7 13.5-.9-.4" }],
    ["path", { "d": "m9.2 10.9-.9-.4" }],
    ["path", { "d": "m10.5 15.7.4-.9" }],
    ["path", { "d": "m13.1 9.2.4-.9" }]
  ];
  Icon($$anchor, spread_props({ name: "brain-cog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Brain_cog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Brain_cog);

// node_modules/lucide-svelte/dist/icons/brain.svelte
mark_module_start();
Brain[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/brain.svelte";
function Brain($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Brain);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 5a3 3 0 1 0-5.997.125 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z"
      }
    ],
    [
      "path",
      {
        "d": "M12 5a3 3 0 1 1 5.997.125 4 4 0 0 1 2.526 5.77 4 4 0 0 1-.556 6.588A4 4 0 1 1 12 18Z"
      }
    ],
    [
      "path",
      {
        "d": "M15 13a4.5 4.5 0 0 1-3-4 4.5 4.5 0 0 1-3 4"
      }
    ],
    [
      "path",
      { "d": "M17.599 6.5a3 3 0 0 0 .399-1.375" }
    ],
    [
      "path",
      { "d": "M6.003 5.125A3 3 0 0 0 6.401 6.5" }
    ],
    [
      "path",
      { "d": "M3.477 10.896a4 4 0 0 1 .585-.396" }
    ],
    [
      "path",
      { "d": "M19.938 10.5a4 4 0 0 1 .585.396" }
    ],
    [
      "path",
      { "d": "M6 18a4 4 0 0 1-1.967-.516" }
    ],
    [
      "path",
      { "d": "M19.967 17.484A4 4 0 0 1 18 18" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "brain" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Brain, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Brain);

// node_modules/lucide-svelte/dist/icons/brick-wall.svelte
mark_module_start();
Brick_wall[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/brick-wall.svelte";
function Brick_wall($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Brick_wall);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 9v6" }],
    ["path", { "d": "M16 15v6" }],
    ["path", { "d": "M16 3v6" }],
    ["path", { "d": "M3 15h18" }],
    ["path", { "d": "M3 9h18" }],
    ["path", { "d": "M8 15v6" }],
    ["path", { "d": "M8 3v6" }]
  ];
  Icon($$anchor, spread_props({ name: "brick-wall" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Brick_wall, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Brick_wall);

// node_modules/lucide-svelte/dist/icons/briefcase-business.svelte
mark_module_start();
Briefcase_business[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/briefcase-business.svelte";
function Briefcase_business($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Briefcase_business);
  const iconNode = [
    ["path", { "d": "M12 12h.01" }],
    [
      "path",
      {
        "d": "M16 6V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2"
      }
    ],
    [
      "path",
      { "d": "M22 13a18.15 18.15 0 0 1-20 0" }
    ],
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "6",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "briefcase-business" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Briefcase_business, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Briefcase_business);

// node_modules/lucide-svelte/dist/icons/briefcase-conveyor-belt.svelte
mark_module_start();
Briefcase_conveyor_belt[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/briefcase-conveyor-belt.svelte";
function Briefcase_conveyor_belt($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Briefcase_conveyor_belt);
  const iconNode = [
    ["path", { "d": "M10 20v2" }],
    ["path", { "d": "M14 20v2" }],
    ["path", { "d": "M18 20v2" }],
    ["path", { "d": "M21 20H3" }],
    ["path", { "d": "M6 20v2" }],
    [
      "path",
      {
        "d": "M8 16V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v12"
      }
    ],
    [
      "rect",
      {
        "x": "4",
        "y": "6",
        "width": "16",
        "height": "10",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "briefcase-conveyor-belt" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Briefcase_conveyor_belt, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Briefcase_conveyor_belt);

// node_modules/lucide-svelte/dist/icons/briefcase-medical.svelte
mark_module_start();
Briefcase_medical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/briefcase-medical.svelte";
function Briefcase_medical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Briefcase_medical);
  const iconNode = [
    ["path", { "d": "M12 11v4" }],
    ["path", { "d": "M14 13h-4" }],
    [
      "path",
      {
        "d": "M16 6V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2"
      }
    ],
    ["path", { "d": "M18 6v14" }],
    ["path", { "d": "M6 6v14" }],
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "6",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "briefcase-medical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Briefcase_medical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Briefcase_medical);

// node_modules/lucide-svelte/dist/icons/briefcase.svelte
mark_module_start();
Briefcase[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/briefcase.svelte";
function Briefcase($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Briefcase);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"
      }
    ],
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "6",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "briefcase" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Briefcase, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Briefcase);

// node_modules/lucide-svelte/dist/icons/bring-to-front.svelte
mark_module_start();
Bring_to_front[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bring-to-front.svelte";
function Bring_to_front($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bring_to_front);
  const iconNode = [
    [
      "rect",
      {
        "x": "8",
        "y": "8",
        "width": "8",
        "height": "8",
        "rx": "2"
      }
    ],
    [
      "path",
      {
        "d": "M4 10a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2"
      }
    ],
    [
      "path",
      {
        "d": "M14 20a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bring-to-front" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bring_to_front, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bring_to_front);

// node_modules/lucide-svelte/dist/icons/brush.svelte
mark_module_start();
Brush[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/brush.svelte";
function Brush($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Brush);
  const iconNode = [
    [
      "path",
      {
        "d": "m9.06 11.9 8.07-8.06a2.85 2.85 0 1 1 4.03 4.03l-8.06 8.08"
      }
    ],
    [
      "path",
      {
        "d": "M7.07 14.94c-1.66 0-3 1.35-3 3.02 0 1.33-2.5 1.52-2 2.02 1.08 1.1 2.49 2.02 4 2.02 2.2 0 4-1.8 4-4.04a3.01 3.01 0 0 0-3-3.02z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "brush" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Brush, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Brush);

// node_modules/lucide-svelte/dist/icons/bug-off.svelte
mark_module_start();
Bug_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bug-off.svelte";
function Bug_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bug_off);
  const iconNode = [
    [
      "path",
      { "d": "M15 7.13V6a3 3 0 0 0-5.14-2.1L8 2" }
    ],
    ["path", { "d": "M14.12 3.88 16 2" }],
    [
      "path",
      { "d": "M22 13h-4v-2a4 4 0 0 0-4-4h-1.3" }
    ],
    [
      "path",
      { "d": "M20.97 5c0 2.1-1.6 3.8-3.5 4" }
    ],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      {
        "d": "M7.7 7.7A4 4 0 0 0 6 11v3a6 6 0 0 0 11.13 3.13"
      }
    ],
    ["path", { "d": "M12 20v-8" }],
    ["path", { "d": "M6 13H2" }],
    [
      "path",
      { "d": "M3 21c0-2.1 1.7-3.9 3.8-4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bug-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bug_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bug_off);

// node_modules/lucide-svelte/dist/icons/bug-play.svelte
mark_module_start();
Bug_play[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bug-play.svelte";
function Bug_play($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bug_play);
  const iconNode = [
    [
      "path",
      {
        "d": "M12.765 21.522a.5.5 0 0 1-.765-.424v-8.196a.5.5 0 0 1 .765-.424l5.878 3.674a1 1 0 0 1 0 1.696z"
      }
    ],
    ["path", { "d": "M14.12 3.88 16 2" }],
    [
      "path",
      {
        "d": "M18 11a4 4 0 0 0-4-4h-4a4 4 0 0 0-4 4v3a6.1 6.1 0 0 0 2 4.5"
      }
    ],
    [
      "path",
      { "d": "M20.97 5c0 2.1-1.6 3.8-3.5 4" }
    ],
    [
      "path",
      { "d": "M3 21c0-2.1 1.7-3.9 3.8-4" }
    ],
    ["path", { "d": "M6 13H2" }],
    [
      "path",
      { "d": "M6.53 9C4.6 8.8 3 7.1 3 5" }
    ],
    ["path", { "d": "m8 2 1.88 1.88" }],
    [
      "path",
      { "d": "M9 7.13v-1a3.003 3.003 0 1 1 6 0v1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bug-play" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bug_play, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bug_play);

// node_modules/lucide-svelte/dist/icons/bug.svelte
mark_module_start();
Bug[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bug.svelte";
function Bug($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bug);
  const iconNode = [
    ["path", { "d": "m8 2 1.88 1.88" }],
    ["path", { "d": "M14.12 3.88 16 2" }],
    [
      "path",
      { "d": "M9 7.13v-1a3.003 3.003 0 1 1 6 0v1" }
    ],
    [
      "path",
      {
        "d": "M12 20c-3.3 0-6-2.7-6-6v-3a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v3c0 3.3-2.7 6-6 6"
      }
    ],
    ["path", { "d": "M12 20v-9" }],
    [
      "path",
      { "d": "M6.53 9C4.6 8.8 3 7.1 3 5" }
    ],
    ["path", { "d": "M6 13H2" }],
    [
      "path",
      { "d": "M3 21c0-2.1 1.7-3.9 3.8-4" }
    ],
    [
      "path",
      { "d": "M20.97 5c0 2.1-1.6 3.8-3.5 4" }
    ],
    ["path", { "d": "M22 13h-4" }],
    [
      "path",
      { "d": "M17.2 17c2.1.1 3.8 1.9 3.8 4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bug" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bug, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bug);

// node_modules/lucide-svelte/dist/icons/building-2.svelte
mark_module_start();
Building_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/building-2.svelte";
function Building_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Building_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z"
      }
    ],
    [
      "path",
      { "d": "M6 12H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2" }
    ],
    [
      "path",
      {
        "d": "M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2"
      }
    ],
    ["path", { "d": "M10 6h4" }],
    ["path", { "d": "M10 10h4" }],
    ["path", { "d": "M10 14h4" }],
    ["path", { "d": "M10 18h4" }]
  ];
  Icon($$anchor, spread_props({ name: "building-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Building_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Building_2);

// node_modules/lucide-svelte/dist/icons/building.svelte
mark_module_start();
Building[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/building.svelte";
function Building($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Building);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "20",
        "x": "4",
        "y": "2",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["path", { "d": "M9 22v-4h6v4" }],
    ["path", { "d": "M8 6h.01" }],
    ["path", { "d": "M16 6h.01" }],
    ["path", { "d": "M12 6h.01" }],
    ["path", { "d": "M12 10h.01" }],
    ["path", { "d": "M12 14h.01" }],
    ["path", { "d": "M16 10h.01" }],
    ["path", { "d": "M16 14h.01" }],
    ["path", { "d": "M8 10h.01" }],
    ["path", { "d": "M8 14h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "building" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Building, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Building);

// node_modules/lucide-svelte/dist/icons/bus-front.svelte
mark_module_start();
Bus_front[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bus-front.svelte";
function Bus_front($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bus_front);
  const iconNode = [
    ["path", { "d": "M4 6 2 7" }],
    ["path", { "d": "M10 6h4" }],
    ["path", { "d": "m22 7-2-1" }],
    [
      "rect",
      {
        "width": "16",
        "height": "16",
        "x": "4",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M4 11h16" }],
    ["path", { "d": "M8 15h.01" }],
    ["path", { "d": "M16 15h.01" }],
    ["path", { "d": "M6 19v2" }],
    ["path", { "d": "M18 21v-2" }]
  ];
  Icon($$anchor, spread_props({ name: "bus-front" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bus_front, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bus_front);

// node_modules/lucide-svelte/dist/icons/bus.svelte
mark_module_start();
Bus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/bus.svelte";
function Bus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Bus);
  const iconNode = [
    ["path", { "d": "M8 6v6" }],
    ["path", { "d": "M15 6v6" }],
    ["path", { "d": "M2 12h19.6" }],
    [
      "path",
      {
        "d": "M18 18h3s.5-1.7.8-2.8c.1-.4.2-.8.2-1.2 0-.4-.1-.8-.2-1.2l-1.4-5C20.1 6.8 19.1 6 18 6H4a2 2 0 0 0-2 2v10h3"
      }
    ],
    [
      "circle",
      { "cx": "7", "cy": "18", "r": "2" }
    ],
    ["path", { "d": "M9 18h5" }],
    [
      "circle",
      { "cx": "16", "cy": "18", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "bus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Bus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Bus);

// node_modules/lucide-svelte/dist/icons/cable-car.svelte
mark_module_start();
Cable_car[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cable-car.svelte";
function Cable_car($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cable_car);
  const iconNode = [
    ["path", { "d": "M10 3h.01" }],
    ["path", { "d": "M14 2h.01" }],
    ["path", { "d": "m2 9 20-5" }],
    ["path", { "d": "M12 12V6.5" }],
    [
      "rect",
      {
        "width": "16",
        "height": "10",
        "x": "4",
        "y": "12",
        "rx": "3"
      }
    ],
    ["path", { "d": "M9 12v5" }],
    ["path", { "d": "M15 12v5" }],
    ["path", { "d": "M4 17h16" }]
  ];
  Icon($$anchor, spread_props({ name: "cable-car" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cable_car, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cable_car);

// node_modules/lucide-svelte/dist/icons/cable.svelte
mark_module_start();
Cable[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cable.svelte";
function Cable($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cable);
  const iconNode = [
    [
      "path",
      {
        "d": "M17 21v-2a1 1 0 0 1-1-1v-1a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1"
      }
    ],
    [
      "path",
      {
        "d": "M19 15V6.5a1 1 0 0 0-7 0v11a1 1 0 0 1-7 0V9"
      }
    ],
    ["path", { "d": "M21 21v-2h-4" }],
    ["path", { "d": "M3 5h4V3" }],
    [
      "path",
      {
        "d": "M7 5a1 1 0 0 1 1 1v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a1 1 0 0 1 1-1V3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cable" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cable, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cable);

// node_modules/lucide-svelte/dist/icons/cake-slice.svelte
mark_module_start();
Cake_slice[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cake-slice.svelte";
function Cake_slice($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cake_slice);
  const iconNode = [
    [
      "circle",
      { "cx": "9", "cy": "7", "r": "2" }
    ],
    [
      "path",
      {
        "d": "M7.2 7.9 3 11v9c0 .6.4 1 1 1h16c.6 0 1-.4 1-1v-9c0-2-3-6-7-8l-3.6 2.6"
      }
    ],
    ["path", { "d": "M16 13H3" }],
    ["path", { "d": "M16 17H3" }]
  ];
  Icon($$anchor, spread_props({ name: "cake-slice" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cake_slice, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cake_slice);

// node_modules/lucide-svelte/dist/icons/cake.svelte
mark_module_start();
Cake[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cake.svelte";
function Cake($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cake);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 21v-8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8"
      }
    ],
    [
      "path",
      {
        "d": "M4 16s.5-1 2-1 2.5 2 4 2 2.5-2 4-2 2.5 2 4 2 2-1 2-1"
      }
    ],
    ["path", { "d": "M2 21h20" }],
    ["path", { "d": "M7 8v3" }],
    ["path", { "d": "M12 8v3" }],
    ["path", { "d": "M17 8v3" }],
    ["path", { "d": "M7 4h.01" }],
    ["path", { "d": "M12 4h.01" }],
    ["path", { "d": "M17 4h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "cake" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cake, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cake);

// node_modules/lucide-svelte/dist/icons/calculator.svelte
mark_module_start();
Calculator[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calculator.svelte";
function Calculator($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calculator);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "20",
        "x": "4",
        "y": "2",
        "rx": "2"
      }
    ],
    [
      "line",
      { "x1": "8", "x2": "16", "y1": "6", "y2": "6" }
    ],
    [
      "line",
      {
        "x1": "16",
        "x2": "16",
        "y1": "14",
        "y2": "18"
      }
    ],
    ["path", { "d": "M16 10h.01" }],
    ["path", { "d": "M12 10h.01" }],
    ["path", { "d": "M8 10h.01" }],
    ["path", { "d": "M12 14h.01" }],
    ["path", { "d": "M8 14h.01" }],
    ["path", { "d": "M12 18h.01" }],
    ["path", { "d": "M8 18h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "calculator" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calculator, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calculator);

// node_modules/lucide-svelte/dist/icons/calendar-1.svelte
mark_module_start();
Calendar_1[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-1.svelte";
function Calendar_1($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_1);
  const iconNode = [
    ["path", { "d": "M11 14h1v4" }],
    ["path", { "d": "M16 2v4" }],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "M8 2v4" }],
    [
      "rect",
      {
        "x": "3",
        "y": "4",
        "width": "18",
        "height": "18",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "calendar-1" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_1, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_1);

// node_modules/lucide-svelte/dist/icons/calendar-arrow-down.svelte
mark_module_start();
Calendar_arrow_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-arrow-down.svelte";
function Calendar_arrow_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_arrow_down);
  const iconNode = [
    ["path", { "d": "m14 18 4 4 4-4" }],
    ["path", { "d": "M16 2v4" }],
    ["path", { "d": "M18 14v8" }],
    [
      "path",
      {
        "d": "M21 11.354V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7.343"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "M8 2v4" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-arrow-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_arrow_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_arrow_down);

// node_modules/lucide-svelte/dist/icons/calendar-arrow-up.svelte
mark_module_start();
Calendar_arrow_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-arrow-up.svelte";
function Calendar_arrow_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_arrow_up);
  const iconNode = [
    ["path", { "d": "m14 18 4-4 4 4" }],
    ["path", { "d": "M16 2v4" }],
    ["path", { "d": "M18 22v-8" }],
    [
      "path",
      {
        "d": "M21 11.343V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h9"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "M8 2v4" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-arrow-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_arrow_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_arrow_up);

// node_modules/lucide-svelte/dist/icons/calendar-check-2.svelte
mark_module_start();
Calendar_check_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-check-2.svelte";
function Calendar_check_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_check_2);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "path",
      {
        "d": "M21 14V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "m16 20 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-check-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_check_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_check_2);

// node_modules/lucide-svelte/dist/icons/calendar-check.svelte
mark_module_start();
Calendar_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-check.svelte";
function Calendar_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_check);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "m9 16 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_check);

// node_modules/lucide-svelte/dist/icons/calendar-clock.svelte
mark_module_start();
Calendar_clock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-clock.svelte";
function Calendar_clock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_clock);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5"
      }
    ],
    ["path", { "d": "M16 2v4" }],
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M3 10h5" }],
    ["path", { "d": "M17.5 17.5 16 16.3V14" }],
    [
      "circle",
      { "cx": "16", "cy": "16", "r": "6" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "calendar-clock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_clock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_clock);

// node_modules/lucide-svelte/dist/icons/calendar-cog.svelte
mark_module_start();
Calendar_cog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-cog.svelte";
function Calendar_cog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_cog);
  const iconNode = [
    ["path", { "d": "m15.2 16.9-.9-.4" }],
    ["path", { "d": "m15.2 19.1-.9.4" }],
    ["path", { "d": "M16 2v4" }],
    ["path", { "d": "m16.9 15.2-.4-.9" }],
    ["path", { "d": "m16.9 20.8-.4.9" }],
    ["path", { "d": "m19.5 14.3-.4.9" }],
    ["path", { "d": "m19.5 21.7-.4-.9" }],
    [
      "path",
      {
        "d": "M21 10.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6"
      }
    ],
    ["path", { "d": "m21.7 16.5-.9.4" }],
    ["path", { "d": "m21.7 19.5-.9-.4" }],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "M8 2v4" }],
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "calendar-cog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_cog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_cog);

// node_modules/lucide-svelte/dist/icons/calendar-days.svelte
mark_module_start();
Calendar_days[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-days.svelte";
function Calendar_days($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_days);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "M8 14h.01" }],
    ["path", { "d": "M12 14h.01" }],
    ["path", { "d": "M16 14h.01" }],
    ["path", { "d": "M8 18h.01" }],
    ["path", { "d": "M12 18h.01" }],
    ["path", { "d": "M16 18h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-days" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_days, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_days);

// node_modules/lucide-svelte/dist/icons/calendar-fold.svelte
mark_module_start();
Calendar_fold[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-fold.svelte";
function Calendar_fold($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_fold);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "path",
      {
        "d": "M21 17V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11Z"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    [
      "path",
      { "d": "M15 22v-4a2 2 0 0 1 2-2h4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "calendar-fold" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_fold, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_fold);

// node_modules/lucide-svelte/dist/icons/calendar-heart.svelte
mark_module_start();
Calendar_heart[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-heart.svelte";
function Calendar_heart($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_heart);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 10h18V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7"
      }
    ],
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "path",
      {
        "d": "M21.29 14.7a2.43 2.43 0 0 0-2.65-.52c-.3.12-.57.3-.8.53l-.34.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L17.5 22l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "calendar-heart" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_heart, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_heart);

// node_modules/lucide-svelte/dist/icons/calendar-minus-2.svelte
mark_module_start();
Calendar_minus_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-minus-2.svelte";
function Calendar_minus_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_minus_2);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "M10 16h4" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-minus-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_minus_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_minus_2);

// node_modules/lucide-svelte/dist/icons/calendar-minus.svelte
mark_module_start();
Calendar_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-minus.svelte";
function Calendar_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_minus);
  const iconNode = [
    ["path", { "d": "M16 19h6" }],
    ["path", { "d": "M16 2v4" }],
    [
      "path",
      {
        "d": "M21 15V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8.5"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "M8 2v4" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_minus);

// node_modules/lucide-svelte/dist/icons/calendar-off.svelte
mark_module_start();
Calendar_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-off.svelte";
function Calendar_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M4.2 4.2A2 2 0 0 0 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 1.82-1.18"
      }
    ],
    [
      "path",
      { "d": "M21 15.5V6a2 2 0 0 0-2-2H9.5" }
    ],
    ["path", { "d": "M16 2v4" }],
    ["path", { "d": "M3 10h7" }],
    ["path", { "d": "M21 10h-5.5" }],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_off);

// node_modules/lucide-svelte/dist/icons/calendar-plus-2.svelte
mark_module_start();
Calendar_plus_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-plus-2.svelte";
function Calendar_plus_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_plus_2);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "M10 16h4" }],
    ["path", { "d": "M12 14v4" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-plus-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_plus_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_plus_2);

// node_modules/lucide-svelte/dist/icons/calendar-plus.svelte
mark_module_start();
Calendar_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-plus.svelte";
function Calendar_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_plus);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "path",
      {
        "d": "M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "M16 19h6" }],
    ["path", { "d": "M19 16v6" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_plus);

// node_modules/lucide-svelte/dist/icons/calendar-range.svelte
mark_module_start();
Calendar_range[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-range.svelte";
function Calendar_range($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_range);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M16 2v4" }],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M17 14h-6" }],
    ["path", { "d": "M13 18H7" }],
    ["path", { "d": "M7 14h.01" }],
    ["path", { "d": "M17 18h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-range" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_range, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_range);

// node_modules/lucide-svelte/dist/icons/calendar-search.svelte
mark_module_start();
Calendar_search[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-search.svelte";
function Calendar_search($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_search);
  const iconNode = [
    ["path", { "d": "M16 2v4" }],
    [
      "path",
      {
        "d": "M21 11.75V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7.25"
      }
    ],
    ["path", { "d": "m22 22-1.875-1.875" }],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "M8 2v4" }],
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "calendar-search" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_search, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_search);

// node_modules/lucide-svelte/dist/icons/calendar-x-2.svelte
mark_module_start();
Calendar_x_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-x-2.svelte";
function Calendar_x_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_x_2);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "path",
      {
        "d": "M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "m17 22 5-5" }],
    ["path", { "d": "m17 17 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-x-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_x_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_x_2);

// node_modules/lucide-svelte/dist/icons/calendar-x.svelte
mark_module_start();
Calendar_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar-x.svelte";
function Calendar_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar_x);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 10h18" }],
    ["path", { "d": "m14 14-4 4" }],
    ["path", { "d": "m10 14 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar_x);

// node_modules/lucide-svelte/dist/icons/calendar.svelte
mark_module_start();
Calendar[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/calendar.svelte";
function Calendar($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Calendar);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 10h18" }]
  ];
  Icon($$anchor, spread_props({ name: "calendar" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Calendar, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Calendar);

// node_modules/lucide-svelte/dist/icons/camera-off.svelte
mark_module_start();
Camera_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/camera-off.svelte";
function Camera_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Camera_off);
  const iconNode = [
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ],
    [
      "path",
      { "d": "M7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16" }
    ],
    [
      "path",
      { "d": "M9.5 4h5L17 7h3a2 2 0 0 1 2 2v7.5" }
    ],
    [
      "path",
      { "d": "M14.121 15.121A3 3 0 1 1 9.88 10.88" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "camera-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Camera_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Camera_off);

// node_modules/lucide-svelte/dist/icons/camera.svelte
mark_module_start();
Camera[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/camera.svelte";
function Camera($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Camera);
  const iconNode = [
    [
      "path",
      {
        "d": "M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "13", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "camera" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Camera, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Camera);

// node_modules/lucide-svelte/dist/icons/candy-cane.svelte
mark_module_start();
Candy_cane[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/candy-cane.svelte";
function Candy_cane($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Candy_cane);
  const iconNode = [
    [
      "path",
      {
        "d": "M5.7 21a2 2 0 0 1-3.5-2l8.6-14a6 6 0 0 1 10.4 6 2 2 0 1 1-3.464-2 2 2 0 1 0-3.464-2Z"
      }
    ],
    ["path", { "d": "M17.75 7 15 2.1" }],
    ["path", { "d": "M10.9 4.8 13 9" }],
    ["path", { "d": "m7.9 9.7 2 4.4" }],
    ["path", { "d": "M4.9 14.7 7 18.9" }]
  ];
  Icon($$anchor, spread_props({ name: "candy-cane" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Candy_cane, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Candy_cane);

// node_modules/lucide-svelte/dist/icons/candy-off.svelte
mark_module_start();
Candy_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/candy-off.svelte";
function Candy_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Candy_off);
  const iconNode = [
    [
      "path",
      { "d": "m8.5 8.5-1 1a4.95 4.95 0 0 0 7 7l1-1" }
    ],
    [
      "path",
      {
        "d": "M11.843 6.187A4.947 4.947 0 0 1 16.5 7.5a4.947 4.947 0 0 1 1.313 4.657"
      }
    ],
    ["path", { "d": "M14 16.5V14" }],
    ["path", { "d": "M14 6.5v1.843" }],
    ["path", { "d": "M10 10v7.5" }],
    [
      "path",
      {
        "d": "m16 7 1-5 1.367.683A3 3 0 0 0 19.708 3H21v1.292a3 3 0 0 0 .317 1.341L22 7l-5 1"
      }
    ],
    [
      "path",
      {
        "d": "m8 17-1 5-1.367-.683A3 3 0 0 0 4.292 21H3v-1.292a3 3 0 0 0-.317-1.341L2 17l5-1"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "candy-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Candy_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Candy_off);

// node_modules/lucide-svelte/dist/icons/candy.svelte
mark_module_start();
Candy[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/candy.svelte";
function Candy($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Candy);
  const iconNode = [
    [
      "path",
      {
        "d": "m9.5 7.5-2 2a4.95 4.95 0 1 0 7 7l2-2a4.95 4.95 0 1 0-7-7Z"
      }
    ],
    ["path", { "d": "M14 6.5v10" }],
    ["path", { "d": "M10 7.5v10" }],
    [
      "path",
      {
        "d": "m16 7 1-5 1.37.68A3 3 0 0 0 19.7 3H21v1.3c0 .46.1.92.32 1.33L22 7l-5 1"
      }
    ],
    [
      "path",
      {
        "d": "m8 17-1 5-1.37-.68A3 3 0 0 0 4.3 21H3v-1.3a3 3 0 0 0-.32-1.33L2 17l5-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "candy" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Candy, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Candy);

// node_modules/lucide-svelte/dist/icons/cannabis.svelte
mark_module_start();
Cannabis[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cannabis.svelte";
function Cannabis($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cannabis);
  const iconNode = [
    ["path", { "d": "M12 22v-4" }],
    [
      "path",
      {
        "d": "M7 12c-1.5 0-4.5 1.5-5 3 3.5 1.5 6 1 6 1-1.5 1.5-2 3.5-2 5 2.5 0 4.5-1.5 6-3 1.5 1.5 3.5 3 6 3 0-1.5-.5-3.5-2-5 0 0 2.5.5 6-1-.5-1.5-3.5-3-5-3 1.5-1 4-4 4-6-2.5 0-5.5 1.5-7 3 0-2.5-.5-5-2-7-1.5 2-2 4.5-2 7-1.5-1.5-4.5-3-7-3 0 2 2.5 5 4 6"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cannabis" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cannabis, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cannabis);

// node_modules/lucide-svelte/dist/icons/captions-off.svelte
mark_module_start();
Captions_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/captions-off.svelte";
function Captions_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Captions_off);
  const iconNode = [
    [
      "path",
      { "d": "M10.5 5H19a2 2 0 0 1 2 2v8.5" }
    ],
    ["path", { "d": "M17 11h-.5" }],
    [
      "path",
      { "d": "M19 19H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2" }
    ],
    ["path", { "d": "m2 2 20 20" }],
    ["path", { "d": "M7 11h4" }],
    ["path", { "d": "M7 15h2.5" }]
  ];
  Icon($$anchor, spread_props({ name: "captions-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Captions_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Captions_off);

// node_modules/lucide-svelte/dist/icons/captions.svelte
mark_module_start();
Captions[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/captions.svelte";
function Captions($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Captions);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "14",
        "x": "3",
        "y": "5",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "path",
      { "d": "M7 15h4M15 15h2M7 11h2M13 11h4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "captions" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Captions, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Captions);

// node_modules/lucide-svelte/dist/icons/car-front.svelte
mark_module_start();
Car_front[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/car-front.svelte";
function Car_front($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Car_front);
  const iconNode = [
    [
      "path",
      {
        "d": "m21 8-2 2-1.5-3.7A2 2 0 0 0 15.646 5H8.4a2 2 0 0 0-1.903 1.257L5 10 3 8"
      }
    ],
    ["path", { "d": "M7 14h.01" }],
    ["path", { "d": "M17 14h.01" }],
    [
      "rect",
      {
        "width": "18",
        "height": "8",
        "x": "3",
        "y": "10",
        "rx": "2"
      }
    ],
    ["path", { "d": "M5 18v2" }],
    ["path", { "d": "M19 18v2" }]
  ];
  Icon($$anchor, spread_props({ name: "car-front" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Car_front, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Car_front);

// node_modules/lucide-svelte/dist/icons/car-taxi-front.svelte
mark_module_start();
Car_taxi_front[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/car-taxi-front.svelte";
function Car_taxi_front($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Car_taxi_front);
  const iconNode = [
    ["path", { "d": "M10 2h4" }],
    [
      "path",
      {
        "d": "m21 8-2 2-1.5-3.7A2 2 0 0 0 15.646 5H8.4a2 2 0 0 0-1.903 1.257L5 10 3 8"
      }
    ],
    ["path", { "d": "M7 14h.01" }],
    ["path", { "d": "M17 14h.01" }],
    [
      "rect",
      {
        "width": "18",
        "height": "8",
        "x": "3",
        "y": "10",
        "rx": "2"
      }
    ],
    ["path", { "d": "M5 18v2" }],
    ["path", { "d": "M19 18v2" }]
  ];
  Icon($$anchor, spread_props({ name: "car-taxi-front" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Car_taxi_front, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Car_taxi_front);

// node_modules/lucide-svelte/dist/icons/car.svelte
mark_module_start();
Car[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/car.svelte";
function Car($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Car);
  const iconNode = [
    [
      "path",
      {
        "d": "M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 16 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.4 2.9A3.7 3.7 0 0 0 2 12v4c0 .6.4 1 1 1h2"
      }
    ],
    [
      "circle",
      { "cx": "7", "cy": "17", "r": "2" }
    ],
    ["path", { "d": "M9 17h6" }],
    [
      "circle",
      { "cx": "17", "cy": "17", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "car" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Car, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Car);

// node_modules/lucide-svelte/dist/icons/caravan.svelte
mark_module_start();
Caravan[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/caravan.svelte";
function Caravan($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Caravan);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 19V9a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v8a2 2 0 0 0 2 2h2"
      }
    ],
    [
      "path",
      { "d": "M2 9h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2" }
    ],
    [
      "path",
      {
        "d": "M22 17v1a1 1 0 0 1-1 1H10v-9a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v9"
      }
    ],
    [
      "circle",
      { "cx": "8", "cy": "19", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "caravan" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Caravan, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Caravan);

// node_modules/lucide-svelte/dist/icons/carrot.svelte
mark_module_start();
Carrot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/carrot.svelte";
function Carrot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Carrot);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.27 21.7s9.87-3.5 12.73-6.36a4.5 4.5 0 0 0-6.36-6.37C5.77 11.84 2.27 21.7 2.27 21.7zM8.64 14l-2.05-2.04M15.34 15l-2.46-2.46"
      }
    ],
    [
      "path",
      {
        "d": "M22 9s-1.33-2-3.5-2C16.86 7 15 9 15 9s1.33 2 3.5 2S22 9 22 9z"
      }
    ],
    [
      "path",
      {
        "d": "M15 2s-2 1.33-2 3.5S15 9 15 9s2-1.84 2-3.5C17 3.33 15 2 15 2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "carrot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Carrot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Carrot);

// node_modules/lucide-svelte/dist/icons/case-lower.svelte
mark_module_start();
Case_lower[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/case-lower.svelte";
function Case_lower($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Case_lower);
  const iconNode = [
    [
      "circle",
      { "cx": "7", "cy": "12", "r": "3" }
    ],
    ["path", { "d": "M10 9v6" }],
    [
      "circle",
      { "cx": "17", "cy": "12", "r": "3" }
    ],
    ["path", { "d": "M14 7v8" }]
  ];
  Icon($$anchor, spread_props({ name: "case-lower" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Case_lower, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Case_lower);

// node_modules/lucide-svelte/dist/icons/case-sensitive.svelte
mark_module_start();
Case_sensitive[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/case-sensitive.svelte";
function Case_sensitive($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Case_sensitive);
  const iconNode = [
    ["path", { "d": "m3 15 4-8 4 8" }],
    ["path", { "d": "M4 13h6" }],
    [
      "circle",
      { "cx": "18", "cy": "12", "r": "3" }
    ],
    ["path", { "d": "M21 9v6" }]
  ];
  Icon($$anchor, spread_props({ name: "case-sensitive" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Case_sensitive, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Case_sensitive);

// node_modules/lucide-svelte/dist/icons/case-upper.svelte
mark_module_start();
Case_upper[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/case-upper.svelte";
function Case_upper($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Case_upper);
  const iconNode = [
    ["path", { "d": "m3 15 4-8 4 8" }],
    ["path", { "d": "M4 13h6" }],
    [
      "path",
      {
        "d": "M15 11h4.5a2 2 0 0 1 0 4H15V7h4a2 2 0 0 1 0 4"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "case-upper" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Case_upper, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Case_upper);

// node_modules/lucide-svelte/dist/icons/cassette-tape.svelte
mark_module_start();
Cassette_tape[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cassette-tape.svelte";
function Cassette_tape($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cassette_tape);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "16",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ],
    [
      "circle",
      { "cx": "8", "cy": "10", "r": "2" }
    ],
    ["path", { "d": "M8 12h8" }],
    [
      "circle",
      { "cx": "16", "cy": "10", "r": "2" }
    ],
    [
      "path",
      {
        "d": "m6 20 .7-2.9A1.4 1.4 0 0 1 8.1 16h7.8a1.4 1.4 0 0 1 1.4 1l.7 3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cassette-tape" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cassette_tape, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cassette_tape);

// node_modules/lucide-svelte/dist/icons/cast.svelte
mark_module_start();
Cast[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cast.svelte";
function Cast($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cast);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"
      }
    ],
    ["path", { "d": "M2 12a9 9 0 0 1 8 8" }],
    ["path", { "d": "M2 16a5 5 0 0 1 4 4" }],
    [
      "line",
      {
        "x1": "2",
        "x2": "2.01",
        "y1": "20",
        "y2": "20"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cast" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cast, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cast);

// node_modules/lucide-svelte/dist/icons/castle.svelte
mark_module_start();
Castle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/castle.svelte";
function Castle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Castle);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 20v-9H2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2Z"
      }
    ],
    ["path", { "d": "M18 11V4H6v7" }],
    [
      "path",
      { "d": "M15 22v-4a3 3 0 0 0-3-3a3 3 0 0 0-3 3v4" }
    ],
    ["path", { "d": "M22 11V9" }],
    ["path", { "d": "M2 11V9" }],
    ["path", { "d": "M6 4V2" }],
    ["path", { "d": "M18 4V2" }],
    ["path", { "d": "M10 4V2" }],
    ["path", { "d": "M14 4V2" }]
  ];
  Icon($$anchor, spread_props({ name: "castle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Castle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Castle);

// node_modules/lucide-svelte/dist/icons/cat.svelte
mark_module_start();
Cat[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cat.svelte";
function Cat($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cat);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 5c.67 0 1.35.09 2 .26 1.78-2 5.03-2.84 6.42-2.26 1.4.58-.42 7-.42 7 .57 1.07 1 2.24 1 3.44C21 17.9 16.97 21 12 21s-9-3-9-7.56c0-1.25.5-2.4 1-3.44 0 0-1.89-6.42-.5-7 1.39-.58 4.72.23 6.5 2.23A9.04 9.04 0 0 1 12 5Z"
      }
    ],
    ["path", { "d": "M8 14v.5" }],
    ["path", { "d": "M16 14v.5" }],
    [
      "path",
      { "d": "M11.25 16.25h1.5L12 17l-.75-.75Z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cat" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cat, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cat);

// node_modules/lucide-svelte/dist/icons/cctv.svelte
mark_module_start();
Cctv[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cctv.svelte";
function Cctv($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cctv);
  const iconNode = [
    [
      "path",
      {
        "d": "M16.75 12h3.632a1 1 0 0 1 .894 1.447l-2.034 4.069a1 1 0 0 1-1.708.134l-2.124-2.97"
      }
    ],
    [
      "path",
      {
        "d": "M17.106 9.053a1 1 0 0 1 .447 1.341l-3.106 6.211a1 1 0 0 1-1.342.447L3.61 12.3a2.92 2.92 0 0 1-1.3-3.91L3.69 5.6a2.92 2.92 0 0 1 3.92-1.3z"
      }
    ],
    [
      "path",
      { "d": "M2 19h3.76a2 2 0 0 0 1.8-1.1L9 15" }
    ],
    ["path", { "d": "M2 21v-4" }],
    ["path", { "d": "M7 9h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "cctv" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cctv, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cctv);

// node_modules/lucide-svelte/dist/icons/chart-area.svelte
mark_module_start();
Chart_area[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-area.svelte";
function Chart_area($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_area);
  const iconNode = [
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    [
      "path",
      {
        "d": "M7 11.207a.5.5 0 0 1 .146-.353l2-2a.5.5 0 0 1 .708 0l3.292 3.292a.5.5 0 0 0 .708 0l4.292-4.292a.5.5 0 0 1 .854.353V16a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "chart-area" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_area, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_area);

// node_modules/lucide-svelte/dist/icons/chart-bar-big.svelte
mark_module_start();
Chart_bar_big[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-bar-big.svelte";
function Chart_bar_big($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_bar_big);
  const iconNode = [
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    [
      "rect",
      {
        "x": "7",
        "y": "13",
        "width": "9",
        "height": "4",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "x": "7",
        "y": "5",
        "width": "12",
        "height": "4",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "chart-bar-big" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_bar_big, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_bar_big);

// node_modules/lucide-svelte/dist/icons/chart-bar-decreasing.svelte
mark_module_start();
Chart_bar_decreasing[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-bar-decreasing.svelte";
function Chart_bar_decreasing($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_bar_decreasing);
  const iconNode = [
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    ["path", { "d": "M7 11h8" }],
    ["path", { "d": "M7 16h3" }],
    ["path", { "d": "M7 6h12" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-bar-decreasing" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_bar_decreasing, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_bar_decreasing);

// node_modules/lucide-svelte/dist/icons/chart-bar-increasing.svelte
mark_module_start();
Chart_bar_increasing[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-bar-increasing.svelte";
function Chart_bar_increasing($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_bar_increasing);
  const iconNode = [
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    ["path", { "d": "M7 11h8" }],
    ["path", { "d": "M7 16h12" }],
    ["path", { "d": "M7 6h3" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-bar-increasing" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_bar_increasing, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_bar_increasing);

// node_modules/lucide-svelte/dist/icons/chart-bar-stacked.svelte
mark_module_start();
Chart_bar_stacked[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-bar-stacked.svelte";
function Chart_bar_stacked($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_bar_stacked);
  const iconNode = [
    ["path", { "d": "M11 13v4" }],
    ["path", { "d": "M15 5v4" }],
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    [
      "rect",
      {
        "x": "7",
        "y": "13",
        "width": "9",
        "height": "4",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "x": "7",
        "y": "5",
        "width": "12",
        "height": "4",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "chart-bar-stacked" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_bar_stacked, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_bar_stacked);

// node_modules/lucide-svelte/dist/icons/chart-bar.svelte
mark_module_start();
Chart_bar[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-bar.svelte";
function Chart_bar($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_bar);
  const iconNode = [
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    ["path", { "d": "M7 16h8" }],
    ["path", { "d": "M7 11h12" }],
    ["path", { "d": "M7 6h3" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-bar" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_bar, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_bar);

// node_modules/lucide-svelte/dist/icons/chart-candlestick.svelte
mark_module_start();
Chart_candlestick[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-candlestick.svelte";
function Chart_candlestick($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_candlestick);
  const iconNode = [
    ["path", { "d": "M9 5v4" }],
    [
      "rect",
      {
        "width": "4",
        "height": "6",
        "x": "7",
        "y": "9",
        "rx": "1"
      }
    ],
    ["path", { "d": "M9 15v2" }],
    ["path", { "d": "M17 3v2" }],
    [
      "rect",
      {
        "width": "4",
        "height": "8",
        "x": "15",
        "y": "5",
        "rx": "1"
      }
    ],
    ["path", { "d": "M17 13v3" }],
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-candlestick" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_candlestick, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_candlestick);

// node_modules/lucide-svelte/dist/icons/chart-column-big.svelte
mark_module_start();
Chart_column_big[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-column-big.svelte";
function Chart_column_big($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_column_big);
  const iconNode = [
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    [
      "rect",
      {
        "x": "15",
        "y": "5",
        "width": "4",
        "height": "12",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "x": "7",
        "y": "8",
        "width": "4",
        "height": "9",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "chart-column-big" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_column_big, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_column_big);

// node_modules/lucide-svelte/dist/icons/chart-column-decreasing.svelte
mark_module_start();
Chart_column_decreasing[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-column-decreasing.svelte";
function Chart_column_decreasing($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_column_decreasing);
  const iconNode = [
    ["path", { "d": "M13 17V9" }],
    ["path", { "d": "M18 17v-3" }],
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    ["path", { "d": "M8 17V5" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-column-decreasing" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_column_decreasing, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_column_decreasing);

// node_modules/lucide-svelte/dist/icons/chart-column-increasing.svelte
mark_module_start();
Chart_column_increasing[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-column-increasing.svelte";
function Chart_column_increasing($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_column_increasing);
  const iconNode = [
    ["path", { "d": "M13 17V9" }],
    ["path", { "d": "M18 17V5" }],
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    ["path", { "d": "M8 17v-3" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-column-increasing" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_column_increasing, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_column_increasing);

// node_modules/lucide-svelte/dist/icons/chart-column-stacked.svelte
mark_module_start();
Chart_column_stacked[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-column-stacked.svelte";
function Chart_column_stacked($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_column_stacked);
  const iconNode = [
    ["path", { "d": "M11 13H7" }],
    ["path", { "d": "M19 9h-4" }],
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    [
      "rect",
      {
        "x": "15",
        "y": "5",
        "width": "4",
        "height": "12",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "x": "7",
        "y": "8",
        "width": "4",
        "height": "9",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "chart-column-stacked" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_column_stacked, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_column_stacked);

// node_modules/lucide-svelte/dist/icons/chart-column.svelte
mark_module_start();
Chart_column[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-column.svelte";
function Chart_column($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_column);
  const iconNode = [
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    ["path", { "d": "M18 17V9" }],
    ["path", { "d": "M13 17V5" }],
    ["path", { "d": "M8 17v-3" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-column" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_column, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_column);

// node_modules/lucide-svelte/dist/icons/chart-gantt.svelte
mark_module_start();
Chart_gantt[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-gantt.svelte";
function Chart_gantt($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_gantt);
  const iconNode = [
    ["path", { "d": "M10 6h8" }],
    ["path", { "d": "M12 16h6" }],
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    ["path", { "d": "M8 11h7" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-gantt" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_gantt, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_gantt);

// node_modules/lucide-svelte/dist/icons/chart-line.svelte
mark_module_start();
Chart_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-line.svelte";
function Chart_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_line);
  const iconNode = [
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    ["path", { "d": "m19 9-5 5-4-4-3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_line);

// node_modules/lucide-svelte/dist/icons/chart-network.svelte
mark_module_start();
Chart_network[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-network.svelte";
function Chart_network($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_network);
  const iconNode = [
    ["path", { "d": "m13.11 7.664 1.78 2.672" }],
    [
      "path",
      { "d": "m14.162 12.788-3.324 1.424" }
    ],
    ["path", { "d": "m20 4-6.06 1.515" }],
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    [
      "circle",
      { "cx": "12", "cy": "6", "r": "2" }
    ],
    [
      "circle",
      { "cx": "16", "cy": "12", "r": "2" }
    ],
    [
      "circle",
      { "cx": "9", "cy": "15", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "chart-network" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_network, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_network);

// node_modules/lucide-svelte/dist/icons/chart-no-axes-column-decreasing.svelte
mark_module_start();
Chart_no_axes_column_decreasing[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-no-axes-column-decreasing.svelte";
function Chart_no_axes_column_decreasing($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_no_axes_column_decreasing);
  const iconNode = [
    ["path", { "d": "M12 20V10" }],
    ["path", { "d": "M18 20v-4" }],
    ["path", { "d": "M6 20V4" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-no-axes-column-decreasing" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_no_axes_column_decreasing, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_no_axes_column_decreasing);

// node_modules/lucide-svelte/dist/icons/chart-no-axes-column-increasing.svelte
mark_module_start();
Chart_no_axes_column_increasing[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-no-axes-column-increasing.svelte";
function Chart_no_axes_column_increasing($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_no_axes_column_increasing);
  const iconNode = [
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "20",
        "y2": "10"
      }
    ],
    [
      "line",
      {
        "x1": "18",
        "x2": "18",
        "y1": "20",
        "y2": "4"
      }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "6",
        "y1": "20",
        "y2": "16"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "chart-no-axes-column-increasing" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_no_axes_column_increasing, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_no_axes_column_increasing);

// node_modules/lucide-svelte/dist/icons/chart-no-axes-column.svelte
mark_module_start();
Chart_no_axes_column[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-no-axes-column.svelte";
function Chart_no_axes_column($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_no_axes_column);
  const iconNode = [
    [
      "line",
      {
        "x1": "18",
        "x2": "18",
        "y1": "20",
        "y2": "10"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "20",
        "y2": "4"
      }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "6",
        "y1": "20",
        "y2": "14"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "chart-no-axes-column" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_no_axes_column, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_no_axes_column);

// node_modules/lucide-svelte/dist/icons/chart-no-axes-combined.svelte
mark_module_start();
Chart_no_axes_combined[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-no-axes-combined.svelte";
function Chart_no_axes_combined($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_no_axes_combined);
  const iconNode = [
    ["path", { "d": "M12 16v5" }],
    ["path", { "d": "M16 14v7" }],
    ["path", { "d": "M20 10v11" }],
    [
      "path",
      {
        "d": "m22 3-8.646 8.646a.5.5 0 0 1-.708 0L9.354 8.354a.5.5 0 0 0-.707 0L2 15"
      }
    ],
    ["path", { "d": "M4 18v3" }],
    ["path", { "d": "M8 14v7" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-no-axes-combined" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_no_axes_combined, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_no_axes_combined);

// node_modules/lucide-svelte/dist/icons/chart-no-axes-gantt.svelte
mark_module_start();
Chart_no_axes_gantt[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-no-axes-gantt.svelte";
function Chart_no_axes_gantt($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_no_axes_gantt);
  const iconNode = [
    ["path", { "d": "M8 6h10" }],
    ["path", { "d": "M6 12h9" }],
    ["path", { "d": "M11 18h7" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-no-axes-gantt" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_no_axes_gantt, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_no_axes_gantt);

// node_modules/lucide-svelte/dist/icons/chart-pie.svelte
mark_module_start();
Chart_pie[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-pie.svelte";
function Chart_pie($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_pie);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 12c.552 0 1.005-.449.95-.998a10 10 0 0 0-8.953-8.951c-.55-.055-.998.398-.998.95v8a1 1 0 0 0 1 1z"
      }
    ],
    [
      "path",
      { "d": "M21.21 15.89A10 10 0 1 1 8 2.83" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "chart-pie" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_pie, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_pie);

// node_modules/lucide-svelte/dist/icons/chart-scatter.svelte
mark_module_start();
Chart_scatter[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-scatter.svelte";
function Chart_scatter($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_scatter);
  const iconNode = [
    [
      "circle",
      {
        "cx": "7.5",
        "cy": "7.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    [
      "circle",
      {
        "cx": "18.5",
        "cy": "5.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    [
      "circle",
      {
        "cx": "11.5",
        "cy": "11.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    [
      "circle",
      {
        "cx": "7.5",
        "cy": "16.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    [
      "circle",
      {
        "cx": "17.5",
        "cy": "14.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }]
  ];
  Icon($$anchor, spread_props({ name: "chart-scatter" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_scatter, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_scatter);

// node_modules/lucide-svelte/dist/icons/chart-spline.svelte
mark_module_start();
Chart_spline[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chart-spline.svelte";
function Chart_spline($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chart_spline);
  const iconNode = [
    ["path", { "d": "M3 3v16a2 2 0 0 0 2 2h16" }],
    [
      "path",
      {
        "d": "M7 16c.5-2 1.5-7 4-7 2 0 2 3 4 3 2.5 0 4.5-5 5-7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "chart-spline" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chart_spline, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chart_spline);

// node_modules/lucide-svelte/dist/icons/check-check.svelte
mark_module_start();
Check_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/check-check.svelte";
function Check_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Check_check);
  const iconNode = [
    ["path", { "d": "M18 6 7 17l-5-5" }],
    ["path", { "d": "m22 10-7.5 7.5L13 16" }]
  ];
  Icon($$anchor, spread_props({ name: "check-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Check_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Check_check);

// node_modules/lucide-svelte/dist/icons/check.svelte
mark_module_start();
Check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/check.svelte";
function Check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Check);
  const iconNode = [["path", { "d": "M20 6 9 17l-5-5" }]];
  Icon($$anchor, spread_props({ name: "check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Check);

// node_modules/lucide-svelte/dist/icons/chef-hat.svelte
mark_module_start();
Chef_hat[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chef-hat.svelte";
function Chef_hat($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chef_hat);
  const iconNode = [
    [
      "path",
      {
        "d": "M17 21a1 1 0 0 0 1-1v-5.35c0-.457.316-.844.727-1.041a4 4 0 0 0-2.134-7.589 5 5 0 0 0-9.186 0 4 4 0 0 0-2.134 7.588c.411.198.727.585.727 1.041V20a1 1 0 0 0 1 1Z"
      }
    ],
    ["path", { "d": "M6 17h12" }]
  ];
  Icon($$anchor, spread_props({ name: "chef-hat" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chef_hat, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chef_hat);

// node_modules/lucide-svelte/dist/icons/cherry.svelte
mark_module_start();
Cherry[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cherry.svelte";
function Cherry($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cherry);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z"
      }
    ],
    [
      "path",
      {
        "d": "M12 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z"
      }
    ],
    [
      "path",
      {
        "d": "M7 14c3.22-2.91 4.29-8.75 5-12 1.66 2.38 4.94 9 5 12"
      }
    ],
    [
      "path",
      {
        "d": "M22 9c-4.29 0-7.14-2.33-10-7 5.71 0 10 4.67 10 7Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cherry" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cherry, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cherry);

// node_modules/lucide-svelte/dist/icons/chevron-down.svelte
mark_module_start();
Chevron_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevron-down.svelte";
function Chevron_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevron_down);
  const iconNode = [["path", { "d": "m6 9 6 6 6-6" }]];
  Icon($$anchor, spread_props({ name: "chevron-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevron_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevron_down);

// node_modules/lucide-svelte/dist/icons/chevron-first.svelte
mark_module_start();
Chevron_first[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevron-first.svelte";
function Chevron_first($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevron_first);
  const iconNode = [
    ["path", { "d": "m17 18-6-6 6-6" }],
    ["path", { "d": "M7 6v12" }]
  ];
  Icon($$anchor, spread_props({ name: "chevron-first" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevron_first, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevron_first);

// node_modules/lucide-svelte/dist/icons/chevron-last.svelte
mark_module_start();
Chevron_last[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevron-last.svelte";
function Chevron_last($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevron_last);
  const iconNode = [
    ["path", { "d": "m7 18 6-6-6-6" }],
    ["path", { "d": "M17 6v12" }]
  ];
  Icon($$anchor, spread_props({ name: "chevron-last" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevron_last, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevron_last);

// node_modules/lucide-svelte/dist/icons/chevron-left.svelte
mark_module_start();
Chevron_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevron-left.svelte";
function Chevron_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevron_left);
  const iconNode = [["path", { "d": "m15 18-6-6 6-6" }]];
  Icon($$anchor, spread_props({ name: "chevron-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevron_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevron_left);

// node_modules/lucide-svelte/dist/icons/chevron-right.svelte
mark_module_start();
Chevron_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevron-right.svelte";
function Chevron_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevron_right);
  const iconNode = [["path", { "d": "m9 18 6-6-6-6" }]];
  Icon($$anchor, spread_props({ name: "chevron-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevron_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevron_right);

// node_modules/lucide-svelte/dist/icons/chevron-up.svelte
mark_module_start();
Chevron_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevron-up.svelte";
function Chevron_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevron_up);
  const iconNode = [["path", { "d": "m18 15-6-6-6 6" }]];
  Icon($$anchor, spread_props({ name: "chevron-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevron_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevron_up);

// node_modules/lucide-svelte/dist/icons/chevrons-down-up.svelte
mark_module_start();
Chevrons_down_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevrons-down-up.svelte";
function Chevrons_down_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevrons_down_up);
  const iconNode = [
    ["path", { "d": "m7 20 5-5 5 5" }],
    ["path", { "d": "m7 4 5 5 5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "chevrons-down-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevrons_down_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevrons_down_up);

// node_modules/lucide-svelte/dist/icons/chevrons-down.svelte
mark_module_start();
Chevrons_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevrons-down.svelte";
function Chevrons_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevrons_down);
  const iconNode = [
    ["path", { "d": "m7 6 5 5 5-5" }],
    ["path", { "d": "m7 13 5 5 5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "chevrons-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevrons_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevrons_down);

// node_modules/lucide-svelte/dist/icons/chevrons-left-right-ellipsis.svelte
mark_module_start();
Chevrons_left_right_ellipsis[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevrons-left-right-ellipsis.svelte";
function Chevrons_left_right_ellipsis($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevrons_left_right_ellipsis);
  const iconNode = [
    ["path", { "d": "m18 8 4 4-4 4" }],
    ["path", { "d": "m6 8-4 4 4 4" }],
    ["path", { "d": "M8 12h.01" }],
    ["path", { "d": "M12 12h.01" }],
    ["path", { "d": "M16 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "chevrons-left-right-ellipsis" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevrons_left_right_ellipsis, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevrons_left_right_ellipsis);

// node_modules/lucide-svelte/dist/icons/chevrons-left-right.svelte
mark_module_start();
Chevrons_left_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevrons-left-right.svelte";
function Chevrons_left_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevrons_left_right);
  const iconNode = [
    ["path", { "d": "m9 7-5 5 5 5" }],
    ["path", { "d": "m15 7 5 5-5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "chevrons-left-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevrons_left_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevrons_left_right);

// node_modules/lucide-svelte/dist/icons/chevrons-left.svelte
mark_module_start();
Chevrons_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevrons-left.svelte";
function Chevrons_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevrons_left);
  const iconNode = [
    ["path", { "d": "m11 17-5-5 5-5" }],
    ["path", { "d": "m18 17-5-5 5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "chevrons-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevrons_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevrons_left);

// node_modules/lucide-svelte/dist/icons/chevrons-right-left.svelte
mark_module_start();
Chevrons_right_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevrons-right-left.svelte";
function Chevrons_right_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevrons_right_left);
  const iconNode = [
    ["path", { "d": "m20 17-5-5 5-5" }],
    ["path", { "d": "m4 17 5-5-5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "chevrons-right-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevrons_right_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevrons_right_left);

// node_modules/lucide-svelte/dist/icons/chevrons-right.svelte
mark_module_start();
Chevrons_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevrons-right.svelte";
function Chevrons_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevrons_right);
  const iconNode = [
    ["path", { "d": "m6 17 5-5-5-5" }],
    ["path", { "d": "m13 17 5-5-5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "chevrons-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevrons_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevrons_right);

// node_modules/lucide-svelte/dist/icons/chevrons-up-down.svelte
mark_module_start();
Chevrons_up_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevrons-up-down.svelte";
function Chevrons_up_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevrons_up_down);
  const iconNode = [
    ["path", { "d": "m7 15 5 5 5-5" }],
    ["path", { "d": "m7 9 5-5 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "chevrons-up-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevrons_up_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevrons_up_down);

// node_modules/lucide-svelte/dist/icons/chevrons-up.svelte
mark_module_start();
Chevrons_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chevrons-up.svelte";
function Chevrons_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chevrons_up);
  const iconNode = [
    ["path", { "d": "m17 11-5-5-5 5" }],
    ["path", { "d": "m17 18-5-5-5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "chevrons-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chevrons_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chevrons_up);

// node_modules/lucide-svelte/dist/icons/chrome.svelte
mark_module_start();
Chrome[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/chrome.svelte";
function Chrome($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Chrome);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "4" }
    ],
    [
      "line",
      {
        "x1": "21.17",
        "x2": "12",
        "y1": "8",
        "y2": "8"
      }
    ],
    [
      "line",
      {
        "x1": "3.95",
        "x2": "8.54",
        "y1": "6.06",
        "y2": "14"
      }
    ],
    [
      "line",
      {
        "x1": "10.88",
        "x2": "15.46",
        "y1": "21.94",
        "y2": "14"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "chrome" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Chrome, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Chrome);

// node_modules/lucide-svelte/dist/icons/church.svelte
mark_module_start();
Church[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/church.svelte";
function Church($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Church);
  const iconNode = [
    ["path", { "d": "M10 9h4" }],
    ["path", { "d": "M12 7v5" }],
    [
      "path",
      { "d": "M14 22v-4a2 2 0 0 0-4 0v4" }
    ],
    [
      "path",
      {
        "d": "M18 22V5.618a1 1 0 0 0-.553-.894l-4.553-2.277a2 2 0 0 0-1.788 0L6.553 4.724A1 1 0 0 0 6 5.618V22"
      }
    ],
    [
      "path",
      {
        "d": "m18 7 3.447 1.724a1 1 0 0 1 .553.894V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9.618a1 1 0 0 1 .553-.894L6 7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "church" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Church, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Church);

// node_modules/lucide-svelte/dist/icons/cigarette-off.svelte
mark_module_start();
Cigarette_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cigarette-off.svelte";
function Cigarette_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cigarette_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 12H3a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h13"
      }
    ],
    ["path", { "d": "M18 8c0-2.5-2-2.5-2-5" }],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      { "d": "M21 12a1 1 0 0 1 1 1v2a1 1 0 0 1-.5.866" }
    ],
    ["path", { "d": "M22 8c0-2.5-2-2.5-2-5" }],
    ["path", { "d": "M7 12v4" }]
  ];
  Icon($$anchor, spread_props({ name: "cigarette-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cigarette_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cigarette_off);

// node_modules/lucide-svelte/dist/icons/cigarette.svelte
mark_module_start();
Cigarette[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cigarette.svelte";
function Cigarette($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cigarette);
  const iconNode = [
    [
      "path",
      {
        "d": "M17 12H3a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h14"
      }
    ],
    ["path", { "d": "M18 8c0-2.5-2-2.5-2-5" }],
    [
      "path",
      { "d": "M21 16a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1" }
    ],
    ["path", { "d": "M22 8c0-2.5-2-2.5-2-5" }],
    ["path", { "d": "M7 12v4" }]
  ];
  Icon($$anchor, spread_props({ name: "cigarette" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cigarette, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cigarette);

// node_modules/lucide-svelte/dist/icons/circle-alert.svelte
mark_module_start();
Circle_alert[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-alert.svelte";
function Circle_alert($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_alert);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "8",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12.01",
        "y1": "16",
        "y2": "16"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-alert" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_alert, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_alert);

// node_modules/lucide-svelte/dist/icons/circle-arrow-down.svelte
mark_module_start();
Circle_arrow_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-arrow-down.svelte";
function Circle_arrow_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_arrow_down);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "M12 8v8" }],
    ["path", { "d": "m8 12 4 4 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-arrow-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_arrow_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_arrow_down);

// node_modules/lucide-svelte/dist/icons/circle-arrow-left.svelte
mark_module_start();
Circle_arrow_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-arrow-left.svelte";
function Circle_arrow_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_arrow_left);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "M16 12H8" }],
    ["path", { "d": "m12 8-4 4 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-arrow-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_arrow_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_arrow_left);

// node_modules/lucide-svelte/dist/icons/circle-arrow-out-down-left.svelte
mark_module_start();
Circle_arrow_out_down_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-arrow-out-down-left.svelte";
function Circle_arrow_out_down_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_arrow_out_down_left);
  const iconNode = [
    ["path", { "d": "M2 12a10 10 0 1 1 10 10" }],
    ["path", { "d": "m2 22 10-10" }],
    ["path", { "d": "M8 22H2v-6" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-arrow-out-down-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_arrow_out_down_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_arrow_out_down_left);

// node_modules/lucide-svelte/dist/icons/circle-arrow-out-down-right.svelte
mark_module_start();
Circle_arrow_out_down_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-arrow-out-down-right.svelte";
function Circle_arrow_out_down_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_arrow_out_down_right);
  const iconNode = [
    ["path", { "d": "M12 22a10 10 0 1 1 10-10" }],
    ["path", { "d": "M22 22 12 12" }],
    ["path", { "d": "M22 16v6h-6" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-arrow-out-down-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_arrow_out_down_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_arrow_out_down_right);

// node_modules/lucide-svelte/dist/icons/circle-arrow-out-up-left.svelte
mark_module_start();
Circle_arrow_out_up_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-arrow-out-up-left.svelte";
function Circle_arrow_out_up_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_arrow_out_up_left);
  const iconNode = [
    ["path", { "d": "M2 8V2h6" }],
    ["path", { "d": "m2 2 10 10" }],
    ["path", { "d": "M12 2A10 10 0 1 1 2 12" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-arrow-out-up-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_arrow_out_up_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_arrow_out_up_left);

// node_modules/lucide-svelte/dist/icons/circle-arrow-out-up-right.svelte
mark_module_start();
Circle_arrow_out_up_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-arrow-out-up-right.svelte";
function Circle_arrow_out_up_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_arrow_out_up_right);
  const iconNode = [
    ["path", { "d": "M22 12A10 10 0 1 1 12 2" }],
    ["path", { "d": "M22 2 12 12" }],
    ["path", { "d": "M16 2h6v6" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-arrow-out-up-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_arrow_out_up_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_arrow_out_up_right);

// node_modules/lucide-svelte/dist/icons/circle-arrow-right.svelte
mark_module_start();
Circle_arrow_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-arrow-right.svelte";
function Circle_arrow_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_arrow_right);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "M8 12h8" }],
    ["path", { "d": "m12 16 4-4-4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-arrow-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_arrow_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_arrow_right);

// node_modules/lucide-svelte/dist/icons/circle-arrow-up.svelte
mark_module_start();
Circle_arrow_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-arrow-up.svelte";
function Circle_arrow_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_arrow_up);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m16 12-4-4-4 4" }],
    ["path", { "d": "M12 16V8" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-arrow-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_arrow_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_arrow_up);

// node_modules/lucide-svelte/dist/icons/circle-check-big.svelte
mark_module_start();
Circle_check_big[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-check-big.svelte";
function Circle_check_big($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_check_big);
  const iconNode = [
    [
      "path",
      { "d": "M21.801 10A10 10 0 1 1 17 3.335" }
    ],
    ["path", { "d": "m9 11 3 3L22 4" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-check-big" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_check_big, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_check_big);

// node_modules/lucide-svelte/dist/icons/circle-check.svelte
mark_module_start();
Circle_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-check.svelte";
function Circle_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_check);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m9 12 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_check);

// node_modules/lucide-svelte/dist/icons/circle-chevron-down.svelte
mark_module_start();
Circle_chevron_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-chevron-down.svelte";
function Circle_chevron_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_chevron_down);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m16 10-4 4-4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-chevron-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_chevron_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_chevron_down);

// node_modules/lucide-svelte/dist/icons/circle-chevron-left.svelte
mark_module_start();
Circle_chevron_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-chevron-left.svelte";
function Circle_chevron_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_chevron_left);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m14 16-4-4 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-chevron-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_chevron_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_chevron_left);

// node_modules/lucide-svelte/dist/icons/circle-chevron-right.svelte
mark_module_start();
Circle_chevron_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-chevron-right.svelte";
function Circle_chevron_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_chevron_right);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m10 8 4 4-4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-chevron-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_chevron_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_chevron_right);

// node_modules/lucide-svelte/dist/icons/circle-chevron-up.svelte
mark_module_start();
Circle_chevron_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-chevron-up.svelte";
function Circle_chevron_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_chevron_up);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m8 14 4-4 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-chevron-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_chevron_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_chevron_up);

// node_modules/lucide-svelte/dist/icons/circle-dashed.svelte
mark_module_start();
Circle_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-dashed.svelte";
function Circle_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_dashed);
  const iconNode = [
    [
      "path",
      { "d": "M10.1 2.182a10 10 0 0 1 3.8 0" }
    ],
    [
      "path",
      { "d": "M13.9 21.818a10 10 0 0 1-3.8 0" }
    ],
    [
      "path",
      { "d": "M17.609 3.721a10 10 0 0 1 2.69 2.7" }
    ],
    [
      "path",
      { "d": "M2.182 13.9a10 10 0 0 1 0-3.8" }
    ],
    [
      "path",
      { "d": "M20.279 17.609a10 10 0 0 1-2.7 2.69" }
    ],
    [
      "path",
      { "d": "M21.818 10.1a10 10 0 0 1 0 3.8" }
    ],
    [
      "path",
      { "d": "M3.721 6.391a10 10 0 0 1 2.7-2.69" }
    ],
    [
      "path",
      { "d": "M6.391 20.279a10 10 0 0 1-2.69-2.7" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_dashed);

// node_modules/lucide-svelte/dist/icons/circle-divide.svelte
mark_module_start();
Circle_divide[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-divide.svelte";
function Circle_divide($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_divide);
  const iconNode = [
    [
      "line",
      {
        "x1": "8",
        "x2": "16",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "16",
        "y2": "16"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "8",
        "y2": "8"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-divide" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_divide, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_divide);

// node_modules/lucide-svelte/dist/icons/circle-dollar-sign.svelte
mark_module_start();
Circle_dollar_sign[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-dollar-sign.svelte";
function Circle_dollar_sign($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_dollar_sign);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      {
        "d": "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8"
      }
    ],
    ["path", { "d": "M12 18V6" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-dollar-sign" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_dollar_sign, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_dollar_sign);

// node_modules/lucide-svelte/dist/icons/circle-dot-dashed.svelte
mark_module_start();
Circle_dot_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-dot-dashed.svelte";
function Circle_dot_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_dot_dashed);
  const iconNode = [
    [
      "path",
      { "d": "M10.1 2.18a9.93 9.93 0 0 1 3.8 0" }
    ],
    [
      "path",
      { "d": "M17.6 3.71a9.95 9.95 0 0 1 2.69 2.7" }
    ],
    [
      "path",
      { "d": "M21.82 10.1a9.93 9.93 0 0 1 0 3.8" }
    ],
    [
      "path",
      { "d": "M20.29 17.6a9.95 9.95 0 0 1-2.7 2.69" }
    ],
    [
      "path",
      { "d": "M13.9 21.82a9.94 9.94 0 0 1-3.8 0" }
    ],
    [
      "path",
      { "d": "M6.4 20.29a9.95 9.95 0 0 1-2.69-2.7" }
    ],
    [
      "path",
      { "d": "M2.18 13.9a9.93 9.93 0 0 1 0-3.8" }
    ],
    [
      "path",
      { "d": "M3.71 6.4a9.95 9.95 0 0 1 2.7-2.69" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-dot-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_dot_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_dot_dashed);

// node_modules/lucide-svelte/dist/icons/circle-dot.svelte
mark_module_start();
Circle_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-dot.svelte";
function Circle_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_dot);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_dot);

// node_modules/lucide-svelte/dist/icons/circle-ellipsis.svelte
mark_module_start();
Circle_ellipsis[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-ellipsis.svelte";
function Circle_ellipsis($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_ellipsis);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "M17 12h.01" }],
    ["path", { "d": "M12 12h.01" }],
    ["path", { "d": "M7 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-ellipsis" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_ellipsis, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_ellipsis);

// node_modules/lucide-svelte/dist/icons/circle-equal.svelte
mark_module_start();
Circle_equal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-equal.svelte";
function Circle_equal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_equal);
  const iconNode = [
    ["path", { "d": "M7 10h10" }],
    ["path", { "d": "M7 14h10" }],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-equal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_equal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_equal);

// node_modules/lucide-svelte/dist/icons/circle-fading-arrow-up.svelte
mark_module_start();
Circle_fading_arrow_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-fading-arrow-up.svelte";
function Circle_fading_arrow_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_fading_arrow_up);
  const iconNode = [
    [
      "path",
      { "d": "M12 2a10 10 0 0 1 7.38 16.75" }
    ],
    ["path", { "d": "m16 12-4-4-4 4" }],
    ["path", { "d": "M12 16V8" }],
    [
      "path",
      { "d": "M2.5 8.875a10 10 0 0 0-.5 3" }
    ],
    [
      "path",
      { "d": "M2.83 16a10 10 0 0 0 2.43 3.4" }
    ],
    [
      "path",
      { "d": "M4.636 5.235a10 10 0 0 1 .891-.857" }
    ],
    [
      "path",
      { "d": "M8.644 21.42a10 10 0 0 0 7.631-.38" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-fading-arrow-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_fading_arrow_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_fading_arrow_up);

// node_modules/lucide-svelte/dist/icons/circle-fading-plus.svelte
mark_module_start();
Circle_fading_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-fading-plus.svelte";
function Circle_fading_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_fading_plus);
  const iconNode = [
    [
      "path",
      { "d": "M12 2a10 10 0 0 1 7.38 16.75" }
    ],
    ["path", { "d": "M12 8v8" }],
    ["path", { "d": "M16 12H8" }],
    [
      "path",
      { "d": "M2.5 8.875a10 10 0 0 0-.5 3" }
    ],
    [
      "path",
      { "d": "M2.83 16a10 10 0 0 0 2.43 3.4" }
    ],
    [
      "path",
      { "d": "M4.636 5.235a10 10 0 0 1 .891-.857" }
    ],
    [
      "path",
      { "d": "M8.644 21.42a10 10 0 0 0 7.631-.38" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-fading-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_fading_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_fading_plus);

// node_modules/lucide-svelte/dist/icons/circle-gauge.svelte
mark_module_start();
Circle_gauge[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-gauge.svelte";
function Circle_gauge($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_gauge);
  const iconNode = [
    [
      "path",
      { "d": "M15.6 2.7a10 10 0 1 0 5.7 5.7" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "2" }
    ],
    ["path", { "d": "M13.4 10.6 19 5" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-gauge" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_gauge, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_gauge);

// node_modules/lucide-svelte/dist/icons/circle-help.svelte
mark_module_start();
Circle_help[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-help.svelte";
function Circle_help($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_help);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      { "d": "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3" }
    ],
    ["path", { "d": "M12 17h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-help" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_help, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_help);

// node_modules/lucide-svelte/dist/icons/circle-minus.svelte
mark_module_start();
Circle_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-minus.svelte";
function Circle_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_minus);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "M8 12h8" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_minus);

// node_modules/lucide-svelte/dist/icons/circle-off.svelte
mark_module_start();
Circle_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-off.svelte";
function Circle_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_off);
  const iconNode = [
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      { "d": "M8.35 2.69A10 10 0 0 1 21.3 15.65" }
    ],
    [
      "path",
      { "d": "M19.08 19.08A10 10 0 1 1 4.92 4.92" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_off);

// node_modules/lucide-svelte/dist/icons/circle-parking-off.svelte
mark_module_start();
Circle_parking_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-parking-off.svelte";
function Circle_parking_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_parking_off);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m5 5 14 14" }],
    ["path", { "d": "M13 13a3 3 0 1 0 0-6H9v2" }],
    ["path", { "d": "M9 17v-2.34" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-parking-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_parking_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_parking_off);

// node_modules/lucide-svelte/dist/icons/circle-parking.svelte
mark_module_start();
Circle_parking[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-parking.svelte";
function Circle_parking($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_parking);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      { "d": "M9 17V7h4a3 3 0 0 1 0 6H9" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-parking" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_parking, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_parking);

// node_modules/lucide-svelte/dist/icons/circle-pause.svelte
mark_module_start();
Circle_pause[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-pause.svelte";
function Circle_pause($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_pause);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "line",
      {
        "x1": "10",
        "x2": "10",
        "y1": "15",
        "y2": "9"
      }
    ],
    [
      "line",
      {
        "x1": "14",
        "x2": "14",
        "y1": "15",
        "y2": "9"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-pause" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_pause, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_pause);

// node_modules/lucide-svelte/dist/icons/circle-percent.svelte
mark_module_start();
Circle_percent[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-percent.svelte";
function Circle_percent($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_percent);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m15 9-6 6" }],
    ["path", { "d": "M9 9h.01" }],
    ["path", { "d": "M15 15h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-percent" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_percent, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_percent);

// node_modules/lucide-svelte/dist/icons/circle-play.svelte
mark_module_start();
Circle_play[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-play.svelte";
function Circle_play($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_play);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "polygon",
      { "points": "10 8 16 12 10 16 10 8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-play" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_play, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_play);

// node_modules/lucide-svelte/dist/icons/circle-plus.svelte
mark_module_start();
Circle_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-plus.svelte";
function Circle_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_plus);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "M8 12h8" }],
    ["path", { "d": "M12 8v8" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_plus);

// node_modules/lucide-svelte/dist/icons/circle-power.svelte
mark_module_start();
Circle_power[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-power.svelte";
function Circle_power($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_power);
  const iconNode = [
    ["path", { "d": "M12 7v4" }],
    [
      "path",
      { "d": "M7.998 9.003a5 5 0 1 0 8-.005" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-power" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_power, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_power);

// node_modules/lucide-svelte/dist/icons/circle-slash-2.svelte
mark_module_start();
Circle_slash_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-slash-2.svelte";
function Circle_slash_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_slash_2);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "M22 2 2 22" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-slash-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_slash_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_slash_2);

// node_modules/lucide-svelte/dist/icons/circle-slash.svelte
mark_module_start();
Circle_slash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-slash.svelte";
function Circle_slash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_slash);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "line",
      {
        "x1": "9",
        "x2": "15",
        "y1": "15",
        "y2": "9"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-slash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_slash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_slash);

// node_modules/lucide-svelte/dist/icons/circle-stop.svelte
mark_module_start();
Circle_stop[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-stop.svelte";
function Circle_stop($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_stop);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "rect",
      {
        "x": "9",
        "y": "9",
        "width": "6",
        "height": "6",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-stop" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_stop, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_stop);

// node_modules/lucide-svelte/dist/icons/circle-user-round.svelte
mark_module_start();
Circle_user_round[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-user-round.svelte";
function Circle_user_round($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_user_round);
  const iconNode = [
    ["path", { "d": "M18 20a6 6 0 0 0-12 0" }],
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "4" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-user-round" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_user_round, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_user_round);

// node_modules/lucide-svelte/dist/icons/circle-user.svelte
mark_module_start();
Circle_user[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-user.svelte";
function Circle_user($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_user);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "3" }
    ],
    [
      "path",
      {
        "d": "M7 20.662V19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v1.662"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle-user" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_user, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_user);

// node_modules/lucide-svelte/dist/icons/circle-x.svelte
mark_module_start();
Circle_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle-x.svelte";
function Circle_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle_x);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m15 9-6 6" }],
    ["path", { "d": "m9 9 6 6" }]
  ];
  Icon($$anchor, spread_props({ name: "circle-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle_x);

// node_modules/lucide-svelte/dist/icons/circle.svelte
mark_module_start();
Circle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circle.svelte";
function Circle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circle);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circle);

// node_modules/lucide-svelte/dist/icons/circuit-board.svelte
mark_module_start();
Circuit_board[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/circuit-board.svelte";
function Circuit_board($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Circuit_board);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M11 9h4a2 2 0 0 0 2-2V3" }],
    [
      "circle",
      { "cx": "9", "cy": "9", "r": "2" }
    ],
    ["path", { "d": "M7 21v-4a2 2 0 0 1 2-2h4" }],
    [
      "circle",
      { "cx": "15", "cy": "15", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "circuit-board" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Circuit_board, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Circuit_board);

// node_modules/lucide-svelte/dist/icons/citrus.svelte
mark_module_start();
Citrus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/citrus.svelte";
function Citrus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Citrus);
  const iconNode = [
    [
      "path",
      {
        "d": "M21.66 17.67a1.08 1.08 0 0 1-.04 1.6A12 12 0 0 1 4.73 2.38a1.1 1.1 0 0 1 1.61-.04z"
      }
    ],
    [
      "path",
      { "d": "M19.65 15.66A8 8 0 0 1 8.35 4.34" }
    ],
    ["path", { "d": "m14 10-5.5 5.5" }],
    ["path", { "d": "M14 17.85V10H6.15" }]
  ];
  Icon($$anchor, spread_props({ name: "citrus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Citrus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Citrus);

// node_modules/lucide-svelte/dist/icons/clapperboard.svelte
mark_module_start();
Clapperboard[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clapperboard.svelte";
function Clapperboard($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clapperboard);
  const iconNode = [
    [
      "path",
      {
        "d": "M20.2 6 3 11l-.9-2.4c-.3-1.1.3-2.2 1.3-2.5l13.5-4c1.1-.3 2.2.3 2.5 1.3Z"
      }
    ],
    ["path", { "d": "m6.2 5.3 3.1 3.9" }],
    ["path", { "d": "m12.4 3.4 3.1 4" }],
    [
      "path",
      {
        "d": "M3 11h18v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clapperboard" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clapperboard, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clapperboard);

// node_modules/lucide-svelte/dist/icons/clipboard-check.svelte
mark_module_start();
Clipboard_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clipboard-check.svelte";
function Clipboard_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clipboard_check);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "4",
        "x": "8",
        "y": "2",
        "rx": "1",
        "ry": "1"
      }
    ],
    [
      "path",
      {
        "d": "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
      }
    ],
    ["path", { "d": "m9 14 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "clipboard-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clipboard_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clipboard_check);

// node_modules/lucide-svelte/dist/icons/clipboard-copy.svelte
mark_module_start();
Clipboard_copy[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clipboard-copy.svelte";
function Clipboard_copy($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clipboard_copy);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "4",
        "x": "8",
        "y": "2",
        "rx": "1",
        "ry": "1"
      }
    ],
    [
      "path",
      {
        "d": "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2"
      }
    ],
    ["path", { "d": "M16 4h2a2 2 0 0 1 2 2v4" }],
    ["path", { "d": "M21 14H11" }],
    ["path", { "d": "m15 10-4 4 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "clipboard-copy" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clipboard_copy, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clipboard_copy);

// node_modules/lucide-svelte/dist/icons/clipboard-list.svelte
mark_module_start();
Clipboard_list[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clipboard-list.svelte";
function Clipboard_list($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clipboard_list);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "4",
        "x": "8",
        "y": "2",
        "rx": "1",
        "ry": "1"
      }
    ],
    [
      "path",
      {
        "d": "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
      }
    ],
    ["path", { "d": "M12 11h4" }],
    ["path", { "d": "M12 16h4" }],
    ["path", { "d": "M8 11h.01" }],
    ["path", { "d": "M8 16h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "clipboard-list" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clipboard_list, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clipboard_list);

// node_modules/lucide-svelte/dist/icons/clipboard-minus.svelte
mark_module_start();
Clipboard_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clipboard-minus.svelte";
function Clipboard_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clipboard_minus);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "4",
        "x": "8",
        "y": "2",
        "rx": "1",
        "ry": "1"
      }
    ],
    [
      "path",
      {
        "d": "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
      }
    ],
    ["path", { "d": "M9 14h6" }]
  ];
  Icon($$anchor, spread_props({ name: "clipboard-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clipboard_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clipboard_minus);

// node_modules/lucide-svelte/dist/icons/clipboard-paste.svelte
mark_module_start();
Clipboard_paste[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clipboard-paste.svelte";
function Clipboard_paste($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clipboard_paste);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H9a1 1 0 0 0-1 1v2c0 .6.4 1 1 1h6c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1Z"
      }
    ],
    [
      "path",
      {
        "d": "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2M16 4h2a2 2 0 0 1 2 2v2M11 14h10"
      }
    ],
    ["path", { "d": "m17 10 4 4-4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "clipboard-paste" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clipboard_paste, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clipboard_paste);

// node_modules/lucide-svelte/dist/icons/clipboard-pen-line.svelte
mark_module_start();
Clipboard_pen_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clipboard-pen-line.svelte";
function Clipboard_pen_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clipboard_pen_line);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "4",
        "x": "8",
        "y": "2",
        "rx": "1"
      }
    ],
    [
      "path",
      {
        "d": "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-.5"
      }
    ],
    ["path", { "d": "M16 4h2a2 2 0 0 1 1.73 1" }],
    ["path", { "d": "M8 18h1" }],
    [
      "path",
      {
        "d": "M21.378 12.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clipboard-pen-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clipboard_pen_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clipboard_pen_line);

// node_modules/lucide-svelte/dist/icons/clipboard-pen.svelte
mark_module_start();
Clipboard_pen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clipboard-pen.svelte";
function Clipboard_pen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clipboard_pen);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "4",
        "x": "8",
        "y": "2",
        "rx": "1"
      }
    ],
    [
      "path",
      {
        "d": "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-5.5"
      }
    ],
    [
      "path",
      { "d": "M4 13.5V6a2 2 0 0 1 2-2h2" }
    ],
    [
      "path",
      {
        "d": "M13.378 15.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clipboard-pen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clipboard_pen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clipboard_pen);

// node_modules/lucide-svelte/dist/icons/clipboard-plus.svelte
mark_module_start();
Clipboard_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clipboard-plus.svelte";
function Clipboard_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clipboard_plus);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "4",
        "x": "8",
        "y": "2",
        "rx": "1",
        "ry": "1"
      }
    ],
    [
      "path",
      {
        "d": "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
      }
    ],
    ["path", { "d": "M9 14h6" }],
    ["path", { "d": "M12 17v-6" }]
  ];
  Icon($$anchor, spread_props({ name: "clipboard-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clipboard_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clipboard_plus);

// node_modules/lucide-svelte/dist/icons/clipboard-type.svelte
mark_module_start();
Clipboard_type[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clipboard-type.svelte";
function Clipboard_type($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clipboard_type);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "4",
        "x": "8",
        "y": "2",
        "rx": "1",
        "ry": "1"
      }
    ],
    [
      "path",
      {
        "d": "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
      }
    ],
    ["path", { "d": "M9 12v-1h6v1" }],
    ["path", { "d": "M11 17h2" }],
    ["path", { "d": "M12 11v6" }]
  ];
  Icon($$anchor, spread_props({ name: "clipboard-type" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clipboard_type, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clipboard_type);

// node_modules/lucide-svelte/dist/icons/clipboard-x.svelte
mark_module_start();
Clipboard_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clipboard-x.svelte";
function Clipboard_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clipboard_x);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "4",
        "x": "8",
        "y": "2",
        "rx": "1",
        "ry": "1"
      }
    ],
    [
      "path",
      {
        "d": "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
      }
    ],
    ["path", { "d": "m15 11-6 6" }],
    ["path", { "d": "m9 11 6 6" }]
  ];
  Icon($$anchor, spread_props({ name: "clipboard-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clipboard_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clipboard_x);

// node_modules/lucide-svelte/dist/icons/clipboard.svelte
mark_module_start();
Clipboard[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clipboard.svelte";
function Clipboard($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clipboard);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "4",
        "x": "8",
        "y": "2",
        "rx": "1",
        "ry": "1"
      }
    ],
    [
      "path",
      {
        "d": "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clipboard" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clipboard, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clipboard);

// node_modules/lucide-svelte/dist/icons/clock-1.svelte
mark_module_start();
Clock_1[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-1.svelte";
function Clock_1($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_1);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "polyline",
      { "points": "12 6 12 12 14.5 8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clock-1" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_1, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_1);

// node_modules/lucide-svelte/dist/icons/clock-10.svelte
mark_module_start();
Clock_10[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-10.svelte";
function Clock_10($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_10);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["polyline", { "points": "12 6 12 12 8 10" }]
  ];
  Icon($$anchor, spread_props({ name: "clock-10" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_10, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_10);

// node_modules/lucide-svelte/dist/icons/clock-11.svelte
mark_module_start();
Clock_11[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-11.svelte";
function Clock_11($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_11);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "polyline",
      { "points": "12 6 12 12 9.5 8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clock-11" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_11, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_11);

// node_modules/lucide-svelte/dist/icons/clock-12.svelte
mark_module_start();
Clock_12[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-12.svelte";
function Clock_12($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_12);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["polyline", { "points": "12 6 12 12" }]
  ];
  Icon($$anchor, spread_props({ name: "clock-12" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_12, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_12);

// node_modules/lucide-svelte/dist/icons/clock-2.svelte
mark_module_start();
Clock_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-2.svelte";
function Clock_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_2);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "polyline",
      { "points": "12 6 12 12 16 10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clock-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_2);

// node_modules/lucide-svelte/dist/icons/clock-3.svelte
mark_module_start();
Clock_3[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-3.svelte";
function Clock_3($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_3);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "polyline",
      { "points": "12 6 12 12 16.5 12" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clock-3" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_3, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_3);

// node_modules/lucide-svelte/dist/icons/clock-4.svelte
mark_module_start();
Clock_4[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-4.svelte";
function Clock_4($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_4);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "polyline",
      { "points": "12 6 12 12 16 14" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clock-4" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_4, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_4);

// node_modules/lucide-svelte/dist/icons/clock-5.svelte
mark_module_start();
Clock_5[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-5.svelte";
function Clock_5($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_5);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "polyline",
      { "points": "12 6 12 12 14.5 16" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clock-5" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_5, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_5);

// node_modules/lucide-svelte/dist/icons/clock-6.svelte
mark_module_start();
Clock_6[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-6.svelte";
function Clock_6($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_6);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "polyline",
      { "points": "12 6 12 12 12 16.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clock-6" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_6, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_6);

// node_modules/lucide-svelte/dist/icons/clock-7.svelte
mark_module_start();
Clock_7[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-7.svelte";
function Clock_7($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_7);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "polyline",
      { "points": "12 6 12 12 9.5 16" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clock-7" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_7, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_7);

// node_modules/lucide-svelte/dist/icons/clock-8.svelte
mark_module_start();
Clock_8[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-8.svelte";
function Clock_8($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_8);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["polyline", { "points": "12 6 12 12 8 14" }]
  ];
  Icon($$anchor, spread_props({ name: "clock-8" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_8, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_8);

// node_modules/lucide-svelte/dist/icons/clock-9.svelte
mark_module_start();
Clock_9[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-9.svelte";
function Clock_9($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_9);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "polyline",
      { "points": "12 6 12 12 7.5 12" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clock-9" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_9, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_9);

// node_modules/lucide-svelte/dist/icons/clock-alert.svelte
mark_module_start();
Clock_alert[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-alert.svelte";
function Clock_alert($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_alert);
  const iconNode = [
    ["path", { "d": "M12 6v6l4 2" }],
    [
      "path",
      { "d": "M16 21.16a10 10 0 1 1 5-13.516" }
    ],
    ["path", { "d": "M20 11.5v6" }],
    ["path", { "d": "M20 21.5h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "clock-alert" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_alert, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_alert);

// node_modules/lucide-svelte/dist/icons/clock-arrow-down.svelte
mark_module_start();
Clock_arrow_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-arrow-down.svelte";
function Clock_arrow_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_arrow_down);
  const iconNode = [
    [
      "path",
      {
        "d": "M12.338 21.994A10 10 0 1 1 21.925 13.227"
      }
    ],
    ["path", { "d": "M12 6v6l2 1" }],
    ["path", { "d": "m14 18 4 4 4-4" }],
    ["path", { "d": "M18 14v8" }]
  ];
  Icon($$anchor, spread_props({ name: "clock-arrow-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_arrow_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_arrow_down);

// node_modules/lucide-svelte/dist/icons/clock-arrow-up.svelte
mark_module_start();
Clock_arrow_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock-arrow-up.svelte";
function Clock_arrow_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock_arrow_up);
  const iconNode = [
    [
      "path",
      {
        "d": "M13.228 21.925A10 10 0 1 1 21.994 12.338"
      }
    ],
    ["path", { "d": "M12 6v6l1.562.781" }],
    ["path", { "d": "m14 18 4-4 4 4" }],
    ["path", { "d": "M18 22v-8" }]
  ];
  Icon($$anchor, spread_props({ name: "clock-arrow-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock_arrow_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock_arrow_up);

// node_modules/lucide-svelte/dist/icons/clock.svelte
mark_module_start();
Clock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clock.svelte";
function Clock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clock);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "polyline",
      { "points": "12 6 12 12 16 14" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "clock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clock);

// node_modules/lucide-svelte/dist/icons/cloud-cog.svelte
mark_module_start();
Cloud_cog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-cog.svelte";
function Cloud_cog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_cog);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "17", "r": "3" }
    ],
    [
      "path",
      {
        "d": "M4.2 15.1A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.2"
      }
    ],
    ["path", { "d": "m15.7 18.4-.9-.3" }],
    ["path", { "d": "m9.2 15.9-.9-.3" }],
    ["path", { "d": "m10.6 20.7.3-.9" }],
    ["path", { "d": "m13.1 14.2.3-.9" }],
    ["path", { "d": "m13.6 20.7-.4-1" }],
    ["path", { "d": "m10.8 14.3-.4-1" }],
    ["path", { "d": "m8.3 18.6 1-.4" }],
    ["path", { "d": "m14.7 15.8 1-.4" }]
  ];
  Icon($$anchor, spread_props({ name: "cloud-cog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_cog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_cog);

// node_modules/lucide-svelte/dist/icons/cloud-download.svelte
mark_module_start();
Cloud_download[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-download.svelte";
function Cloud_download($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_download);
  const iconNode = [
    ["path", { "d": "M12 13v8l-4-4" }],
    ["path", { "d": "m12 21 4-4" }],
    [
      "path",
      {
        "d": "M4.393 15.269A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.436 8.284"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cloud-download" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_download, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_download);

// node_modules/lucide-svelte/dist/icons/cloud-drizzle.svelte
mark_module_start();
Cloud_drizzle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-drizzle.svelte";
function Cloud_drizzle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_drizzle);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
      }
    ],
    ["path", { "d": "M8 19v1" }],
    ["path", { "d": "M8 14v1" }],
    ["path", { "d": "M16 19v1" }],
    ["path", { "d": "M16 14v1" }],
    ["path", { "d": "M12 21v1" }],
    ["path", { "d": "M12 16v1" }]
  ];
  Icon($$anchor, spread_props({ name: "cloud-drizzle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_drizzle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_drizzle);

// node_modules/lucide-svelte/dist/icons/cloud-fog.svelte
mark_module_start();
Cloud_fog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-fog.svelte";
function Cloud_fog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_fog);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
      }
    ],
    ["path", { "d": "M16 17H7" }],
    ["path", { "d": "M17 21H9" }]
  ];
  Icon($$anchor, spread_props({ name: "cloud-fog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_fog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_fog);

// node_modules/lucide-svelte/dist/icons/cloud-hail.svelte
mark_module_start();
Cloud_hail[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-hail.svelte";
function Cloud_hail($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_hail);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
      }
    ],
    ["path", { "d": "M16 14v2" }],
    ["path", { "d": "M8 14v2" }],
    ["path", { "d": "M16 20h.01" }],
    ["path", { "d": "M8 20h.01" }],
    ["path", { "d": "M12 16v2" }],
    ["path", { "d": "M12 22h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "cloud-hail" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_hail, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_hail);

// node_modules/lucide-svelte/dist/icons/cloud-lightning.svelte
mark_module_start();
Cloud_lightning[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-lightning.svelte";
function Cloud_lightning($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_lightning);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 16.326A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 .5 8.973"
      }
    ],
    ["path", { "d": "m13 12-3 5h4l-3 5" }]
  ];
  Icon($$anchor, spread_props({ name: "cloud-lightning" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_lightning, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_lightning);

// node_modules/lucide-svelte/dist/icons/cloud-moon-rain.svelte
mark_module_start();
Cloud_moon_rain[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-moon-rain.svelte";
function Cloud_moon_rain($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_moon_rain);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.188 8.5A6 6 0 0 1 16 4a1 1 0 0 0 6 6 6 6 0 0 1-3 5.197"
      }
    ],
    ["path", { "d": "M11 20v2" }],
    [
      "path",
      {
        "d": "M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24"
      }
    ],
    ["path", { "d": "M7 19v2" }]
  ];
  Icon($$anchor, spread_props({ name: "cloud-moon-rain" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_moon_rain, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_moon_rain);

// node_modules/lucide-svelte/dist/icons/cloud-moon.svelte
mark_module_start();
Cloud_moon[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-moon.svelte";
function Cloud_moon($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_moon);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.188 8.5A6 6 0 0 1 16 4a1 1 0 0 0 6 6 6 6 0 0 1-3 5.197"
      }
    ],
    [
      "path",
      { "d": "M13 16a3 3 0 1 1 0 6H7a5 5 0 1 1 4.9-6Z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cloud-moon" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_moon, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_moon);

// node_modules/lucide-svelte/dist/icons/cloud-off.svelte
mark_module_start();
Cloud_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-off.svelte";
function Cloud_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_off);
  const iconNode = [
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      {
        "d": "M5.782 5.782A7 7 0 0 0 9 19h8.5a4.5 4.5 0 0 0 1.307-.193"
      }
    ],
    [
      "path",
      {
        "d": "M21.532 16.5A4.5 4.5 0 0 0 17.5 10h-1.79A7.008 7.008 0 0 0 10 5.07"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cloud-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_off);

// node_modules/lucide-svelte/dist/icons/cloud-rain-wind.svelte
mark_module_start();
Cloud_rain_wind[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-rain-wind.svelte";
function Cloud_rain_wind($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_rain_wind);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
      }
    ],
    ["path", { "d": "m9.2 22 3-7" }],
    ["path", { "d": "m9 13-3 7" }],
    ["path", { "d": "m17 13-3 7" }]
  ];
  Icon($$anchor, spread_props({ name: "cloud-rain-wind" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_rain_wind, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_rain_wind);

// node_modules/lucide-svelte/dist/icons/cloud-rain.svelte
mark_module_start();
Cloud_rain[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-rain.svelte";
function Cloud_rain($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_rain);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
      }
    ],
    ["path", { "d": "M16 14v6" }],
    ["path", { "d": "M8 14v6" }],
    ["path", { "d": "M12 16v6" }]
  ];
  Icon($$anchor, spread_props({ name: "cloud-rain" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_rain, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_rain);

// node_modules/lucide-svelte/dist/icons/cloud-snow.svelte
mark_module_start();
Cloud_snow[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-snow.svelte";
function Cloud_snow($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_snow);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
      }
    ],
    ["path", { "d": "M8 15h.01" }],
    ["path", { "d": "M8 19h.01" }],
    ["path", { "d": "M12 17h.01" }],
    ["path", { "d": "M12 21h.01" }],
    ["path", { "d": "M16 15h.01" }],
    ["path", { "d": "M16 19h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "cloud-snow" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_snow, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_snow);

// node_modules/lucide-svelte/dist/icons/cloud-sun-rain.svelte
mark_module_start();
Cloud_sun_rain[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-sun-rain.svelte";
function Cloud_sun_rain($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_sun_rain);
  const iconNode = [
    ["path", { "d": "M12 2v2" }],
    ["path", { "d": "m4.93 4.93 1.41 1.41" }],
    ["path", { "d": "M20 12h2" }],
    ["path", { "d": "m19.07 4.93-1.41 1.41" }],
    [
      "path",
      { "d": "M15.947 12.65a4 4 0 0 0-5.925-4.128" }
    ],
    [
      "path",
      {
        "d": "M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24"
      }
    ],
    ["path", { "d": "M11 20v2" }],
    ["path", { "d": "M7 19v2" }]
  ];
  Icon($$anchor, spread_props({ name: "cloud-sun-rain" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_sun_rain, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_sun_rain);

// node_modules/lucide-svelte/dist/icons/cloud-sun.svelte
mark_module_start();
Cloud_sun[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-sun.svelte";
function Cloud_sun($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_sun);
  const iconNode = [
    ["path", { "d": "M12 2v2" }],
    ["path", { "d": "m4.93 4.93 1.41 1.41" }],
    ["path", { "d": "M20 12h2" }],
    ["path", { "d": "m19.07 4.93-1.41 1.41" }],
    [
      "path",
      { "d": "M15.947 12.65a4 4 0 0 0-5.925-4.128" }
    ],
    [
      "path",
      {
        "d": "M13 22H7a5 5 0 1 1 4.9-6H13a3 3 0 0 1 0 6Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cloud-sun" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_sun, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_sun);

// node_modules/lucide-svelte/dist/icons/cloud-upload.svelte
mark_module_start();
Cloud_upload[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud-upload.svelte";
function Cloud_upload($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud_upload);
  const iconNode = [
    ["path", { "d": "M12 13v8" }],
    [
      "path",
      {
        "d": "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
      }
    ],
    ["path", { "d": "m8 17 4-4 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "cloud-upload" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud_upload, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud_upload);

// node_modules/lucide-svelte/dist/icons/cloud.svelte
mark_module_start();
Cloud[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloud.svelte";
function Cloud($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloud);
  const iconNode = [
    [
      "path",
      {
        "d": "M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cloud" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloud, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloud);

// node_modules/lucide-svelte/dist/icons/cloudy.svelte
mark_module_start();
Cloudy[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cloudy.svelte";
function Cloudy($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cloudy);
  const iconNode = [
    [
      "path",
      {
        "d": "M17.5 21H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z"
      }
    ],
    [
      "path",
      {
        "d": "M22 10a3 3 0 0 0-3-3h-2.207a5.502 5.502 0 0 0-10.702.5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cloudy" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cloudy, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cloudy);

// node_modules/lucide-svelte/dist/icons/clover.svelte
mark_module_start();
Clover[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/clover.svelte";
function Clover($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Clover);
  const iconNode = [
    ["path", { "d": "M16.17 7.83 2 22" }],
    [
      "path",
      {
        "d": "M4.02 12a2.827 2.827 0 1 1 3.81-4.17A2.827 2.827 0 1 1 12 4.02a2.827 2.827 0 1 1 4.17 3.81A2.827 2.827 0 1 1 19.98 12a2.827 2.827 0 1 1-3.81 4.17A2.827 2.827 0 1 1 12 19.98a2.827 2.827 0 1 1-4.17-3.81A1 1 0 1 1 4 12"
      }
    ],
    ["path", { "d": "m7.83 7.83 8.34 8.34" }]
  ];
  Icon($$anchor, spread_props({ name: "clover" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Clover, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Clover);

// node_modules/lucide-svelte/dist/icons/club.svelte
mark_module_start();
Club[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/club.svelte";
function Club($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Club);
  const iconNode = [
    [
      "path",
      {
        "d": "M17.28 9.05a5.5 5.5 0 1 0-10.56 0A5.5 5.5 0 1 0 12 17.66a5.5 5.5 0 1 0 5.28-8.6Z"
      }
    ],
    ["path", { "d": "M12 17.66L12 22" }]
  ];
  Icon($$anchor, spread_props({ name: "club" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Club, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Club);

// node_modules/lucide-svelte/dist/icons/code-xml.svelte
mark_module_start();
Code_xml[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/code-xml.svelte";
function Code_xml($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Code_xml);
  const iconNode = [
    ["path", { "d": "m18 16 4-4-4-4" }],
    ["path", { "d": "m6 8-4 4 4 4" }],
    ["path", { "d": "m14.5 4-5 16" }]
  ];
  Icon($$anchor, spread_props({ name: "code-xml" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Code_xml, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Code_xml);

// node_modules/lucide-svelte/dist/icons/code.svelte
mark_module_start();
Code[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/code.svelte";
function Code($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Code);
  const iconNode = [
    [
      "polyline",
      { "points": "16 18 22 12 16 6" }
    ],
    ["polyline", { "points": "8 6 2 12 8 18" }]
  ];
  Icon($$anchor, spread_props({ name: "code" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Code, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Code);

// node_modules/lucide-svelte/dist/icons/codepen.svelte
mark_module_start();
Codepen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/codepen.svelte";
function Codepen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Codepen);
  const iconNode = [
    [
      "polygon",
      {
        "points": "12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "22",
        "y2": "15.5"
      }
    ],
    [
      "polyline",
      { "points": "22 8.5 12 15.5 2 8.5" }
    ],
    [
      "polyline",
      { "points": "2 15.5 12 8.5 22 15.5" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "2",
        "y2": "8.5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "codepen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Codepen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Codepen);

// node_modules/lucide-svelte/dist/icons/codesandbox.svelte
mark_module_start();
Codesandbox[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/codesandbox.svelte";
function Codesandbox($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Codesandbox);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"
      }
    ],
    [
      "polyline",
      { "points": "7.5 4.21 12 6.81 16.5 4.21" }
    ],
    [
      "polyline",
      { "points": "7.5 19.79 7.5 14.6 3 12" }
    ],
    [
      "polyline",
      { "points": "21 12 16.5 14.6 16.5 19.79" }
    ],
    [
      "polyline",
      { "points": "3.27 6.96 12 12.01 20.73 6.96" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "22.08",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "codesandbox" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Codesandbox, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Codesandbox);

// node_modules/lucide-svelte/dist/icons/coffee.svelte
mark_module_start();
Coffee[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/coffee.svelte";
function Coffee($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Coffee);
  const iconNode = [
    ["path", { "d": "M10 2v2" }],
    ["path", { "d": "M14 2v2" }],
    [
      "path",
      {
        "d": "M16 8a1 1 0 0 1 1 1v8a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4V9a1 1 0 0 1 1-1h14a4 4 0 1 1 0 8h-1"
      }
    ],
    ["path", { "d": "M6 2v2" }]
  ];
  Icon($$anchor, spread_props({ name: "coffee" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Coffee, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Coffee);

// node_modules/lucide-svelte/dist/icons/cog.svelte
mark_module_start();
Cog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cog.svelte";
function Cog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cog);
  const iconNode = [
    [
      "path",
      { "d": "M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z" }
    ],
    [
      "path",
      { "d": "M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z" }
    ],
    ["path", { "d": "M12 2v2" }],
    ["path", { "d": "M12 22v-2" }],
    ["path", { "d": "m17 20.66-1-1.73" }],
    ["path", { "d": "M11 10.27 7 3.34" }],
    ["path", { "d": "m20.66 17-1.73-1" }],
    ["path", { "d": "m3.34 7 1.73 1" }],
    ["path", { "d": "M14 12h8" }],
    ["path", { "d": "M2 12h2" }],
    ["path", { "d": "m20.66 7-1.73 1" }],
    ["path", { "d": "m3.34 17 1.73-1" }],
    ["path", { "d": "m17 3.34-1 1.73" }],
    ["path", { "d": "m11 13.73-4 6.93" }]
  ];
  Icon($$anchor, spread_props({ name: "cog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cog);

// node_modules/lucide-svelte/dist/icons/coins.svelte
mark_module_start();
Coins[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/coins.svelte";
function Coins($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Coins);
  const iconNode = [
    [
      "circle",
      { "cx": "8", "cy": "8", "r": "6" }
    ],
    [
      "path",
      { "d": "M18.09 10.37A6 6 0 1 1 10.34 18" }
    ],
    ["path", { "d": "M7 6h1v4" }],
    [
      "path",
      { "d": "m16.71 13.88.7.71-2.82 2.82" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "coins" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Coins, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Coins);

// node_modules/lucide-svelte/dist/icons/columns-2.svelte
mark_module_start();
Columns_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/columns-2.svelte";
function Columns_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Columns_2);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 3v18" }]
  ];
  Icon($$anchor, spread_props({ name: "columns-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Columns_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Columns_2);

// node_modules/lucide-svelte/dist/icons/columns-3.svelte
mark_module_start();
Columns_3[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/columns-3.svelte";
function Columns_3($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Columns_3);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M9 3v18" }],
    ["path", { "d": "M15 3v18" }]
  ];
  Icon($$anchor, spread_props({ name: "columns-3" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Columns_3, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Columns_3);

// node_modules/lucide-svelte/dist/icons/columns-4.svelte
mark_module_start();
Columns_4[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/columns-4.svelte";
function Columns_4($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Columns_4);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M7.5 3v18" }],
    ["path", { "d": "M12 3v18" }],
    ["path", { "d": "M16.5 3v18" }]
  ];
  Icon($$anchor, spread_props({ name: "columns-4" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Columns_4, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Columns_4);

// node_modules/lucide-svelte/dist/icons/combine.svelte
mark_module_start();
Combine[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/combine.svelte";
function Combine($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Combine);
  const iconNode = [
    [
      "path",
      { "d": "M10 18H5a3 3 0 0 1-3-3v-1" }
    ],
    [
      "path",
      { "d": "M14 2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2" }
    ],
    [
      "path",
      { "d": "M20 2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2" }
    ],
    ["path", { "d": "m7 21 3-3-3-3" }],
    [
      "rect",
      {
        "x": "14",
        "y": "14",
        "width": "8",
        "height": "8",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "x": "2",
        "y": "2",
        "width": "8",
        "height": "8",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "combine" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Combine, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Combine);

// node_modules/lucide-svelte/dist/icons/command.svelte
mark_module_start();
Command[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/command.svelte";
function Command($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Command);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "command" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Command, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Command);

// node_modules/lucide-svelte/dist/icons/compass.svelte
mark_module_start();
Compass[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/compass.svelte";
function Compass($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Compass);
  const iconNode = [
    [
      "path",
      {
        "d": "m16.24 7.76-1.804 5.411a2 2 0 0 1-1.265 1.265L7.76 16.24l1.804-5.411a2 2 0 0 1 1.265-1.265z"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "compass" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Compass, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Compass);

// node_modules/lucide-svelte/dist/icons/component.svelte
mark_module_start();
Component[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/component.svelte";
function Component($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Component);
  const iconNode = [
    [
      "path",
      {
        "d": "M15.536 11.293a1 1 0 0 0 0 1.414l2.376 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0z"
      }
    ],
    [
      "path",
      {
        "d": "M2.297 11.293a1 1 0 0 0 0 1.414l2.377 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414L6.088 8.916a1 1 0 0 0-1.414 0z"
      }
    ],
    [
      "path",
      {
        "d": "M8.916 17.912a1 1 0 0 0 0 1.415l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.415l-2.377-2.376a1 1 0 0 0-1.414 0z"
      }
    ],
    [
      "path",
      {
        "d": "M8.916 4.674a1 1 0 0 0 0 1.414l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "component" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Component, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Component);

// node_modules/lucide-svelte/dist/icons/computer.svelte
mark_module_start();
Computer[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/computer.svelte";
function Computer($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Computer);
  const iconNode = [
    [
      "rect",
      {
        "width": "14",
        "height": "8",
        "x": "5",
        "y": "2",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "20",
        "height": "8",
        "x": "2",
        "y": "14",
        "rx": "2"
      }
    ],
    ["path", { "d": "M6 18h2" }],
    ["path", { "d": "M12 18h6" }]
  ];
  Icon($$anchor, spread_props({ name: "computer" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Computer, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Computer);

// node_modules/lucide-svelte/dist/icons/concierge-bell.svelte
mark_module_start();
Concierge_bell[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/concierge-bell.svelte";
function Concierge_bell($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Concierge_bell);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 20a1 1 0 0 1-1-1v-1a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1Z"
      }
    ],
    ["path", { "d": "M20 16a8 8 0 1 0-16 0" }],
    ["path", { "d": "M12 4v4" }],
    ["path", { "d": "M10 4h4" }]
  ];
  Icon($$anchor, spread_props({ name: "concierge-bell" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Concierge_bell, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Concierge_bell);

// node_modules/lucide-svelte/dist/icons/cone.svelte
mark_module_start();
Cone[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cone.svelte";
function Cone($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cone);
  const iconNode = [
    [
      "path",
      {
        "d": "m20.9 18.55-8-15.98a1 1 0 0 0-1.8 0l-8 15.98"
      }
    ],
    [
      "ellipse",
      {
        "cx": "12",
        "cy": "19",
        "rx": "9",
        "ry": "3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cone" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cone, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cone);

// node_modules/lucide-svelte/dist/icons/construction.svelte
mark_module_start();
Construction[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/construction.svelte";
function Construction($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Construction);
  const iconNode = [
    [
      "rect",
      {
        "x": "2",
        "y": "6",
        "width": "20",
        "height": "8",
        "rx": "1"
      }
    ],
    ["path", { "d": "M17 14v7" }],
    ["path", { "d": "M7 14v7" }],
    ["path", { "d": "M17 3v3" }],
    ["path", { "d": "M7 3v3" }],
    ["path", { "d": "M10 14 2.3 6.3" }],
    ["path", { "d": "m14 6 7.7 7.7" }],
    ["path", { "d": "m8 6 8 8" }]
  ];
  Icon($$anchor, spread_props({ name: "construction" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Construction, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Construction);

// node_modules/lucide-svelte/dist/icons/contact-round.svelte
mark_module_start();
Contact_round[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/contact-round.svelte";
function Contact_round($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Contact_round);
  const iconNode = [
    ["path", { "d": "M16 2v2" }],
    [
      "path",
      { "d": "M17.915 22a6 6 0 0 0-12 0" }
    ],
    ["path", { "d": "M8 2v2" }],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "4" }
    ],
    [
      "rect",
      {
        "x": "3",
        "y": "4",
        "width": "18",
        "height": "18",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "contact-round" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Contact_round, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Contact_round);

// node_modules/lucide-svelte/dist/icons/contact.svelte
mark_module_start();
Contact[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/contact.svelte";
function Contact($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Contact);
  const iconNode = [
    ["path", { "d": "M16 2v2" }],
    [
      "path",
      {
        "d": "M7 22v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2"
      }
    ],
    ["path", { "d": "M8 2v2" }],
    [
      "circle",
      { "cx": "12", "cy": "11", "r": "3" }
    ],
    [
      "rect",
      {
        "x": "3",
        "y": "4",
        "width": "18",
        "height": "18",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "contact" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Contact, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Contact);

// node_modules/lucide-svelte/dist/icons/container.svelte
mark_module_start();
Container[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/container.svelte";
function Container($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Container);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 7.7c0-.6-.4-1.2-.8-1.5l-6.3-3.9a1.72 1.72 0 0 0-1.7 0l-10.3 6c-.5.2-.9.8-.9 1.4v6.6c0 .5.4 1.2.8 1.5l6.3 3.9a1.72 1.72 0 0 0 1.7 0l10.3-6c.5-.3.9-1 .9-1.5Z"
      }
    ],
    ["path", { "d": "M10 21.9V14L2.1 9.1" }],
    ["path", { "d": "m10 14 11.9-6.9" }],
    ["path", { "d": "M14 19.8v-8.1" }],
    ["path", { "d": "M18 17.5V9.4" }]
  ];
  Icon($$anchor, spread_props({ name: "container" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Container, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Container);

// node_modules/lucide-svelte/dist/icons/contrast.svelte
mark_module_start();
Contrast[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/contrast.svelte";
function Contrast($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Contrast);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      { "d": "M12 18a6 6 0 0 0 0-12v12z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "contrast" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Contrast, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Contrast);

// node_modules/lucide-svelte/dist/icons/cookie.svelte
mark_module_start();
Cookie[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cookie.svelte";
function Cookie($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cookie);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 2a10 10 0 1 0 10 10 4 4 0 0 1-5-5 4 4 0 0 1-5-5"
      }
    ],
    ["path", { "d": "M8.5 8.5v.01" }],
    ["path", { "d": "M16 15.5v.01" }],
    ["path", { "d": "M12 12v.01" }],
    ["path", { "d": "M11 17v.01" }],
    ["path", { "d": "M7 14v.01" }]
  ];
  Icon($$anchor, spread_props({ name: "cookie" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cookie, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cookie);

// node_modules/lucide-svelte/dist/icons/cooking-pot.svelte
mark_module_start();
Cooking_pot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cooking-pot.svelte";
function Cooking_pot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cooking_pot);
  const iconNode = [
    ["path", { "d": "M2 12h20" }],
    [
      "path",
      {
        "d": "M20 12v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8"
      }
    ],
    ["path", { "d": "m4 8 16-4" }],
    [
      "path",
      {
        "d": "m8.86 6.78-.45-1.81a2 2 0 0 1 1.45-2.43l1.94-.48a2 2 0 0 1 2.43 1.46l.45 1.8"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cooking-pot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cooking_pot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cooking_pot);

// node_modules/lucide-svelte/dist/icons/copy-check.svelte
mark_module_start();
Copy_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/copy-check.svelte";
function Copy_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Copy_check);
  const iconNode = [
    ["path", { "d": "m12 15 2 2 4-4" }],
    [
      "rect",
      {
        "width": "14",
        "height": "14",
        "x": "8",
        "y": "8",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "path",
      {
        "d": "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "copy-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Copy_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Copy_check);

// node_modules/lucide-svelte/dist/icons/copy-minus.svelte
mark_module_start();
Copy_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/copy-minus.svelte";
function Copy_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Copy_minus);
  const iconNode = [
    [
      "line",
      {
        "x1": "12",
        "x2": "18",
        "y1": "15",
        "y2": "15"
      }
    ],
    [
      "rect",
      {
        "width": "14",
        "height": "14",
        "x": "8",
        "y": "8",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "path",
      {
        "d": "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "copy-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Copy_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Copy_minus);

// node_modules/lucide-svelte/dist/icons/copy-plus.svelte
mark_module_start();
Copy_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/copy-plus.svelte";
function Copy_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Copy_plus);
  const iconNode = [
    [
      "line",
      {
        "x1": "15",
        "x2": "15",
        "y1": "12",
        "y2": "18"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "18",
        "y1": "15",
        "y2": "15"
      }
    ],
    [
      "rect",
      {
        "width": "14",
        "height": "14",
        "x": "8",
        "y": "8",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "path",
      {
        "d": "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "copy-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Copy_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Copy_plus);

// node_modules/lucide-svelte/dist/icons/copy-slash.svelte
mark_module_start();
Copy_slash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/copy-slash.svelte";
function Copy_slash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Copy_slash);
  const iconNode = [
    [
      "line",
      {
        "x1": "12",
        "x2": "18",
        "y1": "18",
        "y2": "12"
      }
    ],
    [
      "rect",
      {
        "width": "14",
        "height": "14",
        "x": "8",
        "y": "8",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "path",
      {
        "d": "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "copy-slash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Copy_slash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Copy_slash);

// node_modules/lucide-svelte/dist/icons/copy-x.svelte
mark_module_start();
Copy_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/copy-x.svelte";
function Copy_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Copy_x);
  const iconNode = [
    [
      "line",
      {
        "x1": "12",
        "x2": "18",
        "y1": "12",
        "y2": "18"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "18",
        "y1": "18",
        "y2": "12"
      }
    ],
    [
      "rect",
      {
        "width": "14",
        "height": "14",
        "x": "8",
        "y": "8",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "path",
      {
        "d": "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "copy-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Copy_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Copy_x);

// node_modules/lucide-svelte/dist/icons/copy.svelte
mark_module_start();
Copy[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/copy.svelte";
function Copy($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Copy);
  const iconNode = [
    [
      "rect",
      {
        "width": "14",
        "height": "14",
        "x": "8",
        "y": "8",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "path",
      {
        "d": "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "copy" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Copy, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Copy);

// node_modules/lucide-svelte/dist/icons/copyleft.svelte
mark_module_start();
Copyleft[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/copyleft.svelte";
function Copyleft($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Copyleft);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      { "d": "M9.17 14.83a4 4 0 1 0 0-5.66" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "copyleft" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Copyleft, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Copyleft);

// node_modules/lucide-svelte/dist/icons/copyright.svelte
mark_module_start();
Copyright[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/copyright.svelte";
function Copyright($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Copyright);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      { "d": "M14.83 14.83a4 4 0 1 1 0-5.66" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "copyright" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Copyright, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Copyright);

// node_modules/lucide-svelte/dist/icons/corner-down-left.svelte
mark_module_start();
Corner_down_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/corner-down-left.svelte";
function Corner_down_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Corner_down_left);
  const iconNode = [
    ["polyline", { "points": "9 10 4 15 9 20" }],
    ["path", { "d": "M20 4v7a4 4 0 0 1-4 4H4" }]
  ];
  Icon($$anchor, spread_props({ name: "corner-down-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Corner_down_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Corner_down_left);

// node_modules/lucide-svelte/dist/icons/corner-down-right.svelte
mark_module_start();
Corner_down_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/corner-down-right.svelte";
function Corner_down_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Corner_down_right);
  const iconNode = [
    [
      "polyline",
      { "points": "15 10 20 15 15 20" }
    ],
    ["path", { "d": "M4 4v7a4 4 0 0 0 4 4h12" }]
  ];
  Icon($$anchor, spread_props({ name: "corner-down-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Corner_down_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Corner_down_right);

// node_modules/lucide-svelte/dist/icons/corner-left-down.svelte
mark_module_start();
Corner_left_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/corner-left-down.svelte";
function Corner_left_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Corner_left_down);
  const iconNode = [
    ["polyline", { "points": "14 15 9 20 4 15" }],
    [
      "path",
      { "d": "M20 4h-7a4 4 0 0 0-4 4v12" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "corner-left-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Corner_left_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Corner_left_down);

// node_modules/lucide-svelte/dist/icons/corner-left-up.svelte
mark_module_start();
Corner_left_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/corner-left-up.svelte";
function Corner_left_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Corner_left_up);
  const iconNode = [
    ["polyline", { "points": "14 9 9 4 4 9" }],
    [
      "path",
      { "d": "M20 20h-7a4 4 0 0 1-4-4V4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "corner-left-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Corner_left_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Corner_left_up);

// node_modules/lucide-svelte/dist/icons/corner-right-down.svelte
mark_module_start();
Corner_right_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/corner-right-down.svelte";
function Corner_right_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Corner_right_down);
  const iconNode = [
    [
      "polyline",
      { "points": "10 15 15 20 20 15" }
    ],
    ["path", { "d": "M4 4h7a4 4 0 0 1 4 4v12" }]
  ];
  Icon($$anchor, spread_props({ name: "corner-right-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Corner_right_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Corner_right_down);

// node_modules/lucide-svelte/dist/icons/corner-right-up.svelte
mark_module_start();
Corner_right_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/corner-right-up.svelte";
function Corner_right_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Corner_right_up);
  const iconNode = [
    ["polyline", { "points": "10 9 15 4 20 9" }],
    ["path", { "d": "M4 20h7a4 4 0 0 0 4-4V4" }]
  ];
  Icon($$anchor, spread_props({ name: "corner-right-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Corner_right_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Corner_right_up);

// node_modules/lucide-svelte/dist/icons/corner-up-left.svelte
mark_module_start();
Corner_up_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/corner-up-left.svelte";
function Corner_up_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Corner_up_left);
  const iconNode = [
    ["polyline", { "points": "9 14 4 9 9 4" }],
    [
      "path",
      { "d": "M20 20v-7a4 4 0 0 0-4-4H4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "corner-up-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Corner_up_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Corner_up_left);

// node_modules/lucide-svelte/dist/icons/corner-up-right.svelte
mark_module_start();
Corner_up_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/corner-up-right.svelte";
function Corner_up_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Corner_up_right);
  const iconNode = [
    ["polyline", { "points": "15 14 20 9 15 4" }],
    [
      "path",
      { "d": "M4 20v-7a4 4 0 0 1 4-4h12" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "corner-up-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Corner_up_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Corner_up_right);

// node_modules/lucide-svelte/dist/icons/cpu.svelte
mark_module_start();
Cpu[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cpu.svelte";
function Cpu($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cpu);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "16",
        "x": "4",
        "y": "4",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "6",
        "height": "6",
        "x": "9",
        "y": "9",
        "rx": "1"
      }
    ],
    ["path", { "d": "M15 2v2" }],
    ["path", { "d": "M15 20v2" }],
    ["path", { "d": "M2 15h2" }],
    ["path", { "d": "M2 9h2" }],
    ["path", { "d": "M20 15h2" }],
    ["path", { "d": "M20 9h2" }],
    ["path", { "d": "M9 2v2" }],
    ["path", { "d": "M9 20v2" }]
  ];
  Icon($$anchor, spread_props({ name: "cpu" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cpu, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cpu);

// node_modules/lucide-svelte/dist/icons/creative-commons.svelte
mark_module_start();
Creative_commons[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/creative-commons.svelte";
function Creative_commons($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Creative_commons);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      {
        "d": "M10 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1"
      }
    ],
    [
      "path",
      {
        "d": "M17 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "creative-commons" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Creative_commons, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Creative_commons);

// node_modules/lucide-svelte/dist/icons/credit-card.svelte
mark_module_start();
Credit_card[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/credit-card.svelte";
function Credit_card($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Credit_card);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "5",
        "rx": "2"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "10",
        "y2": "10"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "credit-card" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Credit_card, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Credit_card);

// node_modules/lucide-svelte/dist/icons/croissant.svelte
mark_module_start();
Croissant[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/croissant.svelte";
function Croissant($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Croissant);
  const iconNode = [
    [
      "path",
      {
        "d": "m4.6 13.11 5.79-3.21c1.89-1.05 4.79 1.78 3.71 3.71l-3.22 5.81C8.8 23.16.79 15.23 4.6 13.11Z"
      }
    ],
    [
      "path",
      {
        "d": "m10.5 9.5-1-2.29C9.2 6.48 8.8 6 8 6H4.5C2.79 6 2 6.5 2 8.5a7.71 7.71 0 0 0 2 4.83"
      }
    ],
    [
      "path",
      { "d": "M8 6c0-1.55.24-4-2-4-2 0-2.5 2.17-2.5 4" }
    ],
    [
      "path",
      {
        "d": "m14.5 13.5 2.29 1c.73.3 1.21.7 1.21 1.5v3.5c0 1.71-.5 2.5-2.5 2.5a7.71 7.71 0 0 1-4.83-2"
      }
    ],
    [
      "path",
      {
        "d": "M18 16c1.55 0 4-.24 4 2 0 2-2.17 2.5-4 2.5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "croissant" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Croissant, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Croissant);

// node_modules/lucide-svelte/dist/icons/crop.svelte
mark_module_start();
Crop[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/crop.svelte";
function Crop($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Crop);
  const iconNode = [
    ["path", { "d": "M6 2v14a2 2 0 0 0 2 2h14" }],
    ["path", { "d": "M18 22V8a2 2 0 0 0-2-2H2" }]
  ];
  Icon($$anchor, spread_props({ name: "crop" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Crop, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Crop);

// node_modules/lucide-svelte/dist/icons/cross.svelte
mark_module_start();
Cross[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cross.svelte";
function Cross($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cross);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 2a2 2 0 0 0-2 2v5H4a2 2 0 0 0-2 2v2c0 1.1.9 2 2 2h5v5c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2v-5h5a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-5V4a2 2 0 0 0-2-2h-2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "cross" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cross, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cross);

// node_modules/lucide-svelte/dist/icons/crosshair.svelte
mark_module_start();
Crosshair[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/crosshair.svelte";
function Crosshair($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Crosshair);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "line",
      {
        "x1": "22",
        "x2": "18",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "2",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "6",
        "y2": "2"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "22",
        "y2": "18"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "crosshair" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Crosshair, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Crosshair);

// node_modules/lucide-svelte/dist/icons/crown.svelte
mark_module_start();
Crown[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/crown.svelte";
function Crown($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Crown);
  const iconNode = [
    [
      "path",
      {
        "d": "M11.562 3.266a.5.5 0 0 1 .876 0L15.39 8.87a1 1 0 0 0 1.516.294L21.183 5.5a.5.5 0 0 1 .798.519l-2.834 10.246a1 1 0 0 1-.956.734H5.81a1 1 0 0 1-.957-.734L2.02 6.02a.5.5 0 0 1 .798-.519l4.276 3.664a1 1 0 0 0 1.516-.294z"
      }
    ],
    ["path", { "d": "M5 21h14" }]
  ];
  Icon($$anchor, spread_props({ name: "crown" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Crown, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Crown);

// node_modules/lucide-svelte/dist/icons/cuboid.svelte
mark_module_start();
Cuboid[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cuboid.svelte";
function Cuboid($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cuboid);
  const iconNode = [
    [
      "path",
      {
        "d": "m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"
      }
    ],
    ["path", { "d": "M10 22v-8L2.25 9.15" }],
    ["path", { "d": "m10 14 11.77-6.87" }]
  ];
  Icon($$anchor, spread_props({ name: "cuboid" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cuboid, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cuboid);

// node_modules/lucide-svelte/dist/icons/cup-soda.svelte
mark_module_start();
Cup_soda[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cup-soda.svelte";
function Cup_soda($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cup_soda);
  const iconNode = [
    [
      "path",
      {
        "d": "m6 8 1.75 12.28a2 2 0 0 0 2 1.72h4.54a2 2 0 0 0 2-1.72L18 8"
      }
    ],
    ["path", { "d": "M5 8h14" }],
    [
      "path",
      {
        "d": "M7 15a6.47 6.47 0 0 1 5 0 6.47 6.47 0 0 0 5 0"
      }
    ],
    ["path", { "d": "m12 8 1-6h2" }]
  ];
  Icon($$anchor, spread_props({ name: "cup-soda" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cup_soda, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cup_soda);

// node_modules/lucide-svelte/dist/icons/currency.svelte
mark_module_start();
Currency[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/currency.svelte";
function Currency($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Currency);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "8" }
    ],
    [
      "line",
      { "x1": "3", "x2": "6", "y1": "3", "y2": "6" }
    ],
    [
      "line",
      {
        "x1": "21",
        "x2": "18",
        "y1": "3",
        "y2": "6"
      }
    ],
    [
      "line",
      {
        "x1": "3",
        "x2": "6",
        "y1": "21",
        "y2": "18"
      }
    ],
    [
      "line",
      {
        "x1": "21",
        "x2": "18",
        "y1": "21",
        "y2": "18"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "currency" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Currency, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Currency);

// node_modules/lucide-svelte/dist/icons/cylinder.svelte
mark_module_start();
Cylinder[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/cylinder.svelte";
function Cylinder($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Cylinder);
  const iconNode = [
    [
      "ellipse",
      { "cx": "12", "cy": "5", "rx": "9", "ry": "3" }
    ],
    ["path", { "d": "M3 5v14a9 3 0 0 0 18 0V5" }]
  ];
  Icon($$anchor, spread_props({ name: "cylinder" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Cylinder, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Cylinder);

// node_modules/lucide-svelte/dist/icons/dam.svelte
mark_module_start();
Dam[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dam.svelte";
function Dam($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dam);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 11.31c1.17.56 1.54 1.69 3.5 1.69 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
      }
    ],
    [
      "path",
      {
        "d": "M11.75 18c.35.5 1.45 1 2.75 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
      }
    ],
    ["path", { "d": "M2 10h4" }],
    ["path", { "d": "M2 14h4" }],
    ["path", { "d": "M2 18h4" }],
    ["path", { "d": "M2 6h4" }],
    [
      "path",
      {
        "d": "M7 3a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1L10 4a1 1 0 0 0-1-1z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "dam" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dam, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dam);

// node_modules/lucide-svelte/dist/icons/database-backup.svelte
mark_module_start();
Database_backup[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/database-backup.svelte";
function Database_backup($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Database_backup);
  const iconNode = [
    [
      "ellipse",
      { "cx": "12", "cy": "5", "rx": "9", "ry": "3" }
    ],
    ["path", { "d": "M3 12a9 3 0 0 0 5 2.69" }],
    ["path", { "d": "M21 9.3V5" }],
    [
      "path",
      { "d": "M3 5v14a9 3 0 0 0 6.47 2.88" }
    ],
    ["path", { "d": "M12 12v4h4" }],
    [
      "path",
      {
        "d": "M13 20a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L12 16"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "database-backup" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Database_backup, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Database_backup);

// node_modules/lucide-svelte/dist/icons/database-zap.svelte
mark_module_start();
Database_zap[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/database-zap.svelte";
function Database_zap($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Database_zap);
  const iconNode = [
    [
      "ellipse",
      { "cx": "12", "cy": "5", "rx": "9", "ry": "3" }
    ],
    [
      "path",
      { "d": "M3 5V19A9 3 0 0 0 15 21.84" }
    ],
    ["path", { "d": "M21 5V8" }],
    ["path", { "d": "M21 12L18 17H22L19 22" }],
    [
      "path",
      { "d": "M3 12A9 3 0 0 0 14.59 14.87" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "database-zap" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Database_zap, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Database_zap);

// node_modules/lucide-svelte/dist/icons/database.svelte
mark_module_start();
Database[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/database.svelte";
function Database($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Database);
  const iconNode = [
    [
      "ellipse",
      { "cx": "12", "cy": "5", "rx": "9", "ry": "3" }
    ],
    [
      "path",
      { "d": "M3 5V19A9 3 0 0 0 21 19V5" }
    ],
    ["path", { "d": "M3 12A9 3 0 0 0 21 12" }]
  ];
  Icon($$anchor, spread_props({ name: "database" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Database, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Database);

// node_modules/lucide-svelte/dist/icons/delete.svelte
mark_module_start();
Delete[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/delete.svelte";
function Delete($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Delete);
  const iconNode = [
    [
      "path",
      {
        "d": "M10 5a2 2 0 0 0-1.344.519l-6.328 5.74a1 1 0 0 0 0 1.481l6.328 5.741A2 2 0 0 0 10 19h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z"
      }
    ],
    ["path", { "d": "m12 9 6 6" }],
    ["path", { "d": "m18 9-6 6" }]
  ];
  Icon($$anchor, spread_props({ name: "delete" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Delete, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Delete);

// node_modules/lucide-svelte/dist/icons/dessert.svelte
mark_module_start();
Dessert[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dessert.svelte";
function Dessert($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dessert);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "4", "r": "2" }
    ],
    [
      "path",
      {
        "d": "M10.2 3.2C5.5 4 2 8.1 2 13a2 2 0 0 0 4 0v-1a2 2 0 0 1 4 0v4a2 2 0 0 0 4 0v-4a2 2 0 0 1 4 0v1a2 2 0 0 0 4 0c0-4.9-3.5-9-8.2-9.8"
      }
    ],
    [
      "path",
      { "d": "M3.2 14.8a9 9 0 0 0 17.6 0" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "dessert" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dessert, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dessert);

// node_modules/lucide-svelte/dist/icons/diameter.svelte
mark_module_start();
Diameter[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/diameter.svelte";
function Diameter($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Diameter);
  const iconNode = [
    [
      "circle",
      { "cx": "19", "cy": "19", "r": "2" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "5", "r": "2" }
    ],
    [
      "path",
      { "d": "M6.48 3.66a10 10 0 0 1 13.86 13.86" }
    ],
    ["path", { "d": "m6.41 6.41 11.18 11.18" }],
    [
      "path",
      { "d": "M3.66 6.48a10 10 0 0 0 13.86 13.86" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "diameter" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Diameter, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Diameter);

// node_modules/lucide-svelte/dist/icons/diamond-minus.svelte
mark_module_start();
Diamond_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/diamond-minus.svelte";
function Diamond_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Diamond_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0z"
      }
    ],
    ["path", { "d": "M8 12h8" }]
  ];
  Icon($$anchor, spread_props({ name: "diamond-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Diamond_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Diamond_minus);

// node_modules/lucide-svelte/dist/icons/diamond-percent.svelte
mark_module_start();
Diamond_percent[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/diamond-percent.svelte";
function Diamond_percent($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Diamond_percent);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0Z"
      }
    ],
    ["path", { "d": "M9.2 9.2h.01" }],
    ["path", { "d": "m14.5 9.5-5 5" }],
    ["path", { "d": "M14.7 14.8h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "diamond-percent" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Diamond_percent, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Diamond_percent);

// node_modules/lucide-svelte/dist/icons/diamond-plus.svelte
mark_module_start();
Diamond_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/diamond-plus.svelte";
function Diamond_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Diamond_plus);
  const iconNode = [
    ["path", { "d": "M12 8v8" }],
    [
      "path",
      {
        "d": "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0z"
      }
    ],
    ["path", { "d": "M8 12h8" }]
  ];
  Icon($$anchor, spread_props({ name: "diamond-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Diamond_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Diamond_plus);

// node_modules/lucide-svelte/dist/icons/diamond.svelte
mark_module_start();
Diamond[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/diamond.svelte";
function Diamond($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Diamond);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41l-7.59-7.59a2.41 2.41 0 0 0-3.41 0Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "diamond" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Diamond, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Diamond);

// node_modules/lucide-svelte/dist/icons/dice-1.svelte
mark_module_start();
Dice_1[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dice-1.svelte";
function Dice_1($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dice_1);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["path", { "d": "M12 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "dice-1" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dice_1, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dice_1);

// node_modules/lucide-svelte/dist/icons/dice-2.svelte
mark_module_start();
Dice_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dice-2.svelte";
function Dice_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dice_2);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["path", { "d": "M15 9h.01" }],
    ["path", { "d": "M9 15h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "dice-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dice_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dice_2);

// node_modules/lucide-svelte/dist/icons/dice-3.svelte
mark_module_start();
Dice_3[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dice-3.svelte";
function Dice_3($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dice_3);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["path", { "d": "M16 8h.01" }],
    ["path", { "d": "M12 12h.01" }],
    ["path", { "d": "M8 16h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "dice-3" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dice_3, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dice_3);

// node_modules/lucide-svelte/dist/icons/dice-4.svelte
mark_module_start();
Dice_4[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dice-4.svelte";
function Dice_4($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dice_4);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["path", { "d": "M16 8h.01" }],
    ["path", { "d": "M8 8h.01" }],
    ["path", { "d": "M8 16h.01" }],
    ["path", { "d": "M16 16h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "dice-4" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dice_4, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dice_4);

// node_modules/lucide-svelte/dist/icons/dice-5.svelte
mark_module_start();
Dice_5[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dice-5.svelte";
function Dice_5($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dice_5);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["path", { "d": "M16 8h.01" }],
    ["path", { "d": "M8 8h.01" }],
    ["path", { "d": "M8 16h.01" }],
    ["path", { "d": "M16 16h.01" }],
    ["path", { "d": "M12 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "dice-5" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dice_5, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dice_5);

// node_modules/lucide-svelte/dist/icons/dice-6.svelte
mark_module_start();
Dice_6[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dice-6.svelte";
function Dice_6($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dice_6);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["path", { "d": "M16 8h.01" }],
    ["path", { "d": "M16 12h.01" }],
    ["path", { "d": "M16 16h.01" }],
    ["path", { "d": "M8 8h.01" }],
    ["path", { "d": "M8 12h.01" }],
    ["path", { "d": "M8 16h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "dice-6" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dice_6, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dice_6);

// node_modules/lucide-svelte/dist/icons/dices.svelte
mark_module_start();
Dices[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dices.svelte";
function Dices($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dices);
  const iconNode = [
    [
      "rect",
      {
        "width": "12",
        "height": "12",
        "x": "2",
        "y": "10",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "path",
      {
        "d": "m17.92 14 3.5-3.5a2.24 2.24 0 0 0 0-3l-5-4.92a2.24 2.24 0 0 0-3 0L10 6"
      }
    ],
    ["path", { "d": "M6 18h.01" }],
    ["path", { "d": "M10 14h.01" }],
    ["path", { "d": "M15 6h.01" }],
    ["path", { "d": "M18 9h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "dices" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dices, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dices);

// node_modules/lucide-svelte/dist/icons/diff.svelte
mark_module_start();
Diff[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/diff.svelte";
function Diff($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Diff);
  const iconNode = [
    ["path", { "d": "M12 3v14" }],
    ["path", { "d": "M5 10h14" }],
    ["path", { "d": "M5 21h14" }]
  ];
  Icon($$anchor, spread_props({ name: "diff" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Diff, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Diff);

// node_modules/lucide-svelte/dist/icons/disc-2.svelte
mark_module_start();
Disc_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/disc-2.svelte";
function Disc_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Disc_2);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "4" }
    ],
    ["path", { "d": "M12 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "disc-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Disc_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Disc_2);

// node_modules/lucide-svelte/dist/icons/disc-3.svelte
mark_module_start();
Disc_3[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/disc-3.svelte";
function Disc_3($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Disc_3);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      { "d": "M6 12c0-1.7.7-3.2 1.8-4.2" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "2" }
    ],
    [
      "path",
      { "d": "M18 12c0 1.7-.7 3.2-1.8 4.2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "disc-3" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Disc_3, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Disc_3);

// node_modules/lucide-svelte/dist/icons/disc-album.svelte
mark_module_start();
Disc_album[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/disc-album.svelte";
function Disc_album($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Disc_album);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "5" }
    ],
    ["path", { "d": "M12 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "disc-album" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Disc_album, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Disc_album);

// node_modules/lucide-svelte/dist/icons/disc.svelte
mark_module_start();
Disc[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/disc.svelte";
function Disc($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Disc);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "disc" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Disc, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Disc);

// node_modules/lucide-svelte/dist/icons/divide.svelte
mark_module_start();
Divide[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/divide.svelte";
function Divide($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Divide);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "6", "r": "1" }
    ],
    [
      "line",
      {
        "x1": "5",
        "x2": "19",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "18", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "divide" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Divide, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Divide);

// node_modules/lucide-svelte/dist/icons/dna-off.svelte
mark_module_start();
Dna_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dna-off.svelte";
function Dna_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dna_off);
  const iconNode = [
    [
      "path",
      { "d": "M15 2c-1.35 1.5-2.092 3-2.5 4.5L14 8" }
    ],
    ["path", { "d": "m17 6-2.891-2.891" }],
    [
      "path",
      { "d": "M2 15c3.333-3 6.667-3 10-3" }
    ],
    ["path", { "d": "m2 2 20 20" }],
    ["path", { "d": "m20 9 .891.891" }],
    [
      "path",
      { "d": "M22 9c-1.5 1.35-3 2.092-4.5 2.5l-1-1" }
    ],
    ["path", { "d": "M3.109 14.109 4 15" }],
    ["path", { "d": "m6.5 12.5 1 1" }],
    ["path", { "d": "m7 18 2.891 2.891" }],
    [
      "path",
      { "d": "M9 22c1.35-1.5 2.092-3 2.5-4.5L10 16" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "dna-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dna_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dna_off);

// node_modules/lucide-svelte/dist/icons/dna.svelte
mark_module_start();
Dna[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dna.svelte";
function Dna($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dna);
  const iconNode = [
    ["path", { "d": "m10 16 1.5 1.5" }],
    ["path", { "d": "m14 8-1.5-1.5" }],
    [
      "path",
      {
        "d": "M15 2c-1.798 1.998-2.518 3.995-2.807 5.993"
      }
    ],
    ["path", { "d": "m16.5 10.5 1 1" }],
    ["path", { "d": "m17 6-2.891-2.891" }],
    [
      "path",
      { "d": "M2 15c6.667-6 13.333 0 20-6" }
    ],
    ["path", { "d": "m20 9 .891.891" }],
    ["path", { "d": "M3.109 14.109 4 15" }],
    ["path", { "d": "m6.5 12.5 1 1" }],
    ["path", { "d": "m7 18 2.891 2.891" }],
    [
      "path",
      {
        "d": "M9 22c1.798-1.998 2.518-3.995 2.807-5.993"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "dna" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dna, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dna);

// node_modules/lucide-svelte/dist/icons/dock.svelte
mark_module_start();
Dock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dock.svelte";
function Dock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dock);
  const iconNode = [
    ["path", { "d": "M2 8h20" }],
    [
      "rect",
      {
        "width": "20",
        "height": "16",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M6 16h12" }]
  ];
  Icon($$anchor, spread_props({ name: "dock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dock);

// node_modules/lucide-svelte/dist/icons/dog.svelte
mark_module_start();
Dog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dog.svelte";
function Dog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dog);
  const iconNode = [
    ["path", { "d": "M11.25 16.25h1.5L12 17z" }],
    ["path", { "d": "M16 14v.5" }],
    [
      "path",
      {
        "d": "M4.42 11.247A13.152 13.152 0 0 0 4 14.556C4 18.728 7.582 21 12 21s8-2.272 8-6.444a11.702 11.702 0 0 0-.493-3.309"
      }
    ],
    ["path", { "d": "M8 14v.5" }],
    [
      "path",
      {
        "d": "M8.5 8.5c-.384 1.05-1.083 2.028-2.344 2.5-1.931.722-3.576-.297-3.656-1-.113-.994 1.177-6.53 4-7 1.923-.321 3.651.845 3.651 2.235A7.497 7.497 0 0 1 14 5.277c0-1.39 1.844-2.598 3.767-2.277 2.823.47 4.113 6.006 4 7-.08.703-1.725 1.722-3.656 1-1.261-.472-1.855-1.45-2.239-2.5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "dog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dog);

// node_modules/lucide-svelte/dist/icons/dollar-sign.svelte
mark_module_start();
Dollar_sign[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dollar-sign.svelte";
function Dollar_sign($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dollar_sign);
  const iconNode = [
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "2",
        "y2": "22"
      }
    ],
    [
      "path",
      {
        "d": "M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "dollar-sign" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dollar_sign, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dollar_sign);

// node_modules/lucide-svelte/dist/icons/donut.svelte
mark_module_start();
Donut[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/donut.svelte";
function Donut($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Donut);
  const iconNode = [
    [
      "path",
      {
        "d": "M20.5 10a2.5 2.5 0 0 1-2.4-3H18a2.95 2.95 0 0 1-2.6-4.4 10 10 0 1 0 6.3 7.1c-.3.2-.8.3-1.2.3"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "donut" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Donut, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Donut);

// node_modules/lucide-svelte/dist/icons/door-closed.svelte
mark_module_start();
Door_closed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/door-closed.svelte";
function Door_closed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Door_closed);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 20V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v14"
      }
    ],
    ["path", { "d": "M2 20h20" }],
    ["path", { "d": "M14 12v.01" }]
  ];
  Icon($$anchor, spread_props({ name: "door-closed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Door_closed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Door_closed);

// node_modules/lucide-svelte/dist/icons/door-open.svelte
mark_module_start();
Door_open[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/door-open.svelte";
function Door_open($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Door_open);
  const iconNode = [
    ["path", { "d": "M13 4h3a2 2 0 0 1 2 2v14" }],
    ["path", { "d": "M2 20h3" }],
    ["path", { "d": "M13 20h9" }],
    ["path", { "d": "M10 12v.01" }],
    [
      "path",
      {
        "d": "M13 4.562v16.157a1 1 0 0 1-1.242.97L5 20V5.562a2 2 0 0 1 1.515-1.94l4-1A2 2 0 0 1 13 4.561Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "door-open" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Door_open, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Door_open);

// node_modules/lucide-svelte/dist/icons/dot.svelte
mark_module_start();
Dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dot.svelte";
function Dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dot);
  const iconNode = [
    [
      "circle",
      { "cx": "12.1", "cy": "12.1", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dot);

// node_modules/lucide-svelte/dist/icons/download.svelte
mark_module_start();
Download[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/download.svelte";
function Download($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Download);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
      }
    ],
    [
      "polyline",
      { "points": "7 10 12 15 17 10" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "15",
        "y2": "3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "download" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Download, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Download);

// node_modules/lucide-svelte/dist/icons/drafting-compass.svelte
mark_module_start();
Drafting_compass[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/drafting-compass.svelte";
function Drafting_compass($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Drafting_compass);
  const iconNode = [
    ["path", { "d": "m12.99 6.74 1.93 3.44" }],
    [
      "path",
      { "d": "M19.136 12a10 10 0 0 1-14.271 0" }
    ],
    ["path", { "d": "m21 21-2.16-3.84" }],
    ["path", { "d": "m3 21 8.02-14.26" }],
    [
      "circle",
      { "cx": "12", "cy": "5", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "drafting-compass" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Drafting_compass, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Drafting_compass);

// node_modules/lucide-svelte/dist/icons/drama.svelte
mark_module_start();
Drama[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/drama.svelte";
function Drama($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Drama);
  const iconNode = [
    ["path", { "d": "M10 11h.01" }],
    ["path", { "d": "M14 6h.01" }],
    ["path", { "d": "M18 6h.01" }],
    ["path", { "d": "M6.5 13.1h.01" }],
    [
      "path",
      {
        "d": "M22 5c0 9-4 12-6 12s-6-3-6-12c0-2 2-3 6-3s6 1 6 3"
      }
    ],
    [
      "path",
      { "d": "M17.4 9.9c-.8.8-2 .8-2.8 0" }
    ],
    [
      "path",
      {
        "d": "M10.1 7.1C9 7.2 7.7 7.7 6 8.6c-3.5 2-4.7 3.9-3.7 5.6 4.5 7.8 9.5 8.4 11.2 7.4.9-.5 1.9-2.1 1.9-4.7"
      }
    ],
    [
      "path",
      { "d": "M9.1 16.5c.3-1.1 1.4-1.7 2.4-1.4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "drama" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Drama, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Drama);

// node_modules/lucide-svelte/dist/icons/dribbble.svelte
mark_module_start();
Dribbble[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dribbble.svelte";
function Dribbble($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dribbble);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      {
        "d": "M19.13 5.09C15.22 9.14 10 10.44 2.25 10.94"
      }
    ],
    [
      "path",
      {
        "d": "M21.75 12.84c-6.62-1.41-12.14 1-16.38 6.32"
      }
    ],
    [
      "path",
      { "d": "M8.56 2.75c4.37 6 6 9.42 8 17.72" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "dribbble" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dribbble, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dribbble);

// node_modules/lucide-svelte/dist/icons/drill.svelte
mark_module_start();
Drill[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/drill.svelte";
function Drill($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Drill);
  const iconNode = [
    [
      "path",
      {
        "d": "M14 9c0 .6-.4 1-1 1H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9c.6 0 1 .4 1 1Z"
      }
    ],
    ["path", { "d": "M18 6h4" }],
    [
      "path",
      {
        "d": "M14 4h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-3"
      }
    ],
    ["path", { "d": "m5 10-2 8" }],
    ["path", { "d": "M12 10v3c0 .6-.4 1-1 1H8" }],
    ["path", { "d": "m7 18 2-8" }],
    [
      "path",
      {
        "d": "M5 22c-1.7 0-3-1.3-3-3 0-.6.4-1 1-1h7c.6 0 1 .4 1 1v2c0 .6-.4 1-1 1Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "drill" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Drill, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Drill);

// node_modules/lucide-svelte/dist/icons/droplet.svelte
mark_module_start();
Droplet[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/droplet.svelte";
function Droplet($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Droplet);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 22a7 7 0 0 0 7-7c0-2-1-3.9-3-5.5s-3.5-4-4-6.5c-.5 2.5-2 4.9-4 6.5C6 11.1 5 13 5 15a7 7 0 0 0 7 7z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "droplet" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Droplet, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Droplet);

// node_modules/lucide-svelte/dist/icons/droplets.svelte
mark_module_start();
Droplets[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/droplets.svelte";
function Droplets($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Droplets);
  const iconNode = [
    [
      "path",
      {
        "d": "M7 16.3c2.2 0 4-1.83 4-4.05 0-1.16-.57-2.26-1.71-3.19S7.29 6.75 7 5.3c-.29 1.45-1.14 2.84-2.29 3.76S3 11.1 3 12.25c0 2.22 1.8 4.05 4 4.05z"
      }
    ],
    [
      "path",
      {
        "d": "M12.56 6.6A10.97 10.97 0 0 0 14 3.02c.5 2.5 2 4.9 4 6.5s3 3.5 3 5.5a6.98 6.98 0 0 1-11.91 4.97"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "droplets" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Droplets, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Droplets);

// node_modules/lucide-svelte/dist/icons/drum.svelte
mark_module_start();
Drum[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/drum.svelte";
function Drum($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Drum);
  const iconNode = [
    ["path", { "d": "m2 2 8 8" }],
    ["path", { "d": "m22 2-8 8" }],
    [
      "ellipse",
      {
        "cx": "12",
        "cy": "9",
        "rx": "10",
        "ry": "5"
      }
    ],
    ["path", { "d": "M7 13.4v7.9" }],
    ["path", { "d": "M12 14v8" }],
    ["path", { "d": "M17 13.4v7.9" }],
    ["path", { "d": "M2 9v8a10 5 0 0 0 20 0V9" }]
  ];
  Icon($$anchor, spread_props({ name: "drum" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Drum, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Drum);

// node_modules/lucide-svelte/dist/icons/drumstick.svelte
mark_module_start();
Drumstick[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/drumstick.svelte";
function Drumstick($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Drumstick);
  const iconNode = [
    [
      "path",
      {
        "d": "M15.4 15.63a7.875 6 135 1 1 6.23-6.23 4.5 3.43 135 0 0-6.23 6.23"
      }
    ],
    [
      "path",
      {
        "d": "m8.29 12.71-2.6 2.6a2.5 2.5 0 1 0-1.65 4.65A2.5 2.5 0 1 0 8.7 18.3l2.59-2.59"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "drumstick" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Drumstick, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Drumstick);

// node_modules/lucide-svelte/dist/icons/dumbbell.svelte
mark_module_start();
Dumbbell[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/dumbbell.svelte";
function Dumbbell($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Dumbbell);
  const iconNode = [
    ["path", { "d": "M14.4 14.4 9.6 9.6" }],
    [
      "path",
      {
        "d": "M18.657 21.485a2 2 0 1 1-2.829-2.828l-1.767 1.768a2 2 0 1 1-2.829-2.829l6.364-6.364a2 2 0 1 1 2.829 2.829l-1.768 1.767a2 2 0 1 1 2.828 2.829z"
      }
    ],
    ["path", { "d": "m21.5 21.5-1.4-1.4" }],
    ["path", { "d": "M3.9 3.9 2.5 2.5" }],
    [
      "path",
      {
        "d": "M6.404 12.768a2 2 0 1 1-2.829-2.829l1.768-1.767a2 2 0 1 1-2.828-2.829l2.828-2.828a2 2 0 1 1 2.829 2.828l1.767-1.768a2 2 0 1 1 2.829 2.829z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "dumbbell" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Dumbbell, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Dumbbell);

// node_modules/lucide-svelte/dist/icons/ear-off.svelte
mark_module_start();
Ear_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ear-off.svelte";
function Ear_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ear_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 18.5a3.5 3.5 0 1 0 7 0c0-1.57.92-2.52 2.04-3.46"
      }
    ],
    [
      "path",
      { "d": "M6 8.5c0-.75.13-1.47.36-2.14" }
    ],
    [
      "path",
      {
        "d": "M8.8 3.15A6.5 6.5 0 0 1 19 8.5c0 1.63-.44 2.81-1.09 3.76"
      }
    ],
    [
      "path",
      {
        "d": "M12.5 6A2.5 2.5 0 0 1 15 8.5M10 13a2 2 0 0 0 1.82-1.18"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ear-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ear_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ear_off);

// node_modules/lucide-svelte/dist/icons/ear.svelte
mark_module_start();
Ear[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ear.svelte";
function Ear($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ear);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 8.5a6.5 6.5 0 1 1 13 0c0 6-6 6-6 10a3.5 3.5 0 1 1-7 0"
      }
    ],
    [
      "path",
      {
        "d": "M15 8.5a2.5 2.5 0 0 0-5 0v1a2 2 0 1 1 0 4"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ear" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ear, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ear);

// node_modules/lucide-svelte/dist/icons/earth-lock.svelte
mark_module_start();
Earth_lock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/earth-lock.svelte";
function Earth_lock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Earth_lock);
  const iconNode = [
    ["path", { "d": "M7 3.34V5a3 3 0 0 0 3 3" }],
    [
      "path",
      {
        "d": "M11 21.95V18a2 2 0 0 0-2-2 2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05"
      }
    ],
    [
      "path",
      { "d": "M21.54 15H17a2 2 0 0 0-2 2v4.54" }
    ],
    [
      "path",
      { "d": "M12 2a10 10 0 1 0 9.54 13" }
    ],
    ["path", { "d": "M20 6V4a2 2 0 1 0-4 0v2" }],
    [
      "rect",
      {
        "width": "8",
        "height": "5",
        "x": "14",
        "y": "6",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "earth-lock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Earth_lock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Earth_lock);

// node_modules/lucide-svelte/dist/icons/earth.svelte
mark_module_start();
Earth[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/earth.svelte";
function Earth($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Earth);
  const iconNode = [
    [
      "path",
      { "d": "M21.54 15H17a2 2 0 0 0-2 2v4.54" }
    ],
    [
      "path",
      {
        "d": "M7 3.34V5a3 3 0 0 0 3 3a2 2 0 0 1 2 2c0 1.1.9 2 2 2a2 2 0 0 0 2-2c0-1.1.9-2 2-2h3.17"
      }
    ],
    [
      "path",
      {
        "d": "M11 21.95V18a2 2 0 0 0-2-2a2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "earth" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Earth, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Earth);

// node_modules/lucide-svelte/dist/icons/eclipse.svelte
mark_module_start();
Eclipse[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/eclipse.svelte";
function Eclipse($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Eclipse);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "M12 2a7 7 0 1 0 10 10" }]
  ];
  Icon($$anchor, spread_props({ name: "eclipse" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Eclipse, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Eclipse);

// node_modules/lucide-svelte/dist/icons/egg-fried.svelte
mark_module_start();
Egg_fried[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/egg-fried.svelte";
function Egg_fried($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Egg_fried);
  const iconNode = [
    [
      "circle",
      { "cx": "11.5", "cy": "12.5", "r": "3.5" }
    ],
    [
      "path",
      {
        "d": "M3 8c0-3.5 2.5-6 6.5-6 5 0 4.83 3 7.5 5s5 2 5 6c0 4.5-2.5 6.5-7 6.5-2.5 0-2.5 2.5-6 2.5s-7-2-7-5.5c0-3 1.5-3 1.5-5C3.5 10 3 9 3 8Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "egg-fried" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Egg_fried, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Egg_fried);

// node_modules/lucide-svelte/dist/icons/egg-off.svelte
mark_module_start();
Egg_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/egg-off.svelte";
function Egg_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Egg_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M6.399 6.399C5.362 8.157 4.65 10.189 4.5 12c-.37 4.43 1.27 9.95 7.5 10 3.256-.026 5.259-1.547 6.375-3.625"
      }
    ],
    [
      "path",
      {
        "d": "M19.532 13.875A14.07 14.07 0 0 0 19.5 12c-.36-4.34-3.95-9.96-7.5-10-1.04.012-2.082.502-3.046 1.297"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "egg-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Egg_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Egg_off);

// node_modules/lucide-svelte/dist/icons/egg.svelte
mark_module_start();
Egg[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/egg.svelte";
function Egg($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Egg);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 22c6.23-.05 7.87-5.57 7.5-10-.36-4.34-3.95-9.96-7.5-10-3.55.04-7.14 5.66-7.5 10-.37 4.43 1.27 9.95 7.5 10z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "egg" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Egg, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Egg);

// node_modules/lucide-svelte/dist/icons/ellipsis-vertical.svelte
mark_module_start();
Ellipsis_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ellipsis-vertical.svelte";
function Ellipsis_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ellipsis_vertical);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "1" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "5", "r": "1" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "19", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ellipsis-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ellipsis_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ellipsis_vertical);

// node_modules/lucide-svelte/dist/icons/ellipsis.svelte
mark_module_start();
Ellipsis[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ellipsis.svelte";
function Ellipsis($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ellipsis);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "1" }
    ],
    [
      "circle",
      { "cx": "19", "cy": "12", "r": "1" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "12", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ellipsis" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ellipsis, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ellipsis);

// node_modules/lucide-svelte/dist/icons/equal-not.svelte
mark_module_start();
Equal_not[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/equal-not.svelte";
function Equal_not($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Equal_not);
  const iconNode = [
    [
      "line",
      { "x1": "5", "x2": "19", "y1": "9", "y2": "9" }
    ],
    [
      "line",
      {
        "x1": "5",
        "x2": "19",
        "y1": "15",
        "y2": "15"
      }
    ],
    [
      "line",
      {
        "x1": "19",
        "x2": "5",
        "y1": "5",
        "y2": "19"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "equal-not" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Equal_not, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Equal_not);

// node_modules/lucide-svelte/dist/icons/equal.svelte
mark_module_start();
Equal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/equal.svelte";
function Equal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Equal);
  const iconNode = [
    [
      "line",
      { "x1": "5", "x2": "19", "y1": "9", "y2": "9" }
    ],
    [
      "line",
      {
        "x1": "5",
        "x2": "19",
        "y1": "15",
        "y2": "15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "equal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Equal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Equal);

// node_modules/lucide-svelte/dist/icons/eraser.svelte
mark_module_start();
Eraser[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/eraser.svelte";
function Eraser($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Eraser);
  const iconNode = [
    [
      "path",
      {
        "d": "m7 21-4.3-4.3c-1-1-1-2.5 0-3.4l9.6-9.6c1-1 2.5-1 3.4 0l5.6 5.6c1 1 1 2.5 0 3.4L13 21"
      }
    ],
    ["path", { "d": "M22 21H7" }],
    ["path", { "d": "m5 11 9 9" }]
  ];
  Icon($$anchor, spread_props({ name: "eraser" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Eraser, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Eraser);

// node_modules/lucide-svelte/dist/icons/ethernet-port.svelte
mark_module_start();
Ethernet_port[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ethernet-port.svelte";
function Ethernet_port($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ethernet_port);
  const iconNode = [
    [
      "path",
      {
        "d": "m15 20 3-3h2a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h2l3 3z"
      }
    ],
    ["path", { "d": "M6 8v1" }],
    ["path", { "d": "M10 8v1" }],
    ["path", { "d": "M14 8v1" }],
    ["path", { "d": "M18 8v1" }]
  ];
  Icon($$anchor, spread_props({ name: "ethernet-port" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ethernet_port, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ethernet_port);

// node_modules/lucide-svelte/dist/icons/euro.svelte
mark_module_start();
Euro[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/euro.svelte";
function Euro($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Euro);
  const iconNode = [
    ["path", { "d": "M4 10h12" }],
    ["path", { "d": "M4 14h9" }],
    [
      "path",
      {
        "d": "M19 6a7.7 7.7 0 0 0-5.2-2A7.9 7.9 0 0 0 6 12c0 4.4 3.5 8 7.8 8 2 0 3.8-.8 5.2-2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "euro" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Euro, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Euro);

// node_modules/lucide-svelte/dist/icons/expand.svelte
mark_module_start();
Expand[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/expand.svelte";
function Expand($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Expand);
  const iconNode = [
    [
      "path",
      { "d": "m21 21-6-6m6 6v-4.8m0 4.8h-4.8" }
    ],
    [
      "path",
      { "d": "M3 16.2V21m0 0h4.8M3 21l6-6" }
    ],
    [
      "path",
      { "d": "M21 7.8V3m0 0h-4.8M21 3l-6 6" }
    ],
    ["path", { "d": "M3 7.8V3m0 0h4.8M3 3l6 6" }]
  ];
  Icon($$anchor, spread_props({ name: "expand" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Expand, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Expand);

// node_modules/lucide-svelte/dist/icons/external-link.svelte
mark_module_start();
External_link[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/external-link.svelte";
function External_link($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, External_link);
  const iconNode = [
    ["path", { "d": "M15 3h6v6" }],
    ["path", { "d": "M10 14 21 3" }],
    [
      "path",
      {
        "d": "M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "external-link" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(External_link, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(External_link);

// node_modules/lucide-svelte/dist/icons/eye-closed.svelte
mark_module_start();
Eye_closed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/eye-closed.svelte";
function Eye_closed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Eye_closed);
  const iconNode = [
    ["path", { "d": "m15 18-.722-3.25" }],
    [
      "path",
      { "d": "M2 8a10.645 10.645 0 0 0 20 0" }
    ],
    ["path", { "d": "m20 15-1.726-2.05" }],
    ["path", { "d": "m4 15 1.726-2.05" }],
    ["path", { "d": "m9 18 .722-3.25" }]
  ];
  Icon($$anchor, spread_props({ name: "eye-closed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Eye_closed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Eye_closed);

// node_modules/lucide-svelte/dist/icons/eye-off.svelte
mark_module_start();
Eye_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/eye-off.svelte";
function Eye_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Eye_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575 1 1 0 0 1 0 .696 10.747 10.747 0 0 1-1.444 2.49"
      }
    ],
    [
      "path",
      { "d": "M14.084 14.158a3 3 0 0 1-4.242-4.242" }
    ],
    [
      "path",
      {
        "d": "M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151 1 1 0 0 1 0-.696 10.75 10.75 0 0 1 4.446-5.143"
      }
    ],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "eye-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Eye_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Eye_off);

// node_modules/lucide-svelte/dist/icons/eye.svelte
mark_module_start();
Eye[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/eye.svelte";
function Eye($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Eye);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "eye" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Eye, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Eye);

// node_modules/lucide-svelte/dist/icons/facebook.svelte
mark_module_start();
Facebook[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/facebook.svelte";
function Facebook($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Facebook);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "facebook" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Facebook, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Facebook);

// node_modules/lucide-svelte/dist/icons/factory.svelte
mark_module_start();
Factory[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/factory.svelte";
function Factory($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Factory);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8l-7 5V8l-7 5V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
      }
    ],
    ["path", { "d": "M17 18h1" }],
    ["path", { "d": "M12 18h1" }],
    ["path", { "d": "M7 18h1" }]
  ];
  Icon($$anchor, spread_props({ name: "factory" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Factory, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Factory);

// node_modules/lucide-svelte/dist/icons/fan.svelte
mark_module_start();
Fan[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fan.svelte";
function Fan($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fan);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.827 16.379a6.082 6.082 0 0 1-8.618-7.002l5.412 1.45a6.082 6.082 0 0 1 7.002-8.618l-1.45 5.412a6.082 6.082 0 0 1 8.618 7.002l-5.412-1.45a6.082 6.082 0 0 1-7.002 8.618l1.45-5.412Z"
      }
    ],
    ["path", { "d": "M12 12v.01" }]
  ];
  Icon($$anchor, spread_props({ name: "fan" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fan, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fan);

// node_modules/lucide-svelte/dist/icons/fast-forward.svelte
mark_module_start();
Fast_forward[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fast-forward.svelte";
function Fast_forward($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fast_forward);
  const iconNode = [
    [
      "polygon",
      { "points": "13 19 22 12 13 5 13 19" }
    ],
    [
      "polygon",
      { "points": "2 19 11 12 2 5 2 19" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "fast-forward" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fast_forward, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fast_forward);

// node_modules/lucide-svelte/dist/icons/feather.svelte
mark_module_start();
Feather[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/feather.svelte";
function Feather($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Feather);
  const iconNode = [
    [
      "path",
      {
        "d": "M12.67 19a2 2 0 0 0 1.416-.588l6.154-6.172a6 6 0 0 0-8.49-8.49L5.586 9.914A2 2 0 0 0 5 11.328V18a1 1 0 0 0 1 1z"
      }
    ],
    ["path", { "d": "M16 8 2 22" }],
    ["path", { "d": "M17.5 15H9" }]
  ];
  Icon($$anchor, spread_props({ name: "feather" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Feather, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Feather);

// node_modules/lucide-svelte/dist/icons/fence.svelte
mark_module_start();
Fence[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fence.svelte";
function Fence($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fence);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 3 2 5v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z"
      }
    ],
    ["path", { "d": "M6 8h4" }],
    ["path", { "d": "M6 18h4" }],
    [
      "path",
      {
        "d": "m12 3-2 2v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z"
      }
    ],
    ["path", { "d": "M14 8h4" }],
    ["path", { "d": "M14 18h4" }],
    [
      "path",
      {
        "d": "m20 3-2 2v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "fence" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fence, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fence);

// node_modules/lucide-svelte/dist/icons/ferris-wheel.svelte
mark_module_start();
Ferris_wheel[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ferris-wheel.svelte";
function Ferris_wheel($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ferris_wheel);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "2" }
    ],
    ["path", { "d": "M12 2v4" }],
    ["path", { "d": "m6.8 15-3.5 2" }],
    ["path", { "d": "m20.7 7-3.5 2" }],
    ["path", { "d": "M6.8 9 3.3 7" }],
    ["path", { "d": "m20.7 17-3.5-2" }],
    ["path", { "d": "m9 22 3-8 3 8" }],
    ["path", { "d": "M8 22h8" }],
    ["path", { "d": "M18 18.7a9 9 0 1 0-12 0" }]
  ];
  Icon($$anchor, spread_props({ name: "ferris-wheel" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ferris_wheel, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ferris_wheel);

// node_modules/lucide-svelte/dist/icons/figma.svelte
mark_module_start();
Figma[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/figma.svelte";
function Figma($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Figma);
  const iconNode = [
    [
      "path",
      {
        "d": "M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z"
      }
    ],
    [
      "path",
      { "d": "M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z" }
    ],
    [
      "path",
      {
        "d": "M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z"
      }
    ],
    [
      "path",
      {
        "d": "M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z"
      }
    ],
    [
      "path",
      {
        "d": "M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "figma" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Figma, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Figma);

// node_modules/lucide-svelte/dist/icons/file-archive.svelte
mark_module_start();
File_archive[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-archive.svelte";
function File_archive($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_archive);
  const iconNode = [
    ["path", { "d": "M10 12v-1" }],
    ["path", { "d": "M10 18v-2" }],
    ["path", { "d": "M10 7V6" }],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M15.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v16a2 2 0 0 0 .274 1.01"
      }
    ],
    [
      "circle",
      { "cx": "10", "cy": "20", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-archive" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_archive, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_archive);

// node_modules/lucide-svelte/dist/icons/file-audio-2.svelte
mark_module_start();
File_audio_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-audio-2.svelte";
function File_audio_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_audio_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "circle",
      { "cx": "3", "cy": "17", "r": "1" }
    ],
    ["path", { "d": "M2 17v-3a4 4 0 0 1 8 0v3" }],
    [
      "circle",
      { "cx": "9", "cy": "17", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-audio-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_audio_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_audio_2);

// node_modules/lucide-svelte/dist/icons/file-audio.svelte
mark_module_start();
File_audio[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-audio.svelte";
function File_audio($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_audio);
  const iconNode = [
    [
      "path",
      {
        "d": "M17.5 22h.5a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M2 19a2 2 0 1 1 4 0v1a2 2 0 1 1-4 0v-4a6 6 0 0 1 12 0v4a2 2 0 1 1-4 0v-1a2 2 0 1 1 4 0"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-audio" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_audio, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_audio);

// node_modules/lucide-svelte/dist/icons/file-axis-3d.svelte
mark_module_start();
File_axis_3d[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-axis-3d.svelte";
function File_axis_3d($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_axis_3d);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "m8 18 4-4" }],
    ["path", { "d": "M8 10v8h8" }]
  ];
  Icon($$anchor, spread_props({ name: "file-axis-3d" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_axis_3d, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_axis_3d);

// node_modules/lucide-svelte/dist/icons/file-badge-2.svelte
mark_module_start();
File_badge_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-badge-2.svelte";
function File_badge_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_badge_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "3" }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      { "d": "m14 12.5 1 5.5-3-1-3 1 1-5.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-badge-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_badge_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_badge_2);

// node_modules/lucide-svelte/dist/icons/file-badge.svelte
mark_module_start();
File_badge[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-badge.svelte";
function File_badge($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_badge);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 22h6a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      { "d": "M5 17a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" }
    ],
    [
      "path",
      { "d": "M7 16.5 8 22l-3-1-3 1 1-5.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-badge" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_badge, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_badge);

// node_modules/lucide-svelte/dist/icons/file-box.svelte
mark_module_start();
File_box[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-box.svelte";
function File_box($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_box);
  const iconNode = [
    [
      "path",
      {
        "d": "M14.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M3 13.1a2 2 0 0 0-1 1.76v3.24a2 2 0 0 0 .97 1.78L6 21.7a2 2 0 0 0 2.03.01L11 19.9a2 2 0 0 0 1-1.76V14.9a2 2 0 0 0-.97-1.78L8 11.3a2 2 0 0 0-2.03-.01Z"
      }
    ],
    ["path", { "d": "M7 17v5" }],
    ["path", { "d": "M11.7 14.2 7 17l-4.7-2.8" }]
  ];
  Icon($$anchor, spread_props({ name: "file-box" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_box, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_box);

// node_modules/lucide-svelte/dist/icons/file-chart-column-increasing.svelte
mark_module_start();
File_chart_column_increasing[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-chart-column-increasing.svelte";
function File_chart_column_increasing($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_chart_column_increasing);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M8 18v-2" }],
    ["path", { "d": "M12 18v-4" }],
    ["path", { "d": "M16 18v-6" }]
  ];
  Icon($$anchor, spread_props({ name: "file-chart-column-increasing" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_chart_column_increasing, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_chart_column_increasing);

// node_modules/lucide-svelte/dist/icons/file-chart-column.svelte
mark_module_start();
File_chart_column[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-chart-column.svelte";
function File_chart_column($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_chart_column);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M8 18v-1" }],
    ["path", { "d": "M12 18v-6" }],
    ["path", { "d": "M16 18v-3" }]
  ];
  Icon($$anchor, spread_props({ name: "file-chart-column" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_chart_column, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_chart_column);

// node_modules/lucide-svelte/dist/icons/file-chart-line.svelte
mark_module_start();
File_chart_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-chart-line.svelte";
function File_chart_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_chart_line);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "m16 13-3.5 3.5-2-2L8 17" }]
  ];
  Icon($$anchor, spread_props({ name: "file-chart-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_chart_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_chart_line);

// node_modules/lucide-svelte/dist/icons/file-chart-pie.svelte
mark_module_start();
File_chart_pie[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-chart-pie.svelte";
function File_chart_pie($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_chart_pie);
  const iconNode = [
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3.5"
      }
    ],
    [
      "path",
      { "d": "M4.017 11.512a6 6 0 1 0 8.466 8.475" }
    ],
    [
      "path",
      {
        "d": "M9 16a1 1 0 0 1-1-1v-4c0-.552.45-1.008.995-.917a6 6 0 0 1 4.922 4.922c.091.544-.365.995-.917.995z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-chart-pie" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_chart_pie, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_chart_pie);

// node_modules/lucide-svelte/dist/icons/file-check-2.svelte
mark_module_start();
File_check_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-check-2.svelte";
function File_check_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_check_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "m3 15 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "file-check-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_check_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_check_2);

// node_modules/lucide-svelte/dist/icons/file-check.svelte
mark_module_start();
File_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-check.svelte";
function File_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_check);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "m9 15 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "file-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_check);

// node_modules/lucide-svelte/dist/icons/file-clock.svelte
mark_module_start();
File_clock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-clock.svelte";
function File_clock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_clock);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "circle",
      { "cx": "8", "cy": "16", "r": "6" }
    ],
    ["path", { "d": "M9.5 17.5 8 16.25V14" }]
  ];
  Icon($$anchor, spread_props({ name: "file-clock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_clock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_clock);

// node_modules/lucide-svelte/dist/icons/file-code-2.svelte
mark_module_start();
File_code_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-code-2.svelte";
function File_code_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_code_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "m5 12-3 3 3 3" }],
    ["path", { "d": "m9 18 3-3-3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "file-code-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_code_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_code_2);

// node_modules/lucide-svelte/dist/icons/file-code.svelte
mark_module_start();
File_code[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-code.svelte";
function File_code($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_code);
  const iconNode = [
    ["path", { "d": "M10 12.5 8 15l2 2.5" }],
    ["path", { "d": "m14 12.5 2 2.5-2 2.5" }],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-code" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_code, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_code);

// node_modules/lucide-svelte/dist/icons/file-cog.svelte
mark_module_start();
File_cog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-cog.svelte";
function File_cog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_cog);
  const iconNode = [
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "m3.2 12.9-.9-.4" }],
    ["path", { "d": "m3.2 15.1-.9.4" }],
    [
      "path",
      {
        "d": "M4.677 21.5a2 2 0 0 0 1.313.5H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2.5"
      }
    ],
    ["path", { "d": "m4.9 11.2-.4-.9" }],
    ["path", { "d": "m4.9 16.8-.4.9" }],
    ["path", { "d": "m7.5 10.3-.4.9" }],
    ["path", { "d": "m7.5 17.7-.4-.9" }],
    ["path", { "d": "m9.7 12.5-.9.4" }],
    ["path", { "d": "m9.7 15.5-.9-.4" }],
    [
      "circle",
      { "cx": "6", "cy": "14", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-cog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_cog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_cog);

// node_modules/lucide-svelte/dist/icons/file-diff.svelte
mark_module_start();
File_diff[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-diff.svelte";
function File_diff($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_diff);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M9 10h6" }],
    ["path", { "d": "M12 13V7" }],
    ["path", { "d": "M9 17h6" }]
  ];
  Icon($$anchor, spread_props({ name: "file-diff" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_diff, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_diff);

// node_modules/lucide-svelte/dist/icons/file-digit.svelte
mark_module_start();
File_digit[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-digit.svelte";
function File_digit($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_digit);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "rect",
      {
        "width": "4",
        "height": "6",
        "x": "2",
        "y": "12",
        "rx": "2"
      }
    ],
    ["path", { "d": "M10 12h2v6" }],
    ["path", { "d": "M10 18h4" }]
  ];
  Icon($$anchor, spread_props({ name: "file-digit" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_digit, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_digit);

// node_modules/lucide-svelte/dist/icons/file-down.svelte
mark_module_start();
File_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-down.svelte";
function File_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_down);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M12 18v-6" }],
    ["path", { "d": "m9 15 3 3 3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "file-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_down);

// node_modules/lucide-svelte/dist/icons/file-heart.svelte
mark_module_start();
File_heart[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-heart.svelte";
function File_heart($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_heart);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M10.29 10.7a2.43 2.43 0 0 0-2.66-.52c-.29.12-.56.3-.78.53l-.35.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L6.5 18l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-heart" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_heart, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_heart);

// node_modules/lucide-svelte/dist/icons/file-image.svelte
mark_module_start();
File_image[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-image.svelte";
function File_image($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_image);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "circle",
      { "cx": "10", "cy": "12", "r": "2" }
    ],
    [
      "path",
      {
        "d": "m20 17-1.296-1.296a2.41 2.41 0 0 0-3.408 0L9 22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-image" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_image, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_image);

// node_modules/lucide-svelte/dist/icons/file-input.svelte
mark_module_start();
File_input[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-input.svelte";
function File_input($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_input);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M2 15h10" }],
    ["path", { "d": "m9 18 3-3-3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "file-input" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_input, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_input);

// node_modules/lucide-svelte/dist/icons/file-json-2.svelte
mark_module_start();
File_json_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-json-2.svelte";
function File_json_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_json_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M4 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1"
      }
    ],
    [
      "path",
      {
        "d": "M8 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-json-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_json_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_json_2);

// node_modules/lucide-svelte/dist/icons/file-json.svelte
mark_module_start();
File_json[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-json.svelte";
function File_json($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_json);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M10 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1"
      }
    ],
    [
      "path",
      {
        "d": "M14 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-json" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_json, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_json);

// node_modules/lucide-svelte/dist/icons/file-key-2.svelte
mark_module_start();
File_key_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-key-2.svelte";
function File_key_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_key_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v6"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "circle",
      { "cx": "4", "cy": "16", "r": "2" }
    ],
    ["path", { "d": "m10 10-4.5 4.5" }],
    ["path", { "d": "m9 11 1 1" }]
  ];
  Icon($$anchor, spread_props({ name: "file-key-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_key_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_key_2);

// node_modules/lucide-svelte/dist/icons/file-key.svelte
mark_module_start();
File_key[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-key.svelte";
function File_key($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_key);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    [
      "circle",
      { "cx": "10", "cy": "16", "r": "2" }
    ],
    ["path", { "d": "m16 10-4.5 4.5" }],
    ["path", { "d": "m15 11 1 1" }]
  ];
  Icon($$anchor, spread_props({ name: "file-key" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_key, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_key);

// node_modules/lucide-svelte/dist/icons/file-lock-2.svelte
mark_module_start();
File_lock_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-lock-2.svelte";
function File_lock_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_lock_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v1"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "rect",
      {
        "width": "8",
        "height": "5",
        "x": "2",
        "y": "13",
        "rx": "1"
      }
    ],
    ["path", { "d": "M8 13v-2a2 2 0 1 0-4 0v2" }]
  ];
  Icon($$anchor, spread_props({ name: "file-lock-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_lock_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_lock_2);

// node_modules/lucide-svelte/dist/icons/file-lock.svelte
mark_module_start();
File_lock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-lock.svelte";
function File_lock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_lock);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    [
      "rect",
      {
        "width": "8",
        "height": "6",
        "x": "8",
        "y": "12",
        "rx": "1"
      }
    ],
    [
      "path",
      { "d": "M10 12v-2a2 2 0 1 1 4 0v2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-lock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_lock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_lock);

// node_modules/lucide-svelte/dist/icons/file-minus-2.svelte
mark_module_start();
File_minus_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-minus-2.svelte";
function File_minus_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_minus_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M3 15h6" }]
  ];
  Icon($$anchor, spread_props({ name: "file-minus-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_minus_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_minus_2);

// node_modules/lucide-svelte/dist/icons/file-minus.svelte
mark_module_start();
File_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-minus.svelte";
function File_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M9 15h6" }]
  ];
  Icon($$anchor, spread_props({ name: "file-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_minus);

// node_modules/lucide-svelte/dist/icons/file-music.svelte
mark_module_start();
File_music[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-music.svelte";
function File_music($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_music);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v8.4"
      }
    ],
    ["path", { "d": "M8 18v-7.7L16 9v7" }],
    [
      "circle",
      { "cx": "14", "cy": "16", "r": "2" }
    ],
    [
      "circle",
      { "cx": "6", "cy": "18", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-music" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_music, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_music);

// node_modules/lucide-svelte/dist/icons/file-output.svelte
mark_module_start();
File_output[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-output.svelte";
function File_output($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_output);
  const iconNode = [
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      { "d": "M4 7V4a2 2 0 0 1 2-2 2 2 0 0 0-2 2" }
    ],
    [
      "path",
      {
        "d": "M4.063 20.999a2 2 0 0 0 2 1L18 22a2 2 0 0 0 2-2V7l-5-5H6"
      }
    ],
    ["path", { "d": "m5 11-3 3" }],
    ["path", { "d": "m5 17-3-3h10" }]
  ];
  Icon($$anchor, spread_props({ name: "file-output" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_output, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_output);

// node_modules/lucide-svelte/dist/icons/file-pen-line.svelte
mark_module_start();
File_pen_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-pen-line.svelte";
function File_pen_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_pen_line);
  const iconNode = [
    [
      "path",
      {
        "d": "m18 5-2.414-2.414A2 2 0 0 0 14.172 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2"
      }
    ],
    [
      "path",
      {
        "d": "M21.378 12.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
      }
    ],
    ["path", { "d": "M8 18h1" }]
  ];
  Icon($$anchor, spread_props({ name: "file-pen-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_pen_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_pen_line);

// node_modules/lucide-svelte/dist/icons/file-pen.svelte
mark_module_start();
File_pen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-pen.svelte";
function File_pen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_pen);
  const iconNode = [
    [
      "path",
      {
        "d": "M12.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v9.5"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M13.378 15.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-pen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_pen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_pen);

// node_modules/lucide-svelte/dist/icons/file-plus-2.svelte
mark_module_start();
File_plus_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-plus-2.svelte";
function File_plus_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_plus_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M3 15h6" }],
    ["path", { "d": "M6 12v6" }]
  ];
  Icon($$anchor, spread_props({ name: "file-plus-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_plus_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_plus_2);

// node_modules/lucide-svelte/dist/icons/file-plus.svelte
mark_module_start();
File_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-plus.svelte";
function File_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M9 15h6" }],
    ["path", { "d": "M12 18v-6" }]
  ];
  Icon($$anchor, spread_props({ name: "file-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_plus);

// node_modules/lucide-svelte/dist/icons/file-question.svelte
mark_module_start();
File_question[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-question.svelte";
function File_question($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_question);
  const iconNode = [
    ["path", { "d": "M12 17h.01" }],
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z"
      }
    ],
    [
      "path",
      { "d": "M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-question" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_question, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_question);

// node_modules/lucide-svelte/dist/icons/file-scan.svelte
mark_module_start();
File_scan[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-scan.svelte";
function File_scan($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_scan);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 10V7l-5-5H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M16 14a2 2 0 0 0-2 2" }],
    ["path", { "d": "M20 14a2 2 0 0 1 2 2" }],
    ["path", { "d": "M20 22a2 2 0 0 0 2-2" }],
    ["path", { "d": "M16 22a2 2 0 0 1-2-2" }]
  ];
  Icon($$anchor, spread_props({ name: "file-scan" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_scan, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_scan);

// node_modules/lucide-svelte/dist/icons/file-search-2.svelte
mark_module_start();
File_search_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-search-2.svelte";
function File_search_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_search_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "circle",
      { "cx": "11.5", "cy": "14.5", "r": "2.5" }
    ],
    ["path", { "d": "M13.3 16.3 15 18" }]
  ];
  Icon($$anchor, spread_props({ name: "file-search-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_search_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_search_2);

// node_modules/lucide-svelte/dist/icons/file-search.svelte
mark_module_start();
File_search[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-search.svelte";
function File_search($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_search);
  const iconNode = [
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M4.268 21a2 2 0 0 0 1.727 1H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3"
      }
    ],
    ["path", { "d": "m9 18-1.5-1.5" }],
    [
      "circle",
      { "cx": "5", "cy": "14", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-search" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_search, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_search);

// node_modules/lucide-svelte/dist/icons/file-sliders.svelte
mark_module_start();
File_sliders[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-sliders.svelte";
function File_sliders($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_sliders);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M8 12h8" }],
    ["path", { "d": "M10 11v2" }],
    ["path", { "d": "M8 17h8" }],
    ["path", { "d": "M14 16v2" }]
  ];
  Icon($$anchor, spread_props({ name: "file-sliders" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_sliders, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_sliders);

// node_modules/lucide-svelte/dist/icons/file-spreadsheet.svelte
mark_module_start();
File_spreadsheet[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-spreadsheet.svelte";
function File_spreadsheet($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_spreadsheet);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M8 13h2" }],
    ["path", { "d": "M14 13h2" }],
    ["path", { "d": "M8 17h2" }],
    ["path", { "d": "M14 17h2" }]
  ];
  Icon($$anchor, spread_props({ name: "file-spreadsheet" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_spreadsheet, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_spreadsheet);

// node_modules/lucide-svelte/dist/icons/file-stack.svelte
mark_module_start();
File_stack[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-stack.svelte";
function File_stack($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_stack);
  const iconNode = [
    ["path", { "d": "M21 7h-3a2 2 0 0 1-2-2V2" }],
    [
      "path",
      {
        "d": "M21 6v6.5c0 .8-.7 1.5-1.5 1.5h-7c-.8 0-1.5-.7-1.5-1.5v-9c0-.8.7-1.5 1.5-1.5H17Z"
      }
    ],
    [
      "path",
      { "d": "M7 8v8.8c0 .3.2.6.4.8.2.2.5.4.8.4H15" }
    ],
    [
      "path",
      { "d": "M3 12v8.8c0 .3.2.6.4.8.2.2.5.4.8.4H11" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-stack" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_stack, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_stack);

// node_modules/lucide-svelte/dist/icons/file-symlink.svelte
mark_module_start();
File_symlink[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-symlink.svelte";
function File_symlink($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_symlink);
  const iconNode = [
    ["path", { "d": "m10 18 3-3-3-3" }],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M4 11V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-symlink" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_symlink, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_symlink);

// node_modules/lucide-svelte/dist/icons/file-terminal.svelte
mark_module_start();
File_terminal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-terminal.svelte";
function File_terminal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_terminal);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "m8 16 2-2-2-2" }],
    ["path", { "d": "M12 18h4" }]
  ];
  Icon($$anchor, spread_props({ name: "file-terminal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_terminal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_terminal);

// node_modules/lucide-svelte/dist/icons/file-text.svelte
mark_module_start();
File_text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-text.svelte";
function File_text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_text);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M10 9H8" }],
    ["path", { "d": "M16 13H8" }],
    ["path", { "d": "M16 17H8" }]
  ];
  Icon($$anchor, spread_props({ name: "file-text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_text);

// node_modules/lucide-svelte/dist/icons/file-type-2.svelte
mark_module_start();
File_type_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-type-2.svelte";
function File_type_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_type_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M2 13v-1h6v1" }],
    ["path", { "d": "M5 12v6" }],
    ["path", { "d": "M4 18h2" }]
  ];
  Icon($$anchor, spread_props({ name: "file-type-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_type_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_type_2);

// node_modules/lucide-svelte/dist/icons/file-type.svelte
mark_module_start();
File_type[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-type.svelte";
function File_type($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_type);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M9 13v-1h6v1" }],
    ["path", { "d": "M12 12v6" }],
    ["path", { "d": "M11 18h2" }]
  ];
  Icon($$anchor, spread_props({ name: "file-type" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_type, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_type);

// node_modules/lucide-svelte/dist/icons/file-up.svelte
mark_module_start();
File_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-up.svelte";
function File_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_up);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M12 12v6" }],
    ["path", { "d": "m15 15-3-3-3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "file-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_up);

// node_modules/lucide-svelte/dist/icons/file-user.svelte
mark_module_start();
File_user[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-user.svelte";
function File_user($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_user);
  const iconNode = [
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M15 18a3 3 0 1 0-6 0" }],
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "13", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-user" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_user, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_user);

// node_modules/lucide-svelte/dist/icons/file-video-2.svelte
mark_module_start();
File_video_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-video-2.svelte";
function File_video_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_video_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "rect",
      {
        "width": "8",
        "height": "6",
        "x": "2",
        "y": "12",
        "rx": "1"
      }
    ],
    ["path", { "d": "m10 15.5 4 2.5v-6l-4 2.5" }]
  ];
  Icon($$anchor, spread_props({ name: "file-video-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_video_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_video_2);

// node_modules/lucide-svelte/dist/icons/file-video.svelte
mark_module_start();
File_video[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-video.svelte";
function File_video($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_video);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "m10 11 5 3-5 3v-6Z" }]
  ];
  Icon($$anchor, spread_props({ name: "file-video" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_video, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_video);

// node_modules/lucide-svelte/dist/icons/file-volume-2.svelte
mark_module_start();
File_volume_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-volume-2.svelte";
function File_volume_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_volume_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M8 15h.01" }],
    [
      "path",
      { "d": "M11.5 13.5a2.5 2.5 0 0 1 0 3" }
    ],
    ["path", { "d": "M15 12a5 5 0 0 1 0 6" }]
  ];
  Icon($$anchor, spread_props({ name: "file-volume-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_volume_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_volume_2);

// node_modules/lucide-svelte/dist/icons/file-volume.svelte
mark_module_start();
File_volume[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-volume.svelte";
function File_volume($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_volume);
  const iconNode = [
    ["path", { "d": "M11 11a5 5 0 0 1 0 6" }],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    [
      "path",
      {
        "d": "M4 6.765V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-.93-.23"
      }
    ],
    [
      "path",
      {
        "d": "M7 10.51a.5.5 0 0 0-.826-.38l-1.893 1.628A1 1 0 0 1 3.63 12H2.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h1.129a1 1 0 0 1 .652.242l1.893 1.63a.5.5 0 0 0 .826-.38z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "file-volume" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_volume, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_volume);

// node_modules/lucide-svelte/dist/icons/file-warning.svelte
mark_module_start();
File_warning[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-warning.svelte";
function File_warning($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_warning);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M12 9v4" }],
    ["path", { "d": "M12 17h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "file-warning" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_warning, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_warning);

// node_modules/lucide-svelte/dist/icons/file-x-2.svelte
mark_module_start();
File_x_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-x-2.svelte";
function File_x_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_x_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "m8 12.5-5 5" }],
    ["path", { "d": "m3 12.5 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "file-x-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_x_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_x_2);

// node_modules/lucide-svelte/dist/icons/file-x.svelte
mark_module_start();
File_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file-x.svelte";
function File_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "m14.5 12.5-5 5" }],
    ["path", { "d": "m9.5 12.5 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "file-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File_x);

// node_modules/lucide-svelte/dist/icons/file.svelte
mark_module_start();
File[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/file.svelte";
function File($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, File);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
      }
    ],
    ["path", { "d": "M14 2v4a2 2 0 0 0 2 2h4" }]
  ];
  Icon($$anchor, spread_props({ name: "file" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(File, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(File);

// node_modules/lucide-svelte/dist/icons/files.svelte
mark_module_start();
Files[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/files.svelte";
function Files($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Files);
  const iconNode = [
    ["path", { "d": "M20 7h-3a2 2 0 0 1-2-2V2" }],
    [
      "path",
      {
        "d": "M9 18a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h7l4 4v10a2 2 0 0 1-2 2Z"
      }
    ],
    [
      "path",
      { "d": "M3 7.6v12.8A1.6 1.6 0 0 0 4.6 22h9.8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "files" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Files, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Files);

// node_modules/lucide-svelte/dist/icons/film.svelte
mark_module_start();
Film[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/film.svelte";
function Film($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Film);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M7 3v18" }],
    ["path", { "d": "M3 7.5h4" }],
    ["path", { "d": "M3 12h18" }],
    ["path", { "d": "M3 16.5h4" }],
    ["path", { "d": "M17 3v18" }],
    ["path", { "d": "M17 7.5h4" }],
    ["path", { "d": "M17 16.5h4" }]
  ];
  Icon($$anchor, spread_props({ name: "film" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Film, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Film);

// node_modules/lucide-svelte/dist/icons/filter-x.svelte
mark_module_start();
Filter_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/filter-x.svelte";
function Filter_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Filter_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M13.013 3H2l8 9.46V19l4 2v-8.54l.9-1.055"
      }
    ],
    ["path", { "d": "m22 3-5 5" }],
    ["path", { "d": "m17 3 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "filter-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Filter_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Filter_x);

// node_modules/lucide-svelte/dist/icons/filter.svelte
mark_module_start();
Filter[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/filter.svelte";
function Filter($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Filter);
  const iconNode = [
    [
      "polygon",
      {
        "points": "22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "filter" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Filter, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Filter);

// node_modules/lucide-svelte/dist/icons/fingerprint.svelte
mark_module_start();
Fingerprint[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fingerprint.svelte";
function Fingerprint($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fingerprint);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 10a2 2 0 0 0-2 2c0 1.02-.1 2.51-.26 4"
      }
    ],
    [
      "path",
      { "d": "M14 13.12c0 2.38 0 6.38-1 8.88" }
    ],
    [
      "path",
      { "d": "M17.29 21.02c.12-.6.43-2.3.5-3.02" }
    ],
    ["path", { "d": "M2 12a10 10 0 0 1 18-6" }],
    ["path", { "d": "M2 16h.01" }],
    [
      "path",
      { "d": "M21.8 16c.2-2 .131-5.354 0-6" }
    ],
    [
      "path",
      {
        "d": "M5 19.5C5.5 18 6 15 6 12a6 6 0 0 1 .34-2"
      }
    ],
    [
      "path",
      { "d": "M8.65 22c.21-.66.45-1.32.57-2" }
    ],
    ["path", { "d": "M9 6.8a6 6 0 0 1 9 5.2v2" }]
  ];
  Icon($$anchor, spread_props({ name: "fingerprint" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fingerprint, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fingerprint);

// node_modules/lucide-svelte/dist/icons/fire-extinguisher.svelte
mark_module_start();
Fire_extinguisher[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fire-extinguisher.svelte";
function Fire_extinguisher($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fire_extinguisher);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 6.5V3a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v3.5"
      }
    ],
    ["path", { "d": "M9 18h8" }],
    ["path", { "d": "M18 3h-3" }],
    ["path", { "d": "M11 3a6 6 0 0 0-6 6v11" }],
    ["path", { "d": "M5 13h4" }],
    [
      "path",
      {
        "d": "M17 10a4 4 0 0 0-8 0v10a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "fire-extinguisher" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fire_extinguisher, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fire_extinguisher);

// node_modules/lucide-svelte/dist/icons/fish-off.svelte
mark_module_start();
Fish_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fish-off.svelte";
function Fish_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fish_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 12.47v.03m0-.5v.47m-.475 5.056A6.744 6.744 0 0 1 15 18c-3.56 0-7.56-2.53-8.5-6 .348-1.28 1.114-2.433 2.121-3.38m3.444-2.088A8.802 8.802 0 0 1 15 6c3.56 0 6.06 2.54 7 6-.309 1.14-.786 2.177-1.413 3.058"
      }
    ],
    [
      "path",
      {
        "d": "M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33m7.48-4.372A9.77 9.77 0 0 1 16 6.07m0 11.86a9.77 9.77 0 0 1-1.728-3.618"
      }
    ],
    [
      "path",
      {
        "d": "m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98M8.53 3h5.27a2 2 0 0 1 1.98 1.67l.23 1.4M2 2l20 20"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "fish-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fish_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fish_off);

// node_modules/lucide-svelte/dist/icons/fish-symbol.svelte
mark_module_start();
Fish_symbol[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fish-symbol.svelte";
function Fish_symbol($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fish_symbol);
  const iconNode = [
    [
      "path",
      { "d": "M2 16s9-15 20-4C11 23 2 8 2 8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "fish-symbol" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fish_symbol, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fish_symbol);

// node_modules/lucide-svelte/dist/icons/fish.svelte
mark_module_start();
Fish[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fish.svelte";
function Fish($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fish);
  const iconNode = [
    [
      "path",
      {
        "d": "M6.5 12c.94-3.46 4.94-6 8.5-6 3.56 0 6.06 2.54 7 6-.94 3.47-3.44 6-7 6s-7.56-2.53-8.5-6Z"
      }
    ],
    ["path", { "d": "M18 12v.5" }],
    [
      "path",
      { "d": "M16 17.93a9.77 9.77 0 0 1 0-11.86" }
    ],
    [
      "path",
      {
        "d": "M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33"
      }
    ],
    [
      "path",
      {
        "d": "M10.46 7.26C10.2 5.88 9.17 4.24 8 3h5.8a2 2 0 0 1 1.98 1.67l.23 1.4"
      }
    ],
    [
      "path",
      {
        "d": "m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "fish" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fish, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fish);

// node_modules/lucide-svelte/dist/icons/flag-off.svelte
mark_module_start();
Flag_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flag-off.svelte";
function Flag_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flag_off);
  const iconNode = [
    [
      "path",
      { "d": "M8 2c3 0 5 2 8 2s4-1 4-1v11" }
    ],
    ["path", { "d": "M4 22V4" }],
    ["path", { "d": "M4 15s1-1 4-1 5 2 8 2" }],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "flag-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flag_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flag_off);

// node_modules/lucide-svelte/dist/icons/flag-triangle-left.svelte
mark_module_start();
Flag_triangle_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flag-triangle-left.svelte";
function Flag_triangle_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flag_triangle_left);
  const iconNode = [["path", { "d": "M17 22V2L7 7l10 5" }]];
  Icon($$anchor, spread_props({ name: "flag-triangle-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flag_triangle_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flag_triangle_left);

// node_modules/lucide-svelte/dist/icons/flag-triangle-right.svelte
mark_module_start();
Flag_triangle_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flag-triangle-right.svelte";
function Flag_triangle_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flag_triangle_right);
  const iconNode = [["path", { "d": "M7 22V2l10 5-10 5" }]];
  Icon($$anchor, spread_props({ name: "flag-triangle-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flag_triangle_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flag_triangle_right);

// node_modules/lucide-svelte/dist/icons/flag.svelte
mark_module_start();
Flag[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flag.svelte";
function Flag($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flag);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"
      }
    ],
    [
      "line",
      {
        "x1": "4",
        "x2": "4",
        "y1": "22",
        "y2": "15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "flag" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flag, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flag);

// node_modules/lucide-svelte/dist/icons/flame-kindling.svelte
mark_module_start();
Flame_kindling[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flame-kindling.svelte";
function Flame_kindling($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flame_kindling);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 2c1 3 2.5 3.5 3.5 4.5A5 5 0 0 1 17 10a5 5 0 1 1-10 0c0-.3 0-.6.1-.9a2 2 0 1 0 3.3-2C8 4.5 11 2 12 2Z"
      }
    ],
    ["path", { "d": "m5 22 14-4" }],
    ["path", { "d": "m5 18 14 4" }]
  ];
  Icon($$anchor, spread_props({ name: "flame-kindling" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flame_kindling, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flame_kindling);

// node_modules/lucide-svelte/dist/icons/flame.svelte
mark_module_start();
Flame[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flame.svelte";
function Flame($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flame);
  const iconNode = [
    [
      "path",
      {
        "d": "M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "flame" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flame, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flame);

// node_modules/lucide-svelte/dist/icons/flashlight-off.svelte
mark_module_start();
Flashlight_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flashlight-off.svelte";
function Flashlight_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flashlight_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 16v4a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4"
      }
    ],
    ["path", { "d": "M7 2h11v4c0 2-2 2-2 4v1" }],
    [
      "line",
      {
        "x1": "11",
        "x2": "18",
        "y1": "6",
        "y2": "6"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "flashlight-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flashlight_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flashlight_off);

// node_modules/lucide-svelte/dist/icons/flashlight.svelte
mark_module_start();
Flashlight[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flashlight.svelte";
function Flashlight($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flashlight);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 6c0 2-2 2-2 4v10a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4V2h12z"
      }
    ],
    [
      "line",
      { "x1": "6", "x2": "18", "y1": "6", "y2": "6" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "12",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "flashlight" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flashlight, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flashlight);

// node_modules/lucide-svelte/dist/icons/flask-conical-off.svelte
mark_module_start();
Flask_conical_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flask-conical-off.svelte";
function Flask_conical_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flask_conical_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M10 10 4.72 20.55a1 1 0 0 0 .9 1.45h12.76a1 1 0 0 0 .9-1.45l-1.272-2.542"
      }
    ],
    ["path", { "d": "M10 2v2.343" }],
    ["path", { "d": "M14 2v6.343" }],
    ["path", { "d": "M8.5 2h7" }],
    ["path", { "d": "M7 16h9" }],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "flask-conical-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flask_conical_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flask_conical_off);

// node_modules/lucide-svelte/dist/icons/flask-conical.svelte
mark_module_start();
Flask_conical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flask-conical.svelte";
function Flask_conical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flask_conical);
  const iconNode = [
    [
      "path",
      {
        "d": "M10 2v7.527a2 2 0 0 1-.211.896L4.72 20.55a1 1 0 0 0 .9 1.45h12.76a1 1 0 0 0 .9-1.45l-5.069-10.127A2 2 0 0 1 14 9.527V2"
      }
    ],
    ["path", { "d": "M8.5 2h7" }],
    ["path", { "d": "M7 16h10" }]
  ];
  Icon($$anchor, spread_props({ name: "flask-conical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flask_conical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flask_conical);

// node_modules/lucide-svelte/dist/icons/flask-round.svelte
mark_module_start();
Flask_round[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flask-round.svelte";
function Flask_round($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flask_round);
  const iconNode = [
    ["path", { "d": "M10 2v7.31" }],
    ["path", { "d": "M14 9.3V1.99" }],
    ["path", { "d": "M8.5 2h7" }],
    [
      "path",
      { "d": "M14 9.3a6.5 6.5 0 1 1-4 0" }
    ],
    ["path", { "d": "M5.52 16h12.96" }]
  ];
  Icon($$anchor, spread_props({ name: "flask-round" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flask_round, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flask_round);

// node_modules/lucide-svelte/dist/icons/flip-horizontal-2.svelte
mark_module_start();
Flip_horizontal_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flip-horizontal-2.svelte";
function Flip_horizontal_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flip_horizontal_2);
  const iconNode = [
    ["path", { "d": "m3 7 5 5-5 5V7" }],
    ["path", { "d": "m21 7-5 5 5 5V7" }],
    ["path", { "d": "M12 20v2" }],
    ["path", { "d": "M12 14v2" }],
    ["path", { "d": "M12 8v2" }],
    ["path", { "d": "M12 2v2" }]
  ];
  Icon($$anchor, spread_props({ name: "flip-horizontal-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flip_horizontal_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flip_horizontal_2);

// node_modules/lucide-svelte/dist/icons/flip-horizontal.svelte
mark_module_start();
Flip_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flip-horizontal.svelte";
function Flip_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flip_horizontal);
  const iconNode = [
    [
      "path",
      { "d": "M8 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h3" }
    ],
    [
      "path",
      {
        "d": "M16 3h3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-3"
      }
    ],
    ["path", { "d": "M12 20v2" }],
    ["path", { "d": "M12 14v2" }],
    ["path", { "d": "M12 8v2" }],
    ["path", { "d": "M12 2v2" }]
  ];
  Icon($$anchor, spread_props({ name: "flip-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flip_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flip_horizontal);

// node_modules/lucide-svelte/dist/icons/flip-vertical-2.svelte
mark_module_start();
Flip_vertical_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flip-vertical-2.svelte";
function Flip_vertical_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flip_vertical_2);
  const iconNode = [
    ["path", { "d": "m17 3-5 5-5-5h10" }],
    ["path", { "d": "m17 21-5-5-5 5h10" }],
    ["path", { "d": "M4 12H2" }],
    ["path", { "d": "M10 12H8" }],
    ["path", { "d": "M16 12h-2" }],
    ["path", { "d": "M22 12h-2" }]
  ];
  Icon($$anchor, spread_props({ name: "flip-vertical-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flip_vertical_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flip_vertical_2);

// node_modules/lucide-svelte/dist/icons/flip-vertical.svelte
mark_module_start();
Flip_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flip-vertical.svelte";
function Flip_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flip_vertical);
  const iconNode = [
    [
      "path",
      { "d": "M21 8V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3" }
    ],
    [
      "path",
      {
        "d": "M21 16v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3"
      }
    ],
    ["path", { "d": "M4 12H2" }],
    ["path", { "d": "M10 12H8" }],
    ["path", { "d": "M16 12h-2" }],
    ["path", { "d": "M22 12h-2" }]
  ];
  Icon($$anchor, spread_props({ name: "flip-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flip_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flip_vertical);

// node_modules/lucide-svelte/dist/icons/flower-2.svelte
mark_module_start();
Flower_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flower-2.svelte";
function Flower_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flower_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 5a3 3 0 1 1 3 3m-3-3a3 3 0 1 0-3 3m3-3v1M9 8a3 3 0 1 0 3 3M9 8h1m5 0a3 3 0 1 1-3 3m3-3h-1m-2 3v-1"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "8", "r": "2" }
    ],
    ["path", { "d": "M12 10v12" }],
    [
      "path",
      {
        "d": "M12 22c4.2 0 7-1.667 7-5-4.2 0-7 1.667-7 5Z"
      }
    ],
    [
      "path",
      {
        "d": "M12 22c-4.2 0-7-1.667-7-5 4.2 0 7 1.667 7 5Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "flower-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flower_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flower_2);

// node_modules/lucide-svelte/dist/icons/flower.svelte
mark_module_start();
Flower[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/flower.svelte";
function Flower($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Flower);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ],
    [
      "path",
      {
        "d": "M12 16.5A4.5 4.5 0 1 1 7.5 12 4.5 4.5 0 1 1 12 7.5a4.5 4.5 0 1 1 4.5 4.5 4.5 4.5 0 1 1-4.5 4.5"
      }
    ],
    ["path", { "d": "M12 7.5V9" }],
    ["path", { "d": "M7.5 12H9" }],
    ["path", { "d": "M16.5 12H15" }],
    ["path", { "d": "M12 16.5V15" }],
    ["path", { "d": "m8 8 1.88 1.88" }],
    ["path", { "d": "M14.12 9.88 16 8" }],
    ["path", { "d": "m8 16 1.88-1.88" }],
    ["path", { "d": "M14.12 14.12 16 16" }]
  ];
  Icon($$anchor, spread_props({ name: "flower" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Flower, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Flower);

// node_modules/lucide-svelte/dist/icons/focus.svelte
mark_module_start();
Focus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/focus.svelte";
function Focus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Focus);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ],
    ["path", { "d": "M3 7V5a2 2 0 0 1 2-2h2" }],
    ["path", { "d": "M17 3h2a2 2 0 0 1 2 2v2" }],
    [
      "path",
      { "d": "M21 17v2a2 2 0 0 1-2 2h-2" }
    ],
    ["path", { "d": "M7 21H5a2 2 0 0 1-2-2v-2" }]
  ];
  Icon($$anchor, spread_props({ name: "focus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Focus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Focus);

// node_modules/lucide-svelte/dist/icons/fold-horizontal.svelte
mark_module_start();
Fold_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fold-horizontal.svelte";
function Fold_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fold_horizontal);
  const iconNode = [
    ["path", { "d": "M2 12h6" }],
    ["path", { "d": "M22 12h-6" }],
    ["path", { "d": "M12 2v2" }],
    ["path", { "d": "M12 8v2" }],
    ["path", { "d": "M12 14v2" }],
    ["path", { "d": "M12 20v2" }],
    ["path", { "d": "m19 9-3 3 3 3" }],
    ["path", { "d": "m5 15 3-3-3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "fold-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fold_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fold_horizontal);

// node_modules/lucide-svelte/dist/icons/fold-vertical.svelte
mark_module_start();
Fold_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fold-vertical.svelte";
function Fold_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fold_vertical);
  const iconNode = [
    ["path", { "d": "M12 22v-6" }],
    ["path", { "d": "M12 8V2" }],
    ["path", { "d": "M4 12H2" }],
    ["path", { "d": "M10 12H8" }],
    ["path", { "d": "M16 12h-2" }],
    ["path", { "d": "M22 12h-2" }],
    ["path", { "d": "m15 19-3-3-3 3" }],
    ["path", { "d": "m15 5-3 3-3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "fold-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fold_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fold_vertical);

// node_modules/lucide-svelte/dist/icons/folder-archive.svelte
mark_module_start();
Folder_archive[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-archive.svelte";
function Folder_archive($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_archive);
  const iconNode = [
    [
      "circle",
      { "cx": "15", "cy": "19", "r": "2" }
    ],
    [
      "path",
      {
        "d": "M20.9 19.8A2 2 0 0 0 22 18V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2h5.1"
      }
    ],
    ["path", { "d": "M15 11v-1" }],
    ["path", { "d": "M15 17v-2" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-archive" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_archive, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_archive);

// node_modules/lucide-svelte/dist/icons/folder-check.svelte
mark_module_start();
Folder_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-check.svelte";
function Folder_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_check);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
      }
    ],
    ["path", { "d": "m9 13 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_check);

// node_modules/lucide-svelte/dist/icons/folder-clock.svelte
mark_module_start();
Folder_clock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-clock.svelte";
function Folder_clock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_clock);
  const iconNode = [
    [
      "circle",
      { "cx": "16", "cy": "16", "r": "6" }
    ],
    [
      "path",
      {
        "d": "M7 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2"
      }
    ],
    ["path", { "d": "M16 14v2l1 1" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-clock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_clock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_clock);

// node_modules/lucide-svelte/dist/icons/folder-closed.svelte
mark_module_start();
Folder_closed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-closed.svelte";
function Folder_closed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_closed);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
      }
    ],
    ["path", { "d": "M2 10h20" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-closed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_closed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_closed);

// node_modules/lucide-svelte/dist/icons/folder-code.svelte
mark_module_start();
Folder_code[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-code.svelte";
function Folder_code($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_code);
  const iconNode = [
    ["path", { "d": "M10 10.5 8 13l2 2.5" }],
    ["path", { "d": "m14 10.5 2 2.5-2 2.5" }],
    [
      "path",
      {
        "d": "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-code" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_code, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_code);

// node_modules/lucide-svelte/dist/icons/folder-cog.svelte
mark_module_start();
Folder_cog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-cog.svelte";
function Folder_cog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_cog);
  const iconNode = [
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "3" }
    ],
    [
      "path",
      {
        "d": "M10.3 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v3.3"
      }
    ],
    ["path", { "d": "m21.7 19.4-.9-.3" }],
    ["path", { "d": "m15.2 16.9-.9-.3" }],
    ["path", { "d": "m16.6 21.7.3-.9" }],
    ["path", { "d": "m19.1 15.2.3-.9" }],
    ["path", { "d": "m19.6 21.7-.4-1" }],
    ["path", { "d": "m16.8 15.3-.4-1" }],
    ["path", { "d": "m14.3 19.6 1-.4" }],
    ["path", { "d": "m20.7 16.8 1-.4" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-cog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_cog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_cog);

// node_modules/lucide-svelte/dist/icons/folder-dot.svelte
mark_module_start();
Folder_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-dot.svelte";
function Folder_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_dot);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "13", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_dot);

// node_modules/lucide-svelte/dist/icons/folder-down.svelte
mark_module_start();
Folder_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-down.svelte";
function Folder_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_down);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
      }
    ],
    ["path", { "d": "M12 10v6" }],
    ["path", { "d": "m15 13-3 3-3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_down);

// node_modules/lucide-svelte/dist/icons/folder-git-2.svelte
mark_module_start();
Folder_git_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-git-2.svelte";
function Folder_git_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_git_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v5"
      }
    ],
    [
      "circle",
      { "cx": "13", "cy": "12", "r": "2" }
    ],
    [
      "path",
      { "d": "M18 19c-2.8 0-5-2.2-5-5v8" }
    ],
    [
      "circle",
      { "cx": "20", "cy": "19", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-git-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_git_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_git_2);

// node_modules/lucide-svelte/dist/icons/folder-git.svelte
mark_module_start();
Folder_git[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-git.svelte";
function Folder_git($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_git);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "13", "r": "2" }
    ],
    [
      "path",
      {
        "d": "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
      }
    ],
    ["path", { "d": "M14 13h3" }],
    ["path", { "d": "M7 13h3" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-git" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_git, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_git);

// node_modules/lucide-svelte/dist/icons/folder-heart.svelte
mark_module_start();
Folder_heart[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-heart.svelte";
function Folder_heart($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_heart);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v1.5"
      }
    ],
    [
      "path",
      {
        "d": "M13.9 17.45c-1.2-1.2-1.14-2.8-.2-3.73a2.43 2.43 0 0 1 3.44 0l.36.34.34-.34a2.43 2.43 0 0 1 3.45-.01c.95.95 1 2.53-.2 3.74L17.5 21Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-heart" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_heart, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_heart);

// node_modules/lucide-svelte/dist/icons/folder-input.svelte
mark_module_start();
Folder_input[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-input.svelte";
function Folder_input($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_input);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 9V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-1"
      }
    ],
    ["path", { "d": "M2 13h10" }],
    ["path", { "d": "m9 16 3-3-3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-input" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_input, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_input);

// node_modules/lucide-svelte/dist/icons/folder-kanban.svelte
mark_module_start();
Folder_kanban[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-kanban.svelte";
function Folder_kanban($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_kanban);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"
      }
    ],
    ["path", { "d": "M8 10v4" }],
    ["path", { "d": "M12 10v2" }],
    ["path", { "d": "M16 10v6" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-kanban" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_kanban, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_kanban);

// node_modules/lucide-svelte/dist/icons/folder-key.svelte
mark_module_start();
Folder_key[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-key.svelte";
function Folder_key($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_key);
  const iconNode = [
    [
      "circle",
      { "cx": "16", "cy": "20", "r": "2" }
    ],
    [
      "path",
      {
        "d": "M10 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v2"
      }
    ],
    ["path", { "d": "m22 14-4.5 4.5" }],
    ["path", { "d": "m21 15 1 1" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-key" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_key, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_key);

// node_modules/lucide-svelte/dist/icons/folder-lock.svelte
mark_module_start();
Folder_lock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-lock.svelte";
function Folder_lock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_lock);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "5",
        "x": "14",
        "y": "17",
        "rx": "1"
      }
    ],
    [
      "path",
      {
        "d": "M10 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v2.5"
      }
    ],
    [
      "path",
      { "d": "M20 17v-2a2 2 0 1 0-4 0v2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-lock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_lock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_lock);

// node_modules/lucide-svelte/dist/icons/folder-minus.svelte
mark_module_start();
Folder_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-minus.svelte";
function Folder_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_minus);
  const iconNode = [
    ["path", { "d": "M9 13h6" }],
    [
      "path",
      {
        "d": "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_minus);

// node_modules/lucide-svelte/dist/icons/folder-open-dot.svelte
mark_module_start();
Folder_open_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-open-dot.svelte";
function Folder_open_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_open_dot);
  const iconNode = [
    [
      "path",
      {
        "d": "m6 14 1.45-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.55 6a2 2 0 0 1-1.94 1.5H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H18a2 2 0 0 1 2 2v2"
      }
    ],
    [
      "circle",
      { "cx": "14", "cy": "15", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-open-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_open_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_open_dot);

// node_modules/lucide-svelte/dist/icons/folder-open.svelte
mark_module_start();
Folder_open[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-open.svelte";
function Folder_open($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_open);
  const iconNode = [
    [
      "path",
      {
        "d": "m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-open" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_open, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_open);

// node_modules/lucide-svelte/dist/icons/folder-output.svelte
mark_module_start();
Folder_output[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-output.svelte";
function Folder_output($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_output);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 7.5V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-1.5"
      }
    ],
    ["path", { "d": "M2 13h10" }],
    ["path", { "d": "m5 10-3 3 3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-output" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_output, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_output);

// node_modules/lucide-svelte/dist/icons/folder-pen.svelte
mark_module_start();
Folder_pen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-pen.svelte";
function Folder_pen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_pen);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 11.5V5a2 2 0 0 1 2-2h3.9c.7 0 1.3.3 1.7.9l.8 1.2c.4.6 1 .9 1.7.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5"
      }
    ],
    [
      "path",
      {
        "d": "M11.378 13.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-pen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_pen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_pen);

// node_modules/lucide-svelte/dist/icons/folder-plus.svelte
mark_module_start();
Folder_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-plus.svelte";
function Folder_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_plus);
  const iconNode = [
    ["path", { "d": "M12 10v6" }],
    ["path", { "d": "M9 13h6" }],
    [
      "path",
      {
        "d": "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_plus);

// node_modules/lucide-svelte/dist/icons/folder-root.svelte
mark_module_start();
Folder_root[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-root.svelte";
function Folder_root($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_root);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "13", "r": "2" }
    ],
    ["path", { "d": "M12 15v5" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-root" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_root, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_root);

// node_modules/lucide-svelte/dist/icons/folder-search-2.svelte
mark_module_start();
Folder_search_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-search-2.svelte";
function Folder_search_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_search_2);
  const iconNode = [
    [
      "circle",
      { "cx": "11.5", "cy": "12.5", "r": "2.5" }
    ],
    [
      "path",
      {
        "d": "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
      }
    ],
    ["path", { "d": "M13.3 14.3 15 16" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-search-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_search_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_search_2);

// node_modules/lucide-svelte/dist/icons/folder-search.svelte
mark_module_start();
Folder_search[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-search.svelte";
function Folder_search($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_search);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.7 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v4.1"
      }
    ],
    ["path", { "d": "m21 21-1.9-1.9" }],
    [
      "circle",
      { "cx": "17", "cy": "17", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-search" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_search, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_search);

// node_modules/lucide-svelte/dist/icons/folder-symlink.svelte
mark_module_start();
Folder_symlink[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-symlink.svelte";
function Folder_symlink($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_symlink);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 9V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h7"
      }
    ],
    ["path", { "d": "m8 16 3-3-3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-symlink" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_symlink, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_symlink);

// node_modules/lucide-svelte/dist/icons/folder-sync.svelte
mark_module_start();
Folder_sync[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-sync.svelte";
function Folder_sync($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_sync);
  const iconNode = [
    [
      "path",
      {
        "d": "M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v.5"
      }
    ],
    ["path", { "d": "M12 10v4h4" }],
    [
      "path",
      { "d": "m12 14 1.535-1.605a5 5 0 0 1 8 1.5" }
    ],
    ["path", { "d": "M22 22v-4h-4" }],
    [
      "path",
      { "d": "m22 18-1.535 1.605a5 5 0 0 1-8-1.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder-sync" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_sync, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_sync);

// node_modules/lucide-svelte/dist/icons/folder-tree.svelte
mark_module_start();
Folder_tree[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-tree.svelte";
function Folder_tree($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_tree);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 10a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1h-2.5a1 1 0 0 1-.8-.4l-.9-1.2A1 1 0 0 0 15 3h-2a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z"
      }
    ],
    [
      "path",
      {
        "d": "M20 21a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-2.9a1 1 0 0 1-.88-.55l-.42-.85a1 1 0 0 0-.92-.6H13a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z"
      }
    ],
    ["path", { "d": "M3 5a2 2 0 0 0 2 2h3" }],
    ["path", { "d": "M3 3v13a2 2 0 0 0 2 2h3" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-tree" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_tree, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_tree);

// node_modules/lucide-svelte/dist/icons/folder-up.svelte
mark_module_start();
Folder_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-up.svelte";
function Folder_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_up);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
      }
    ],
    ["path", { "d": "M12 10v6" }],
    ["path", { "d": "m9 13 3-3 3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_up);

// node_modules/lucide-svelte/dist/icons/folder-x.svelte
mark_module_start();
Folder_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder-x.svelte";
function Folder_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
      }
    ],
    ["path", { "d": "m9.5 10.5 5 5" }],
    ["path", { "d": "m14.5 10.5-5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "folder-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder_x);

// node_modules/lucide-svelte/dist/icons/folder.svelte
mark_module_start();
Folder[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folder.svelte";
function Folder($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folder);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "folder" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folder, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folder);

// node_modules/lucide-svelte/dist/icons/folders.svelte
mark_module_start();
Folders[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/folders.svelte";
function Folders($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Folders);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 17a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3.9a2 2 0 0 1-1.69-.9l-.81-1.2a2 2 0 0 0-1.67-.9H8a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2Z"
      }
    ],
    ["path", { "d": "M2 8v11a2 2 0 0 0 2 2h14" }]
  ];
  Icon($$anchor, spread_props({ name: "folders" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Folders, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Folders);

// node_modules/lucide-svelte/dist/icons/footprints.svelte
mark_module_start();
Footprints[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/footprints.svelte";
function Footprints($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Footprints);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 16v-2.38C4 11.5 2.97 10.5 3 8c.03-2.72 1.49-6 4.5-6C9.37 2 10 3.8 10 5.5c0 3.11-2 5.66-2 8.68V16a2 2 0 1 1-4 0Z"
      }
    ],
    [
      "path",
      {
        "d": "M20 20v-2.38c0-2.12 1.03-3.12 1-5.62-.03-2.72-1.49-6-4.5-6C14.63 6 14 7.8 14 9.5c0 3.11 2 5.66 2 8.68V20a2 2 0 1 0 4 0Z"
      }
    ],
    ["path", { "d": "M16 17h4" }],
    ["path", { "d": "M4 13h4" }]
  ];
  Icon($$anchor, spread_props({ name: "footprints" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Footprints, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Footprints);

// node_modules/lucide-svelte/dist/icons/forklift.svelte
mark_module_start();
Forklift[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/forklift.svelte";
function Forklift($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Forklift);
  const iconNode = [
    ["path", { "d": "M12 12H5a2 2 0 0 0-2 2v5" }],
    [
      "circle",
      { "cx": "13", "cy": "19", "r": "2" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "19", "r": "2" }
    ],
    [
      "path",
      {
        "d": "M8 19h3m5-17v17h6M6 12V7c0-1.1.9-2 2-2h3l5 5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "forklift" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Forklift, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Forklift);

// node_modules/lucide-svelte/dist/icons/forward.svelte
mark_module_start();
Forward[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/forward.svelte";
function Forward($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Forward);
  const iconNode = [
    [
      "polyline",
      { "points": "15 17 20 12 15 7" }
    ],
    [
      "path",
      { "d": "M4 18v-2a4 4 0 0 1 4-4h12" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "forward" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Forward, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Forward);

// node_modules/lucide-svelte/dist/icons/frame.svelte
mark_module_start();
Frame[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/frame.svelte";
function Frame($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Frame);
  const iconNode = [
    [
      "line",
      { "x1": "22", "x2": "2", "y1": "6", "y2": "6" }
    ],
    [
      "line",
      {
        "x1": "22",
        "x2": "2",
        "y1": "18",
        "y2": "18"
      }
    ],
    [
      "line",
      { "x1": "6", "x2": "6", "y1": "2", "y2": "22" }
    ],
    [
      "line",
      {
        "x1": "18",
        "x2": "18",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "frame" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Frame, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Frame);

// node_modules/lucide-svelte/dist/icons/framer.svelte
mark_module_start();
Framer[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/framer.svelte";
function Framer($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Framer);
  const iconNode = [
    [
      "path",
      {
        "d": "M5 16V9h14V2H5l14 14h-7m-7 0 7 7v-7m-7 0h7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "framer" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Framer, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Framer);

// node_modules/lucide-svelte/dist/icons/frown.svelte
mark_module_start();
Frown[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/frown.svelte";
function Frown($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Frown);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      { "d": "M16 16s-1.5-2-4-2-4 2-4 2" }
    ],
    [
      "line",
      {
        "x1": "9",
        "x2": "9.01",
        "y1": "9",
        "y2": "9"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "15.01",
        "y1": "9",
        "y2": "9"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "frown" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Frown, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Frown);

// node_modules/lucide-svelte/dist/icons/fuel.svelte
mark_module_start();
Fuel[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fuel.svelte";
function Fuel($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fuel);
  const iconNode = [
    [
      "line",
      {
        "x1": "3",
        "x2": "15",
        "y1": "22",
        "y2": "22"
      }
    ],
    [
      "line",
      { "x1": "4", "x2": "14", "y1": "9", "y2": "9" }
    ],
    [
      "path",
      {
        "d": "M14 22V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v18"
      }
    ],
    [
      "path",
      {
        "d": "M14 13h2a2 2 0 0 1 2 2v2a2 2 0 0 0 2 2a2 2 0 0 0 2-2V9.83a2 2 0 0 0-.59-1.42L18 5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "fuel" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fuel, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fuel);

// node_modules/lucide-svelte/dist/icons/fullscreen.svelte
mark_module_start();
Fullscreen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/fullscreen.svelte";
function Fullscreen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Fullscreen);
  const iconNode = [
    ["path", { "d": "M3 7V5a2 2 0 0 1 2-2h2" }],
    ["path", { "d": "M17 3h2a2 2 0 0 1 2 2v2" }],
    [
      "path",
      { "d": "M21 17v2a2 2 0 0 1-2 2h-2" }
    ],
    ["path", { "d": "M7 21H5a2 2 0 0 1-2-2v-2" }],
    [
      "rect",
      {
        "width": "10",
        "height": "8",
        "x": "7",
        "y": "8",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "fullscreen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Fullscreen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Fullscreen);

// node_modules/lucide-svelte/dist/icons/gallery-horizontal-end.svelte
mark_module_start();
Gallery_horizontal_end[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gallery-horizontal-end.svelte";
function Gallery_horizontal_end($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gallery_horizontal_end);
  const iconNode = [
    ["path", { "d": "M2 7v10" }],
    ["path", { "d": "M6 5v14" }],
    [
      "rect",
      {
        "width": "12",
        "height": "18",
        "x": "10",
        "y": "3",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "gallery-horizontal-end" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gallery_horizontal_end, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gallery_horizontal_end);

// node_modules/lucide-svelte/dist/icons/gallery-horizontal.svelte
mark_module_start();
Gallery_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gallery-horizontal.svelte";
function Gallery_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gallery_horizontal);
  const iconNode = [
    ["path", { "d": "M2 3v18" }],
    [
      "rect",
      {
        "width": "12",
        "height": "18",
        "x": "6",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M22 3v18" }]
  ];
  Icon($$anchor, spread_props({ name: "gallery-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gallery_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gallery_horizontal);

// node_modules/lucide-svelte/dist/icons/gallery-thumbnails.svelte
mark_module_start();
Gallery_thumbnails[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gallery-thumbnails.svelte";
function Gallery_thumbnails($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gallery_thumbnails);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "14",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M4 21h1" }],
    ["path", { "d": "M9 21h1" }],
    ["path", { "d": "M14 21h1" }],
    ["path", { "d": "M19 21h1" }]
  ];
  Icon($$anchor, spread_props({ name: "gallery-thumbnails" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gallery_thumbnails, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gallery_thumbnails);

// node_modules/lucide-svelte/dist/icons/gallery-vertical-end.svelte
mark_module_start();
Gallery_vertical_end[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gallery-vertical-end.svelte";
function Gallery_vertical_end($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gallery_vertical_end);
  const iconNode = [
    ["path", { "d": "M7 2h10" }],
    ["path", { "d": "M5 6h14" }],
    [
      "rect",
      {
        "width": "18",
        "height": "12",
        "x": "3",
        "y": "10",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "gallery-vertical-end" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gallery_vertical_end, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gallery_vertical_end);

// node_modules/lucide-svelte/dist/icons/gallery-vertical.svelte
mark_module_start();
Gallery_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gallery-vertical.svelte";
function Gallery_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gallery_vertical);
  const iconNode = [
    ["path", { "d": "M3 2h18" }],
    [
      "rect",
      {
        "width": "18",
        "height": "12",
        "x": "3",
        "y": "6",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 22h18" }]
  ];
  Icon($$anchor, spread_props({ name: "gallery-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gallery_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gallery_vertical);

// node_modules/lucide-svelte/dist/icons/gamepad-2.svelte
mark_module_start();
Gamepad_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gamepad-2.svelte";
function Gamepad_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gamepad_2);
  const iconNode = [
    [
      "line",
      {
        "x1": "6",
        "x2": "10",
        "y1": "11",
        "y2": "11"
      }
    ],
    [
      "line",
      { "x1": "8", "x2": "8", "y1": "9", "y2": "13" }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "15.01",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "18",
        "x2": "18.01",
        "y1": "10",
        "y2": "10"
      }
    ],
    [
      "path",
      {
        "d": "M17.32 5H6.68a4 4 0 0 0-3.978 3.59c-.006.052-.01.101-.017.152C2.604 9.416 2 14.456 2 16a3 3 0 0 0 3 3c1 0 1.5-.5 2-1l1.414-1.414A2 2 0 0 1 9.828 16h4.344a2 2 0 0 1 1.414.586L17 18c.5.5 1 1 2 1a3 3 0 0 0 3-3c0-1.545-.604-6.584-.685-7.258-.007-.05-.011-.1-.017-.151A4 4 0 0 0 17.32 5z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "gamepad-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gamepad_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gamepad_2);

// node_modules/lucide-svelte/dist/icons/gamepad.svelte
mark_module_start();
Gamepad[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gamepad.svelte";
function Gamepad($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gamepad);
  const iconNode = [
    [
      "line",
      {
        "x1": "6",
        "x2": "10",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "8",
        "y1": "10",
        "y2": "14"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "15.01",
        "y1": "13",
        "y2": "13"
      }
    ],
    [
      "line",
      {
        "x1": "18",
        "x2": "18.01",
        "y1": "11",
        "y2": "11"
      }
    ],
    [
      "rect",
      {
        "width": "20",
        "height": "12",
        "x": "2",
        "y": "6",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "gamepad" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gamepad, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gamepad);

// node_modules/lucide-svelte/dist/icons/gauge.svelte
mark_module_start();
Gauge[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gauge.svelte";
function Gauge($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gauge);
  const iconNode = [
    ["path", { "d": "m12 14 4-4" }],
    [
      "path",
      { "d": "M3.34 19a10 10 0 1 1 17.32 0" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "gauge" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gauge, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gauge);

// node_modules/lucide-svelte/dist/icons/gavel.svelte
mark_module_start();
Gavel[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gavel.svelte";
function Gavel($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gavel);
  const iconNode = [
    [
      "path",
      {
        "d": "m14.5 12.5-8 8a2.119 2.119 0 1 1-3-3l8-8"
      }
    ],
    ["path", { "d": "m16 16 6-6" }],
    ["path", { "d": "m8 8 6-6" }],
    ["path", { "d": "m9 7 8 8" }],
    ["path", { "d": "m21 11-8-8" }]
  ];
  Icon($$anchor, spread_props({ name: "gavel" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gavel, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gavel);

// node_modules/lucide-svelte/dist/icons/gem.svelte
mark_module_start();
Gem[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gem.svelte";
function Gem($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gem);
  const iconNode = [
    ["path", { "d": "M6 3h12l4 6-10 13L2 9Z" }],
    ["path", { "d": "M11 3 8 9l4 13 4-13-3-6" }],
    ["path", { "d": "M2 9h20" }]
  ];
  Icon($$anchor, spread_props({ name: "gem" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gem, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gem);

// node_modules/lucide-svelte/dist/icons/ghost.svelte
mark_module_start();
Ghost[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ghost.svelte";
function Ghost($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ghost);
  const iconNode = [
    ["path", { "d": "M9 10h.01" }],
    ["path", { "d": "M15 10h.01" }],
    [
      "path",
      {
        "d": "M12 2a8 8 0 0 0-8 8v12l3-3 2.5 2.5L12 19l2.5 2.5L17 19l3 3V10a8 8 0 0 0-8-8z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ghost" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ghost, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ghost);

// node_modules/lucide-svelte/dist/icons/gift.svelte
mark_module_start();
Gift[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gift.svelte";
function Gift($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gift);
  const iconNode = [
    [
      "rect",
      {
        "x": "3",
        "y": "8",
        "width": "18",
        "height": "4",
        "rx": "1"
      }
    ],
    ["path", { "d": "M12 8v13" }],
    [
      "path",
      {
        "d": "M19 12v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-7"
      }
    ],
    [
      "path",
      {
        "d": "M7.5 8a2.5 2.5 0 0 1 0-5A4.8 8 0 0 1 12 8a4.8 8 0 0 1 4.5-5 2.5 2.5 0 0 1 0 5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "gift" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gift, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gift);

// node_modules/lucide-svelte/dist/icons/git-branch-plus.svelte
mark_module_start();
Git_branch_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-branch-plus.svelte";
function Git_branch_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_branch_plus);
  const iconNode = [
    ["path", { "d": "M6 3v12" }],
    [
      "path",
      { "d": "M18 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" }
    ],
    [
      "path",
      { "d": "M6 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" }
    ],
    ["path", { "d": "M15 6a9 9 0 0 0-9 9" }],
    ["path", { "d": "M18 15v6" }],
    ["path", { "d": "M21 18h-6" }]
  ];
  Icon($$anchor, spread_props({ name: "git-branch-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_branch_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_branch_plus);

// node_modules/lucide-svelte/dist/icons/git-branch.svelte
mark_module_start();
Git_branch[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-branch.svelte";
function Git_branch($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_branch);
  const iconNode = [
    [
      "line",
      { "x1": "6", "x2": "6", "y1": "3", "y2": "15" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "6", "r": "3" }
    ],
    [
      "circle",
      { "cx": "6", "cy": "18", "r": "3" }
    ],
    ["path", { "d": "M18 9a9 9 0 0 1-9 9" }]
  ];
  Icon($$anchor, spread_props({ name: "git-branch" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_branch, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_branch);

// node_modules/lucide-svelte/dist/icons/git-commit-horizontal.svelte
mark_module_start();
Git_commit_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-commit-horizontal.svelte";
function Git_commit_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_commit_horizontal);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ],
    [
      "line",
      {
        "x1": "3",
        "x2": "9",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "21",
        "y1": "12",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "git-commit-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_commit_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_commit_horizontal);

// node_modules/lucide-svelte/dist/icons/git-commit-vertical.svelte
mark_module_start();
Git_commit_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-commit-vertical.svelte";
function Git_commit_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_commit_vertical);
  const iconNode = [
    ["path", { "d": "M12 3v6" }],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ],
    ["path", { "d": "M12 15v6" }]
  ];
  Icon($$anchor, spread_props({ name: "git-commit-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_commit_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_commit_vertical);

// node_modules/lucide-svelte/dist/icons/git-compare-arrows.svelte
mark_module_start();
Git_compare_arrows[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-compare-arrows.svelte";
function Git_compare_arrows($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_compare_arrows);
  const iconNode = [
    [
      "circle",
      { "cx": "5", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M12 6h5a2 2 0 0 1 2 2v7" }],
    ["path", { "d": "m15 9-3-3 3-3" }],
    [
      "circle",
      { "cx": "19", "cy": "18", "r": "3" }
    ],
    ["path", { "d": "M12 18H7a2 2 0 0 1-2-2V9" }],
    ["path", { "d": "m9 15 3 3-3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "git-compare-arrows" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_compare_arrows, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_compare_arrows);

// node_modules/lucide-svelte/dist/icons/git-compare.svelte
mark_module_start();
Git_compare[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-compare.svelte";
function Git_compare($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_compare);
  const iconNode = [
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "3" }
    ],
    [
      "circle",
      { "cx": "6", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M13 6h3a2 2 0 0 1 2 2v7" }],
    ["path", { "d": "M11 18H8a2 2 0 0 1-2-2V9" }]
  ];
  Icon($$anchor, spread_props({ name: "git-compare" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_compare, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_compare);

// node_modules/lucide-svelte/dist/icons/git-fork.svelte
mark_module_start();
Git_fork[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-fork.svelte";
function Git_fork($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_fork);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "18", "r": "3" }
    ],
    [
      "circle",
      { "cx": "6", "cy": "6", "r": "3" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "6", "r": "3" }
    ],
    [
      "path",
      {
        "d": "M18 9v2c0 .6-.4 1-1 1H7c-.6 0-1-.4-1-1V9"
      }
    ],
    ["path", { "d": "M12 12v3" }]
  ];
  Icon($$anchor, spread_props({ name: "git-fork" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_fork, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_fork);

// node_modules/lucide-svelte/dist/icons/git-graph.svelte
mark_module_start();
Git_graph[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-graph.svelte";
function Git_graph($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_graph);
  const iconNode = [
    [
      "circle",
      { "cx": "5", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M5 9v6" }],
    [
      "circle",
      { "cx": "5", "cy": "18", "r": "3" }
    ],
    ["path", { "d": "M12 3v18" }],
    [
      "circle",
      { "cx": "19", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M16 15.7A9 9 0 0 0 19 9" }]
  ];
  Icon($$anchor, spread_props({ name: "git-graph" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_graph, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_graph);

// node_modules/lucide-svelte/dist/icons/git-merge.svelte
mark_module_start();
Git_merge[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-merge.svelte";
function Git_merge($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_merge);
  const iconNode = [
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "3" }
    ],
    [
      "circle",
      { "cx": "6", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M6 21V9a9 9 0 0 0 9 9" }]
  ];
  Icon($$anchor, spread_props({ name: "git-merge" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_merge, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_merge);

// node_modules/lucide-svelte/dist/icons/git-pull-request-arrow.svelte
mark_module_start();
Git_pull_request_arrow[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-pull-request-arrow.svelte";
function Git_pull_request_arrow($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_pull_request_arrow);
  const iconNode = [
    [
      "circle",
      { "cx": "5", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M5 9v12" }],
    [
      "circle",
      { "cx": "19", "cy": "18", "r": "3" }
    ],
    ["path", { "d": "m15 9-3-3 3-3" }],
    ["path", { "d": "M12 6h5a2 2 0 0 1 2 2v7" }]
  ];
  Icon($$anchor, spread_props({ name: "git-pull-request-arrow" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_pull_request_arrow, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_pull_request_arrow);

// node_modules/lucide-svelte/dist/icons/git-pull-request-closed.svelte
mark_module_start();
Git_pull_request_closed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-pull-request-closed.svelte";
function Git_pull_request_closed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_pull_request_closed);
  const iconNode = [
    [
      "circle",
      { "cx": "6", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M6 9v12" }],
    ["path", { "d": "m21 3-6 6" }],
    ["path", { "d": "m21 9-6-6" }],
    ["path", { "d": "M18 11.5V15" }],
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "git-pull-request-closed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_pull_request_closed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_pull_request_closed);

// node_modules/lucide-svelte/dist/icons/git-pull-request-create-arrow.svelte
mark_module_start();
Git_pull_request_create_arrow[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-pull-request-create-arrow.svelte";
function Git_pull_request_create_arrow($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_pull_request_create_arrow);
  const iconNode = [
    [
      "circle",
      { "cx": "5", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M5 9v12" }],
    ["path", { "d": "m15 9-3-3 3-3" }],
    ["path", { "d": "M12 6h5a2 2 0 0 1 2 2v3" }],
    ["path", { "d": "M19 15v6" }],
    ["path", { "d": "M22 18h-6" }]
  ];
  Icon($$anchor, spread_props({ name: "git-pull-request-create-arrow" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_pull_request_create_arrow, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_pull_request_create_arrow);

// node_modules/lucide-svelte/dist/icons/git-pull-request-create.svelte
mark_module_start();
Git_pull_request_create[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-pull-request-create.svelte";
function Git_pull_request_create($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_pull_request_create);
  const iconNode = [
    [
      "circle",
      { "cx": "6", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M6 9v12" }],
    ["path", { "d": "M13 6h3a2 2 0 0 1 2 2v3" }],
    ["path", { "d": "M18 15v6" }],
    ["path", { "d": "M21 18h-6" }]
  ];
  Icon($$anchor, spread_props({ name: "git-pull-request-create" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_pull_request_create, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_pull_request_create);

// node_modules/lucide-svelte/dist/icons/git-pull-request-draft.svelte
mark_module_start();
Git_pull_request_draft[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-pull-request-draft.svelte";
function Git_pull_request_draft($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_pull_request_draft);
  const iconNode = [
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "3" }
    ],
    [
      "circle",
      { "cx": "6", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M18 6V5" }],
    ["path", { "d": "M18 11v-1" }],
    [
      "line",
      { "x1": "6", "x2": "6", "y1": "9", "y2": "21" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "git-pull-request-draft" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_pull_request_draft, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_pull_request_draft);

// node_modules/lucide-svelte/dist/icons/git-pull-request.svelte
mark_module_start();
Git_pull_request[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/git-pull-request.svelte";
function Git_pull_request($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Git_pull_request);
  const iconNode = [
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "3" }
    ],
    [
      "circle",
      { "cx": "6", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M13 6h3a2 2 0 0 1 2 2v7" }],
    [
      "line",
      { "x1": "6", "x2": "6", "y1": "9", "y2": "21" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "git-pull-request" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Git_pull_request, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Git_pull_request);

// node_modules/lucide-svelte/dist/icons/github.svelte
mark_module_start();
Github[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/github.svelte";
function Github($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Github);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"
      }
    ],
    ["path", { "d": "M9 18c-4.51 2-5-2-7-2" }]
  ];
  Icon($$anchor, spread_props({ name: "github" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Github, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Github);

// node_modules/lucide-svelte/dist/icons/gitlab.svelte
mark_module_start();
Gitlab[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/gitlab.svelte";
function Gitlab($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Gitlab);
  const iconNode = [
    [
      "path",
      {
        "d": "m22 13.29-3.33-10a.42.42 0 0 0-.14-.18.38.38 0 0 0-.22-.11.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18l-2.26 6.67H8.32L6.1 3.26a.42.42 0 0 0-.1-.18.38.38 0 0 0-.26-.08.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18L2 13.29a.74.74 0 0 0 .27.83L12 21l9.69-6.88a.71.71 0 0 0 .31-.83Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "gitlab" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Gitlab, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Gitlab);

// node_modules/lucide-svelte/dist/icons/glass-water.svelte
mark_module_start();
Glass_water[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/glass-water.svelte";
function Glass_water($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Glass_water);
  const iconNode = [
    [
      "path",
      {
        "d": "M5.116 4.104A1 1 0 0 1 6.11 3h11.78a1 1 0 0 1 .994 1.105L17.19 20.21A2 2 0 0 1 15.2 22H8.8a2 2 0 0 1-2-1.79z"
      }
    ],
    [
      "path",
      { "d": "M6 12a5 5 0 0 1 6 0 5 5 0 0 0 6 0" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "glass-water" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Glass_water, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Glass_water);

// node_modules/lucide-svelte/dist/icons/glasses.svelte
mark_module_start();
Glasses[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/glasses.svelte";
function Glasses($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Glasses);
  const iconNode = [
    [
      "circle",
      { "cx": "6", "cy": "15", "r": "4" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "15", "r": "4" }
    ],
    [
      "path",
      { "d": "M14 15a2 2 0 0 0-2-2 2 2 0 0 0-2 2" }
    ],
    [
      "path",
      { "d": "M2.5 13 5 7c.7-1.3 1.4-2 3-2" }
    ],
    [
      "path",
      { "d": "M21.5 13 19 7c-.7-1.3-1.5-2-3-2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "glasses" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Glasses, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Glasses);

// node_modules/lucide-svelte/dist/icons/globe-lock.svelte
mark_module_start();
Globe_lock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/globe-lock.svelte";
function Globe_lock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Globe_lock);
  const iconNode = [
    [
      "path",
      {
        "d": "M15.686 15A14.5 14.5 0 0 1 12 22a14.5 14.5 0 0 1 0-20 10 10 0 1 0 9.542 13"
      }
    ],
    ["path", { "d": "M2 12h8.5" }],
    ["path", { "d": "M20 6V4a2 2 0 1 0-4 0v2" }],
    [
      "rect",
      {
        "width": "8",
        "height": "5",
        "x": "14",
        "y": "6",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "globe-lock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Globe_lock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Globe_lock);

// node_modules/lucide-svelte/dist/icons/globe.svelte
mark_module_start();
Globe[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/globe.svelte";
function Globe($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Globe);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      {
        "d": "M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"
      }
    ],
    ["path", { "d": "M2 12h20" }]
  ];
  Icon($$anchor, spread_props({ name: "globe" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Globe, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Globe);

// node_modules/lucide-svelte/dist/icons/goal.svelte
mark_module_start();
Goal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/goal.svelte";
function Goal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Goal);
  const iconNode = [
    ["path", { "d": "M12 13V2l8 4-8 4" }],
    [
      "path",
      { "d": "M20.561 10.222a9 9 0 1 1-12.55-5.29" }
    ],
    [
      "path",
      { "d": "M8.002 9.997a5 5 0 1 0 8.9 2.02" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "goal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Goal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Goal);

// node_modules/lucide-svelte/dist/icons/grab.svelte
mark_module_start();
Grab[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/grab.svelte";
function Grab($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Grab);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 11.5V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1.4"
      }
    ],
    [
      "path",
      { "d": "M14 10V8a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2" }
    ],
    [
      "path",
      { "d": "M10 9.9V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v5" }
    ],
    [
      "path",
      { "d": "M6 14a2 2 0 0 0-2-2a2 2 0 0 0-2 2" }
    ],
    [
      "path",
      {
        "d": "M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-4a8 8 0 0 1-8-8 2 2 0 1 1 4 0"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "grab" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Grab, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Grab);

// node_modules/lucide-svelte/dist/icons/graduation-cap.svelte
mark_module_start();
Graduation_cap[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/graduation-cap.svelte";
function Graduation_cap($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Graduation_cap);
  const iconNode = [
    [
      "path",
      {
        "d": "M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0z"
      }
    ],
    ["path", { "d": "M22 10v6" }],
    [
      "path",
      { "d": "M6 12.5V16a6 3 0 0 0 12 0v-3.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "graduation-cap" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Graduation_cap, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Graduation_cap);

// node_modules/lucide-svelte/dist/icons/grape.svelte
mark_module_start();
Grape[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/grape.svelte";
function Grape($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Grape);
  const iconNode = [
    ["path", { "d": "M22 5V2l-5.89 5.89" }],
    [
      "circle",
      { "cx": "16.6", "cy": "15.89", "r": "3" }
    ],
    [
      "circle",
      { "cx": "8.11", "cy": "7.4", "r": "3" }
    ],
    [
      "circle",
      { "cx": "12.35", "cy": "11.65", "r": "3" }
    ],
    [
      "circle",
      { "cx": "13.91", "cy": "5.85", "r": "3" }
    ],
    [
      "circle",
      { "cx": "18.15", "cy": "10.09", "r": "3" }
    ],
    [
      "circle",
      { "cx": "6.56", "cy": "13.2", "r": "3" }
    ],
    [
      "circle",
      { "cx": "10.8", "cy": "17.44", "r": "3" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "19", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "grape" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Grape, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Grape);

// node_modules/lucide-svelte/dist/icons/grid-2x2-check.svelte
mark_module_start();
Grid_2x2_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/grid-2x2-check.svelte";
function Grid_2x2_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Grid_2x2_check);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3"
      }
    ],
    ["path", { "d": "m16 19 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "grid-2x2-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Grid_2x2_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Grid_2x2_check);

// node_modules/lucide-svelte/dist/icons/grid-2x2-plus.svelte
mark_module_start();
Grid_2x2_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/grid-2x2-plus.svelte";
function Grid_2x2_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Grid_2x2_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3"
      }
    ],
    ["path", { "d": "M16 19h6" }],
    ["path", { "d": "M19 22v-6" }]
  ];
  Icon($$anchor, spread_props({ name: "grid-2x2-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Grid_2x2_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Grid_2x2_plus);

// node_modules/lucide-svelte/dist/icons/grid-2x2-x.svelte
mark_module_start();
Grid_2x2_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/grid-2x2-x.svelte";
function Grid_2x2_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Grid_2x2_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3"
      }
    ],
    ["path", { "d": "m16 16 5 5" }],
    ["path", { "d": "m16 21 5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "grid-2x2-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Grid_2x2_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Grid_2x2_x);

// node_modules/lucide-svelte/dist/icons/grid-2x2.svelte
mark_module_start();
Grid_2x2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/grid-2x2.svelte";
function Grid_2x2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Grid_2x2);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 12h18" }],
    ["path", { "d": "M12 3v18" }]
  ];
  Icon($$anchor, spread_props({ name: "grid-2x2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Grid_2x2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Grid_2x2);

// node_modules/lucide-svelte/dist/icons/grid-3x3.svelte
mark_module_start();
Grid_3x3[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/grid-3x3.svelte";
function Grid_3x3($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Grid_3x3);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 9h18" }],
    ["path", { "d": "M3 15h18" }],
    ["path", { "d": "M9 3v18" }],
    ["path", { "d": "M15 3v18" }]
  ];
  Icon($$anchor, spread_props({ name: "grid-3x3" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Grid_3x3, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Grid_3x3);

// node_modules/lucide-svelte/dist/icons/grip-horizontal.svelte
mark_module_start();
Grip_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/grip-horizontal.svelte";
function Grip_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Grip_horizontal);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "9", "r": "1" }
    ],
    [
      "circle",
      { "cx": "19", "cy": "9", "r": "1" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "9", "r": "1" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "15", "r": "1" }
    ],
    [
      "circle",
      { "cx": "19", "cy": "15", "r": "1" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "15", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "grip-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Grip_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Grip_horizontal);

// node_modules/lucide-svelte/dist/icons/grip-vertical.svelte
mark_module_start();
Grip_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/grip-vertical.svelte";
function Grip_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Grip_vertical);
  const iconNode = [
    [
      "circle",
      { "cx": "9", "cy": "12", "r": "1" }
    ],
    [
      "circle",
      { "cx": "9", "cy": "5", "r": "1" }
    ],
    [
      "circle",
      { "cx": "9", "cy": "19", "r": "1" }
    ],
    [
      "circle",
      { "cx": "15", "cy": "12", "r": "1" }
    ],
    [
      "circle",
      { "cx": "15", "cy": "5", "r": "1" }
    ],
    [
      "circle",
      { "cx": "15", "cy": "19", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "grip-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Grip_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Grip_vertical);

// node_modules/lucide-svelte/dist/icons/grip.svelte
mark_module_start();
Grip[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/grip.svelte";
function Grip($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Grip);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "5", "r": "1" }
    ],
    [
      "circle",
      { "cx": "19", "cy": "5", "r": "1" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "5", "r": "1" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "1" }
    ],
    [
      "circle",
      { "cx": "19", "cy": "12", "r": "1" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "12", "r": "1" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "19", "r": "1" }
    ],
    [
      "circle",
      { "cx": "19", "cy": "19", "r": "1" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "19", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "grip" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Grip, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Grip);

// node_modules/lucide-svelte/dist/icons/group.svelte
mark_module_start();
Group[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/group.svelte";
function Group($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Group);
  const iconNode = [
    ["path", { "d": "M3 7V5c0-1.1.9-2 2-2h2" }],
    ["path", { "d": "M17 3h2c1.1 0 2 .9 2 2v2" }],
    [
      "path",
      { "d": "M21 17v2c0 1.1-.9 2-2 2h-2" }
    ],
    [
      "path",
      { "d": "M7 21H5c-1.1 0-2-.9-2-2v-2" }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "5",
        "x": "7",
        "y": "7",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "5",
        "x": "10",
        "y": "12",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "group" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Group, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Group);

// node_modules/lucide-svelte/dist/icons/guitar.svelte
mark_module_start();
Guitar[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/guitar.svelte";
function Guitar($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Guitar);
  const iconNode = [
    ["path", { "d": "m11.9 12.1 4.514-4.514" }],
    [
      "path",
      {
        "d": "M20.1 2.3a1 1 0 0 0-1.4 0l-1.114 1.114A2 2 0 0 0 17 4.828v1.344a2 2 0 0 1-.586 1.414A2 2 0 0 1 17.828 7h1.344a2 2 0 0 0 1.414-.586L21.7 5.3a1 1 0 0 0 0-1.4z"
      }
    ],
    ["path", { "d": "m6 16 2 2" }],
    [
      "path",
      {
        "d": "M8.2 9.9C8.7 8.8 9.8 8 11 8c2.8 0 5 2.2 5 5 0 1.2-.8 2.3-1.9 2.8l-.9.4A2 2 0 0 0 12 18a4 4 0 0 1-4 4c-3.3 0-6-2.7-6-6a4 4 0 0 1 4-4 2 2 0 0 0 1.8-1.2z"
      }
    ],
    [
      "circle",
      {
        "cx": "11.5",
        "cy": "12.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "guitar" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Guitar, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Guitar);

// node_modules/lucide-svelte/dist/icons/ham.svelte
mark_module_start();
Ham[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ham.svelte";
function Ham($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ham);
  const iconNode = [
    [
      "path",
      {
        "d": "M13.144 21.144A7.274 10.445 45 1 0 2.856 10.856"
      }
    ],
    [
      "path",
      {
        "d": "M13.144 21.144A7.274 4.365 45 0 0 2.856 10.856a7.274 4.365 45 0 0 10.288 10.288"
      }
    ],
    [
      "path",
      {
        "d": "M16.565 10.435 18.6 8.4a2.501 2.501 0 1 0 1.65-4.65 2.5 2.5 0 1 0-4.66 1.66l-2.024 2.025"
      }
    ],
    ["path", { "d": "m8.5 16.5-1-1" }]
  ];
  Icon($$anchor, spread_props({ name: "ham" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ham, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ham);

// node_modules/lucide-svelte/dist/icons/hammer.svelte
mark_module_start();
Hammer[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hammer.svelte";
function Hammer($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hammer);
  const iconNode = [
    [
      "path",
      { "d": "m15 12-8.373 8.373a1 1 0 1 1-3-3L12 9" }
    ],
    ["path", { "d": "m18 15 4-4" }],
    [
      "path",
      {
        "d": "m21.5 11.5-1.914-1.914A2 2 0 0 1 19 8.172V7l-2.26-2.26a6 6 0 0 0-4.202-1.756L9 2.96l.92.82A6.18 6.18 0 0 1 12 8.4V10l2 2h1.172a2 2 0 0 1 1.414.586L18.5 14.5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hammer" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hammer, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hammer);

// node_modules/lucide-svelte/dist/icons/hand-coins.svelte
mark_module_start();
Hand_coins[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hand-coins.svelte";
function Hand_coins($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hand_coins);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 15h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 17"
      }
    ],
    [
      "path",
      {
        "d": "m7 21 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9"
      }
    ],
    ["path", { "d": "m2 16 6 6" }],
    [
      "circle",
      { "cx": "16", "cy": "9", "r": "2.9" }
    ],
    [
      "circle",
      { "cx": "6", "cy": "5", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hand-coins" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hand_coins, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hand_coins);

// node_modules/lucide-svelte/dist/icons/hand-heart.svelte
mark_module_start();
Hand_heart[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hand-heart.svelte";
function Hand_heart($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hand_heart);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 14h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 16"
      }
    ],
    [
      "path",
      {
        "d": "m7 20 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9"
      }
    ],
    ["path", { "d": "m2 15 6 6" }],
    [
      "path",
      {
        "d": "M19.5 8.5c.7-.7 1.5-1.6 1.5-2.7A2.73 2.73 0 0 0 16 4a2.78 2.78 0 0 0-5 1.8c0 1.2.8 2 1.5 2.8L16 12Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hand-heart" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hand_heart, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hand_heart);

// node_modules/lucide-svelte/dist/icons/hand-helping.svelte
mark_module_start();
Hand_helping[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hand-helping.svelte";
function Hand_helping($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hand_helping);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 12h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 14"
      }
    ],
    [
      "path",
      {
        "d": "m7 18 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9"
      }
    ],
    ["path", { "d": "m2 13 6 6" }]
  ];
  Icon($$anchor, spread_props({ name: "hand-helping" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hand_helping, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hand_helping);

// node_modules/lucide-svelte/dist/icons/hand-metal.svelte
mark_module_start();
Hand_metal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hand-metal.svelte";
function Hand_metal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hand_metal);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 12.5V10a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1.4"
      }
    ],
    ["path", { "d": "M14 11V9a2 2 0 1 0-4 0v2" }],
    [
      "path",
      { "d": "M10 10.5V5a2 2 0 1 0-4 0v9" }
    ],
    [
      "path",
      {
        "d": "m7 15-1.76-1.76a2 2 0 0 0-2.83 2.82l3.6 3.6C7.5 21.14 9.2 22 12 22h2a8 8 0 0 0 8-8V7a2 2 0 1 0-4 0v5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hand-metal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hand_metal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hand_metal);

// node_modules/lucide-svelte/dist/icons/hand-platter.svelte
mark_module_start();
Hand_platter[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hand-platter.svelte";
function Hand_platter($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hand_platter);
  const iconNode = [
    ["path", { "d": "M12 3V2" }],
    ["path", { "d": "M5 10a7.1 7.1 0 0 1 14 0" }],
    ["path", { "d": "M4 10h16" }],
    [
      "path",
      { "d": "M2 14h12a2 2 0 1 1 0 4h-2" }
    ],
    [
      "path",
      {
        "d": "m15.4 17.4 3.2-2.8a2 2 0 0 1 2.8 2.9l-3.6 3.3c-.7.8-1.7 1.2-2.8 1.2h-4c-1.1 0-2.1-.4-2.8-1.2L5 18"
      }
    ],
    ["path", { "d": "M5 14v7H2" }]
  ];
  Icon($$anchor, spread_props({ name: "hand-platter" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hand_platter, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hand_platter);

// node_modules/lucide-svelte/dist/icons/hand.svelte
mark_module_start();
Hand[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hand.svelte";
function Hand($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hand);
  const iconNode = [
    [
      "path",
      { "d": "M18 11V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2" }
    ],
    [
      "path",
      { "d": "M14 10V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2" }
    ],
    [
      "path",
      {
        "d": "M10 10.5V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2v8"
      }
    ],
    [
      "path",
      {
        "d": "M18 8a2 2 0 1 1 4 0v6a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hand" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hand, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hand);

// node_modules/lucide-svelte/dist/icons/handshake.svelte
mark_module_start();
Handshake[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/handshake.svelte";
function Handshake($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Handshake);
  const iconNode = [
    ["path", { "d": "m11 17 2 2a1 1 0 1 0 3-3" }],
    [
      "path",
      {
        "d": "m14 14 2.5 2.5a1 1 0 1 0 3-3l-3.88-3.88a3 3 0 0 0-4.24 0l-.88.88a1 1 0 1 1-3-3l2.81-2.81a5.79 5.79 0 0 1 7.06-.87l.47.28a2 2 0 0 0 1.42.25L21 4"
      }
    ],
    ["path", { "d": "m21 3 1 11h-2" }],
    [
      "path",
      { "d": "M3 3 2 14l6.5 6.5a1 1 0 1 0 3-3" }
    ],
    ["path", { "d": "M3 4h8" }]
  ];
  Icon($$anchor, spread_props({ name: "handshake" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Handshake, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Handshake);

// node_modules/lucide-svelte/dist/icons/hard-drive-download.svelte
mark_module_start();
Hard_drive_download[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hard-drive-download.svelte";
function Hard_drive_download($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hard_drive_download);
  const iconNode = [
    ["path", { "d": "M12 2v8" }],
    ["path", { "d": "m16 6-4 4-4-4" }],
    [
      "rect",
      {
        "width": "20",
        "height": "8",
        "x": "2",
        "y": "14",
        "rx": "2"
      }
    ],
    ["path", { "d": "M6 18h.01" }],
    ["path", { "d": "M10 18h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "hard-drive-download" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hard_drive_download, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hard_drive_download);

// node_modules/lucide-svelte/dist/icons/hard-drive-upload.svelte
mark_module_start();
Hard_drive_upload[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hard-drive-upload.svelte";
function Hard_drive_upload($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hard_drive_upload);
  const iconNode = [
    ["path", { "d": "m16 6-4-4-4 4" }],
    ["path", { "d": "M12 2v8" }],
    [
      "rect",
      {
        "width": "20",
        "height": "8",
        "x": "2",
        "y": "14",
        "rx": "2"
      }
    ],
    ["path", { "d": "M6 18h.01" }],
    ["path", { "d": "M10 18h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "hard-drive-upload" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hard_drive_upload, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hard_drive_upload);

// node_modules/lucide-svelte/dist/icons/hard-drive.svelte
mark_module_start();
Hard_drive[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hard-drive.svelte";
function Hard_drive($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hard_drive);
  const iconNode = [
    [
      "line",
      {
        "x1": "22",
        "x2": "2",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "path",
      {
        "d": "M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"
      }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "6.01",
        "y1": "16",
        "y2": "16"
      }
    ],
    [
      "line",
      {
        "x1": "10",
        "x2": "10.01",
        "y1": "16",
        "y2": "16"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hard-drive" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hard_drive, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hard_drive);

// node_modules/lucide-svelte/dist/icons/hard-hat.svelte
mark_module_start();
Hard_hat[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hard-hat.svelte";
function Hard_hat($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hard_hat);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 18a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v2z"
      }
    ],
    [
      "path",
      {
        "d": "M10 10V5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v5"
      }
    ],
    ["path", { "d": "M4 15v-3a6 6 0 0 1 6-6" }],
    ["path", { "d": "M14 6a6 6 0 0 1 6 6v3" }]
  ];
  Icon($$anchor, spread_props({ name: "hard-hat" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hard_hat, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hard_hat);

// node_modules/lucide-svelte/dist/icons/hash.svelte
mark_module_start();
Hash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hash.svelte";
function Hash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hash);
  const iconNode = [
    [
      "line",
      { "x1": "4", "x2": "20", "y1": "9", "y2": "9" }
    ],
    [
      "line",
      {
        "x1": "4",
        "x2": "20",
        "y1": "15",
        "y2": "15"
      }
    ],
    [
      "line",
      {
        "x1": "10",
        "x2": "8",
        "y1": "3",
        "y2": "21"
      }
    ],
    [
      "line",
      {
        "x1": "16",
        "x2": "14",
        "y1": "3",
        "y2": "21"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hash);

// node_modules/lucide-svelte/dist/icons/haze.svelte
mark_module_start();
Haze[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/haze.svelte";
function Haze($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Haze);
  const iconNode = [
    ["path", { "d": "m5.2 6.2 1.4 1.4" }],
    ["path", { "d": "M2 13h2" }],
    ["path", { "d": "M20 13h2" }],
    ["path", { "d": "m17.4 7.6 1.4-1.4" }],
    ["path", { "d": "M22 17H2" }],
    ["path", { "d": "M22 21H2" }],
    ["path", { "d": "M16 13a4 4 0 0 0-8 0" }],
    ["path", { "d": "M12 5V2.5" }]
  ];
  Icon($$anchor, spread_props({ name: "haze" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Haze, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Haze);

// node_modules/lucide-svelte/dist/icons/hdmi-port.svelte
mark_module_start();
Hdmi_port[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hdmi-port.svelte";
function Hdmi_port($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hdmi_port);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 9a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h1l2 2h12l2-2h1a1 1 0 0 0 1-1Z"
      }
    ],
    ["path", { "d": "M7.5 12h9" }]
  ];
  Icon($$anchor, spread_props({ name: "hdmi-port" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hdmi_port, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hdmi_port);

// node_modules/lucide-svelte/dist/icons/heading-1.svelte
mark_module_start();
Heading_1[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heading-1.svelte";
function Heading_1($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heading_1);
  const iconNode = [
    ["path", { "d": "M4 12h8" }],
    ["path", { "d": "M4 18V6" }],
    ["path", { "d": "M12 18V6" }],
    ["path", { "d": "m17 12 3-2v8" }]
  ];
  Icon($$anchor, spread_props({ name: "heading-1" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heading_1, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heading_1);

// node_modules/lucide-svelte/dist/icons/heading-2.svelte
mark_module_start();
Heading_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heading-2.svelte";
function Heading_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heading_2);
  const iconNode = [
    ["path", { "d": "M4 12h8" }],
    ["path", { "d": "M4 18V6" }],
    ["path", { "d": "M12 18V6" }],
    [
      "path",
      { "d": "M21 18h-4c0-4 4-3 4-6 0-1.5-2-2.5-4-1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "heading-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heading_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heading_2);

// node_modules/lucide-svelte/dist/icons/heading-3.svelte
mark_module_start();
Heading_3[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heading-3.svelte";
function Heading_3($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heading_3);
  const iconNode = [
    ["path", { "d": "M4 12h8" }],
    ["path", { "d": "M4 18V6" }],
    ["path", { "d": "M12 18V6" }],
    [
      "path",
      {
        "d": "M17.5 10.5c1.7-1 3.5 0 3.5 1.5a2 2 0 0 1-2 2"
      }
    ],
    [
      "path",
      { "d": "M17 17.5c2 1.5 4 .3 4-1.5a2 2 0 0 0-2-2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "heading-3" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heading_3, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heading_3);

// node_modules/lucide-svelte/dist/icons/heading-4.svelte
mark_module_start();
Heading_4[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heading-4.svelte";
function Heading_4($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heading_4);
  const iconNode = [
    ["path", { "d": "M4 12h8" }],
    ["path", { "d": "M4 18V6" }],
    ["path", { "d": "M12 18V6" }],
    ["path", { "d": "M17 10v4h4" }],
    ["path", { "d": "M21 10v8" }]
  ];
  Icon($$anchor, spread_props({ name: "heading-4" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heading_4, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heading_4);

// node_modules/lucide-svelte/dist/icons/heading-5.svelte
mark_module_start();
Heading_5[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heading-5.svelte";
function Heading_5($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heading_5);
  const iconNode = [
    ["path", { "d": "M4 12h8" }],
    ["path", { "d": "M4 18V6" }],
    ["path", { "d": "M12 18V6" }],
    ["path", { "d": "M17 13v-3h4" }],
    [
      "path",
      {
        "d": "M17 17.7c.4.2.8.3 1.3.3 1.5 0 2.7-1.1 2.7-2.5S19.8 13 18.3 13H17"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "heading-5" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heading_5, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heading_5);

// node_modules/lucide-svelte/dist/icons/heading-6.svelte
mark_module_start();
Heading_6[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heading-6.svelte";
function Heading_6($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heading_6);
  const iconNode = [
    ["path", { "d": "M4 12h8" }],
    ["path", { "d": "M4 18V6" }],
    ["path", { "d": "M12 18V6" }],
    [
      "circle",
      { "cx": "19", "cy": "16", "r": "2" }
    ],
    ["path", { "d": "M20 10c-2 2-3 3.5-3 6" }]
  ];
  Icon($$anchor, spread_props({ name: "heading-6" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heading_6, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heading_6);

// node_modules/lucide-svelte/dist/icons/heading.svelte
mark_module_start();
Heading[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heading.svelte";
function Heading($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heading);
  const iconNode = [
    ["path", { "d": "M6 12h12" }],
    ["path", { "d": "M6 20V4" }],
    ["path", { "d": "M18 20V4" }]
  ];
  Icon($$anchor, spread_props({ name: "heading" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heading, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heading);

// node_modules/lucide-svelte/dist/icons/headphone-off.svelte
mark_module_start();
Headphone_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/headphone-off.svelte";
function Headphone_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Headphone_off);
  const iconNode = [
    ["path", { "d": "M21 14h-1.343" }],
    [
      "path",
      { "d": "M9.128 3.47A9 9 0 0 1 21 12v3.343" }
    ],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      {
        "d": "M20.414 20.414A2 2 0 0 1 19 21h-1a2 2 0 0 1-2-2v-3"
      }
    ],
    [
      "path",
      {
        "d": "M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 2.636-6.364"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "headphone-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Headphone_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Headphone_off);

// node_modules/lucide-svelte/dist/icons/headphones.svelte
mark_module_start();
Headphones[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/headphones.svelte";
function Headphones($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Headphones);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 18 0v7a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "headphones" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Headphones, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Headphones);

// node_modules/lucide-svelte/dist/icons/headset.svelte
mark_module_start();
Headset[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/headset.svelte";
function Headset($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Headset);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 11h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-5Zm0 0a9 9 0 1 1 18 0m0 0v5a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3Z"
      }
    ],
    [
      "path",
      { "d": "M21 16v2a4 4 0 0 1-4 4h-5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "headset" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Headset, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Headset);

// node_modules/lucide-svelte/dist/icons/heart-crack.svelte
mark_module_start();
Heart_crack[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heart-crack.svelte";
function Heart_crack($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heart_crack);
  const iconNode = [
    [
      "path",
      {
        "d": "M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z"
      }
    ],
    ["path", { "d": "m12 13-1-1 2-2-3-3 2-2" }]
  ];
  Icon($$anchor, spread_props({ name: "heart-crack" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heart_crack, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heart_crack);

// node_modules/lucide-svelte/dist/icons/heart-handshake.svelte
mark_module_start();
Heart_handshake[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heart-handshake.svelte";
function Heart_handshake($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heart_handshake);
  const iconNode = [
    [
      "path",
      {
        "d": "M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z"
      }
    ],
    [
      "path",
      {
        "d": "M12 5 9.04 7.96a2.17 2.17 0 0 0 0 3.08c.82.82 2.13.85 3 .07l2.07-1.9a2.82 2.82 0 0 1 3.79 0l2.96 2.66"
      }
    ],
    ["path", { "d": "m18 15-2-2" }],
    ["path", { "d": "m15 18-2-2" }]
  ];
  Icon($$anchor, spread_props({ name: "heart-handshake" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heart_handshake, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heart_handshake);

// node_modules/lucide-svelte/dist/icons/heart-off.svelte
mark_module_start();
Heart_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heart-off.svelte";
function Heart_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heart_off);
  const iconNode = [
    [
      "line",
      {
        "x1": "2",
        "y1": "2",
        "x2": "22",
        "y2": "22"
      }
    ],
    [
      "path",
      {
        "d": "M16.5 16.5 12 21l-7-7c-1.5-1.45-3-3.2-3-5.5a5.5 5.5 0 0 1 2.14-4.35"
      }
    ],
    [
      "path",
      {
        "d": "M8.76 3.1c1.15.22 2.13.78 3.24 1.9 1.5-1.5 2.74-2 4.5-2A5.5 5.5 0 0 1 22 8.5c0 2.12-1.3 3.78-2.67 5.17"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "heart-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heart_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heart_off);

// node_modules/lucide-svelte/dist/icons/heart-pulse.svelte
mark_module_start();
Heart_pulse[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heart-pulse.svelte";
function Heart_pulse($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heart_pulse);
  const iconNode = [
    [
      "path",
      {
        "d": "M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z"
      }
    ],
    [
      "path",
      {
        "d": "M3.22 12H9.5l.5-1 2 4.5 2-7 1.5 3.5h5.27"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "heart-pulse" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heart_pulse, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heart_pulse);

// node_modules/lucide-svelte/dist/icons/heart.svelte
mark_module_start();
Heart[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heart.svelte";
function Heart($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heart);
  const iconNode = [
    [
      "path",
      {
        "d": "M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "heart" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heart, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heart);

// node_modules/lucide-svelte/dist/icons/heater.svelte
mark_module_start();
Heater[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/heater.svelte";
function Heater($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Heater);
  const iconNode = [
    ["path", { "d": "M11 8c2-3-2-3 0-6" }],
    ["path", { "d": "M15.5 8c2-3-2-3 0-6" }],
    ["path", { "d": "M6 10h.01" }],
    ["path", { "d": "M6 14h.01" }],
    ["path", { "d": "M10 16v-4" }],
    ["path", { "d": "M14 16v-4" }],
    ["path", { "d": "M18 16v-4" }],
    [
      "path",
      {
        "d": "M20 6a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3"
      }
    ],
    ["path", { "d": "M5 20v2" }],
    ["path", { "d": "M19 20v2" }]
  ];
  Icon($$anchor, spread_props({ name: "heater" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Heater, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Heater);

// node_modules/lucide-svelte/dist/icons/hexagon.svelte
mark_module_start();
Hexagon[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hexagon.svelte";
function Hexagon($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hexagon);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hexagon" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hexagon, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hexagon);

// node_modules/lucide-svelte/dist/icons/highlighter.svelte
mark_module_start();
Highlighter[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/highlighter.svelte";
function Highlighter($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Highlighter);
  const iconNode = [
    ["path", { "d": "m9 11-6 6v3h9l3-3" }],
    [
      "path",
      {
        "d": "m22 12-4.6 4.6a2 2 0 0 1-2.8 0l-5.2-5.2a2 2 0 0 1 0-2.8L14 4"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "highlighter" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Highlighter, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Highlighter);

// node_modules/lucide-svelte/dist/icons/history.svelte
mark_module_start();
History[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/history.svelte";
function History($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, History);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"
      }
    ],
    ["path", { "d": "M3 3v5h5" }],
    ["path", { "d": "M12 7v5l4 2" }]
  ];
  Icon($$anchor, spread_props({ name: "history" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(History, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(History);

// node_modules/lucide-svelte/dist/icons/hop-off.svelte
mark_module_start();
Hop_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hop-off.svelte";
function Hop_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hop_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.82 16.12c1.69.6 3.91.79 5.18.85.28.01.53-.09.7-.27"
      }
    ],
    [
      "path",
      {
        "d": "M11.14 20.57c.52.24 2.44 1.12 4.08 1.37.46.06.86-.25.9-.71.12-1.52-.3-3.43-.5-4.28"
      }
    ],
    [
      "path",
      {
        "d": "M16.13 21.05c1.65.63 3.68.84 4.87.91a.9.9 0 0 0 .7-.26"
      }
    ],
    [
      "path",
      {
        "d": "M17.99 5.52a20.83 20.83 0 0 1 3.15 4.5.8.8 0 0 1-.68 1.13c-1.17.1-2.5.02-3.9-.25"
      }
    ],
    [
      "path",
      {
        "d": "M20.57 11.14c.24.52 1.12 2.44 1.37 4.08.04.3-.08.59-.31.75"
      }
    ],
    [
      "path",
      {
        "d": "M4.93 4.93a10 10 0 0 0-.67 13.4c.35.43.96.4 1.17-.12.69-1.71 1.07-5.07 1.07-6.71 1.34.45 3.1.9 4.88.62a.85.85 0 0 0 .48-.24"
      }
    ],
    [
      "path",
      {
        "d": "M5.52 17.99c1.05.95 2.91 2.42 4.5 3.15a.8.8 0 0 0 1.13-.68c.2-2.34-.33-5.3-1.57-8.28"
      }
    ],
    [
      "path",
      {
        "d": "M8.35 2.68a10 10 0 0 1 9.98 1.58c.43.35.4.96-.12 1.17-1.5.6-4.3.98-6.07 1.05"
      }
    ],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "hop-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hop_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hop_off);

// node_modules/lucide-svelte/dist/icons/hop.svelte
mark_module_start();
Hop[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hop.svelte";
function Hop($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hop);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.82 16.12c1.69.6 3.91.79 5.18.85.55.03 1-.42.97-.97-.06-1.27-.26-3.5-.85-5.18"
      }
    ],
    [
      "path",
      {
        "d": "M11.5 6.5c1.64 0 5-.38 6.71-1.07.52-.2.55-.82.12-1.17A10 10 0 0 0 4.26 18.33c.35.43.96.4 1.17-.12.69-1.71 1.07-5.07 1.07-6.71 1.34.45 3.1.9 4.88.62a.88.88 0 0 0 .73-.74c.3-2.14-.15-3.5-.61-4.88"
      }
    ],
    [
      "path",
      {
        "d": "M15.62 16.95c.2.85.62 2.76.5 4.28a.77.77 0 0 1-.9.7 16.64 16.64 0 0 1-4.08-1.36"
      }
    ],
    [
      "path",
      {
        "d": "M16.13 21.05c1.65.63 3.68.84 4.87.91a.9.9 0 0 0 .96-.96 17.68 17.68 0 0 0-.9-4.87"
      }
    ],
    [
      "path",
      {
        "d": "M16.94 15.62c.86.2 2.77.62 4.29.5a.77.77 0 0 0 .7-.9 16.64 16.64 0 0 0-1.36-4.08"
      }
    ],
    [
      "path",
      {
        "d": "M17.99 5.52a20.82 20.82 0 0 1 3.15 4.5.8.8 0 0 1-.68 1.13c-2.33.2-5.3-.32-8.27-1.57"
      }
    ],
    [
      "path",
      { "d": "M4.93 4.93 3 3a.7.7 0 0 1 0-1" }
    ],
    [
      "path",
      {
        "d": "M9.58 12.18c1.24 2.98 1.77 5.95 1.57 8.28a.8.8 0 0 1-1.13.68 20.82 20.82 0 0 1-4.5-3.15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hop" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hop, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hop);

// node_modules/lucide-svelte/dist/icons/hospital.svelte
mark_module_start();
Hospital[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hospital.svelte";
function Hospital($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hospital);
  const iconNode = [
    ["path", { "d": "M12 6v4" }],
    ["path", { "d": "M14 14h-4" }],
    ["path", { "d": "M14 18h-4" }],
    ["path", { "d": "M14 8h-4" }],
    [
      "path",
      {
        "d": "M18 12h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-9a2 2 0 0 1 2-2h2"
      }
    ],
    [
      "path",
      {
        "d": "M18 22V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v18"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hospital" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hospital, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hospital);

// node_modules/lucide-svelte/dist/icons/hotel.svelte
mark_module_start();
Hotel[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hotel.svelte";
function Hotel($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hotel);
  const iconNode = [
    ["path", { "d": "M10 22v-6.57" }],
    ["path", { "d": "M12 11h.01" }],
    ["path", { "d": "M12 7h.01" }],
    ["path", { "d": "M14 15.43V22" }],
    ["path", { "d": "M15 16a5 5 0 0 0-6 0" }],
    ["path", { "d": "M16 11h.01" }],
    ["path", { "d": "M16 7h.01" }],
    ["path", { "d": "M8 11h.01" }],
    ["path", { "d": "M8 7h.01" }],
    [
      "rect",
      {
        "x": "4",
        "y": "2",
        "width": "16",
        "height": "20",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hotel" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hotel, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hotel);

// node_modules/lucide-svelte/dist/icons/hourglass.svelte
mark_module_start();
Hourglass[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/hourglass.svelte";
function Hourglass($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Hourglass);
  const iconNode = [
    ["path", { "d": "M5 22h14" }],
    ["path", { "d": "M5 2h14" }],
    [
      "path",
      {
        "d": "M17 22v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22"
      }
    ],
    [
      "path",
      {
        "d": "M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "hourglass" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Hourglass, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Hourglass);

// node_modules/lucide-svelte/dist/icons/house-plug.svelte
mark_module_start();
House_plug[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/house-plug.svelte";
function House_plug($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, House_plug);
  const iconNode = [
    ["path", { "d": "M10 12V8.964" }],
    ["path", { "d": "M14 12V8.964" }],
    [
      "path",
      {
        "d": "M15 12a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2a1 1 0 0 1 1-1z"
      }
    ],
    [
      "path",
      {
        "d": "M8.5 21H5a2 2 0 0 1-2-2v-9a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2h-5a2 2 0 0 1-2-2v-2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "house-plug" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(House_plug, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(House_plug);

// node_modules/lucide-svelte/dist/icons/house-plus.svelte
mark_module_start();
House_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/house-plus.svelte";
function House_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, House_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "M13.22 2.416a2 2 0 0 0-2.511.057l-7 5.999A2 2 0 0 0 3 10v9a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7.354"
      }
    ],
    [
      "path",
      {
        "d": "M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8"
      }
    ],
    ["path", { "d": "M15 6h6" }],
    ["path", { "d": "M18 3v6" }]
  ];
  Icon($$anchor, spread_props({ name: "house-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(House_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(House_plus);

// node_modules/lucide-svelte/dist/icons/house.svelte
mark_module_start();
House[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/house.svelte";
function House($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, House);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8"
      }
    ],
    [
      "path",
      {
        "d": "M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "house" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(House, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(House);

// node_modules/lucide-svelte/dist/icons/ice-cream-bowl.svelte
mark_module_start();
Ice_cream_bowl[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ice-cream-bowl.svelte";
function Ice_cream_bowl($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ice_cream_bowl);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 17c5 0 8-2.69 8-6H4c0 3.31 3 6 8 6m-4 4h8m-4-3v3M5.14 11a3.5 3.5 0 1 1 6.71 0"
      }
    ],
    [
      "path",
      { "d": "M12.14 11a3.5 3.5 0 1 1 6.71 0" }
    ],
    [
      "path",
      { "d": "M15.5 6.5a3.5 3.5 0 1 0-7 0" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ice-cream-bowl" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ice_cream_bowl, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ice_cream_bowl);

// node_modules/lucide-svelte/dist/icons/ice-cream-cone.svelte
mark_module_start();
Ice_cream_cone[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ice-cream-cone.svelte";
function Ice_cream_cone($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ice_cream_cone);
  const iconNode = [
    [
      "path",
      { "d": "m7 11 4.08 10.35a1 1 0 0 0 1.84 0L17 11" }
    ],
    ["path", { "d": "M17 7A5 5 0 0 0 7 7" }],
    [
      "path",
      { "d": "M17 7a2 2 0 0 1 0 4H7a2 2 0 0 1 0-4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ice-cream-cone" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ice_cream_cone, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ice_cream_cone);

// node_modules/lucide-svelte/dist/icons/id-card.svelte
mark_module_start();
Id_card[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/id-card.svelte";
function Id_card($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Id_card);
  const iconNode = [
    ["path", { "d": "M16 10h2" }],
    ["path", { "d": "M16 14h2" }],
    [
      "path",
      { "d": "M6.17 15a3 3 0 0 1 5.66 0" }
    ],
    [
      "circle",
      { "cx": "9", "cy": "11", "r": "2" }
    ],
    [
      "rect",
      {
        "x": "2",
        "y": "5",
        "width": "20",
        "height": "14",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "id-card" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Id_card, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Id_card);

// node_modules/lucide-svelte/dist/icons/image-down.svelte
mark_module_start();
Image_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/image-down.svelte";
function Image_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Image_down);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.3 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10l-3.1-3.1a2 2 0 0 0-2.814.014L6 21"
      }
    ],
    ["path", { "d": "m14 19 3 3v-5.5" }],
    ["path", { "d": "m17 22 3-3" }],
    [
      "circle",
      { "cx": "9", "cy": "9", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "image-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Image_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Image_down);

// node_modules/lucide-svelte/dist/icons/image-minus.svelte
mark_module_start();
Image_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/image-minus.svelte";
function Image_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Image_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 9v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7"
      }
    ],
    [
      "line",
      {
        "x1": "16",
        "x2": "22",
        "y1": "5",
        "y2": "5"
      }
    ],
    [
      "circle",
      { "cx": "9", "cy": "9", "r": "2" }
    ],
    [
      "path",
      {
        "d": "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "image-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Image_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Image_minus);

// node_modules/lucide-svelte/dist/icons/image-off.svelte
mark_module_start();
Image_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/image-off.svelte";
function Image_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Image_off);
  const iconNode = [
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ],
    [
      "path",
      { "d": "M10.41 10.41a2 2 0 1 1-2.83-2.83" }
    ],
    [
      "line",
      {
        "x1": "13.5",
        "x2": "6",
        "y1": "13.5",
        "y2": "21"
      }
    ],
    [
      "line",
      {
        "x1": "18",
        "x2": "21",
        "y1": "12",
        "y2": "15"
      }
    ],
    [
      "path",
      {
        "d": "M3.59 3.59A1.99 1.99 0 0 0 3 5v14a2 2 0 0 0 2 2h14c.55 0 1.052-.22 1.41-.59"
      }
    ],
    ["path", { "d": "M21 15V5a2 2 0 0 0-2-2H9" }]
  ];
  Icon($$anchor, spread_props({ name: "image-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Image_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Image_off);

// node_modules/lucide-svelte/dist/icons/image-play.svelte
mark_module_start();
Image_play[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/image-play.svelte";
function Image_play($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Image_play);
  const iconNode = [
    ["path", { "d": "m11 16-5 5" }],
    [
      "path",
      {
        "d": "M11 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6.5"
      }
    ],
    [
      "path",
      {
        "d": "M15.765 22a.5.5 0 0 1-.765-.424V13.38a.5.5 0 0 1 .765-.424l5.878 3.674a1 1 0 0 1 0 1.696z"
      }
    ],
    [
      "circle",
      { "cx": "9", "cy": "9", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "image-play" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Image_play, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Image_play);

// node_modules/lucide-svelte/dist/icons/image-plus.svelte
mark_module_start();
Image_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/image-plus.svelte";
function Image_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Image_plus);
  const iconNode = [
    ["path", { "d": "M16 5h6" }],
    ["path", { "d": "M19 2v6" }],
    [
      "path",
      {
        "d": "M21 11.5V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7.5"
      }
    ],
    [
      "path",
      {
        "d": "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21"
      }
    ],
    [
      "circle",
      { "cx": "9", "cy": "9", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "image-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Image_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Image_plus);

// node_modules/lucide-svelte/dist/icons/image-up.svelte
mark_module_start();
Image_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/image-up.svelte";
function Image_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Image_up);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.3 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10l-3.1-3.1a2 2 0 0 0-2.814.014L6 21"
      }
    ],
    ["path", { "d": "m14 19.5 3-3 3 3" }],
    ["path", { "d": "M17 22v-5.5" }],
    [
      "circle",
      { "cx": "9", "cy": "9", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "image-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Image_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Image_up);

// node_modules/lucide-svelte/dist/icons/image.svelte
mark_module_start();
Image[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/image.svelte";
function Image($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Image);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "circle",
      { "cx": "9", "cy": "9", "r": "2" }
    ],
    [
      "path",
      {
        "d": "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "image" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Image, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Image);

// node_modules/lucide-svelte/dist/icons/images.svelte
mark_module_start();
Images[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/images.svelte";
function Images($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Images);
  const iconNode = [
    ["path", { "d": "M18 22H4a2 2 0 0 1-2-2V6" }],
    [
      "path",
      {
        "d": "m22 13-1.296-1.296a2.41 2.41 0 0 0-3.408 0L11 18"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "8", "r": "2" }
    ],
    [
      "rect",
      {
        "width": "16",
        "height": "16",
        "x": "6",
        "y": "2",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "images" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Images, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Images);

// node_modules/lucide-svelte/dist/icons/import.svelte
mark_module_start();
Import[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/import.svelte";
function Import($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Import);
  const iconNode = [
    ["path", { "d": "M12 3v12" }],
    ["path", { "d": "m8 11 4 4 4-4" }],
    [
      "path",
      {
        "d": "M8 5H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-4"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "import" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Import, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Import);

// node_modules/lucide-svelte/dist/icons/inbox.svelte
mark_module_start();
Inbox[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/inbox.svelte";
function Inbox($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Inbox);
  const iconNode = [
    [
      "polyline",
      { "points": "22 12 16 12 14 15 10 15 8 12 2 12" }
    ],
    [
      "path",
      {
        "d": "M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "inbox" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Inbox, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Inbox);

// node_modules/lucide-svelte/dist/icons/indent-decrease.svelte
mark_module_start();
Indent_decrease[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/indent-decrease.svelte";
function Indent_decrease($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Indent_decrease);
  const iconNode = [
    ["path", { "d": "M21 12H11" }],
    ["path", { "d": "M21 18H11" }],
    ["path", { "d": "M21 6H11" }],
    ["path", { "d": "m7 8-4 4 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "indent-decrease" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Indent_decrease, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Indent_decrease);

// node_modules/lucide-svelte/dist/icons/indent-increase.svelte
mark_module_start();
Indent_increase[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/indent-increase.svelte";
function Indent_increase($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Indent_increase);
  const iconNode = [
    ["path", { "d": "M21 12H11" }],
    ["path", { "d": "M21 18H11" }],
    ["path", { "d": "M21 6H11" }],
    ["path", { "d": "m3 8 4 4-4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "indent-increase" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Indent_increase, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Indent_increase);

// node_modules/lucide-svelte/dist/icons/indian-rupee.svelte
mark_module_start();
Indian_rupee[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/indian-rupee.svelte";
function Indian_rupee($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Indian_rupee);
  const iconNode = [
    ["path", { "d": "M6 3h12" }],
    ["path", { "d": "M6 8h12" }],
    ["path", { "d": "m6 13 8.5 8" }],
    ["path", { "d": "M6 13h3" }],
    [
      "path",
      { "d": "M9 13c6.667 0 6.667-10 0-10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "indian-rupee" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Indian_rupee, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Indian_rupee);

// node_modules/lucide-svelte/dist/icons/infinity.svelte
mark_module_start();
Infinity[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/infinity.svelte";
function Infinity($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Infinity);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 12c-2-2.67-4-4-6-4a4 4 0 1 0 0 8c2 0 4-1.33 6-4Zm0 0c2 2.67 4 4 6 4a4 4 0 0 0 0-8c-2 0-4 1.33-6 4Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "infinity" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Infinity, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Infinity);

// node_modules/lucide-svelte/dist/icons/info.svelte
mark_module_start();
Info[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/info.svelte";
function Info($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Info);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "M12 16v-4" }],
    ["path", { "d": "M12 8h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "info" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Info, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Info);

// node_modules/lucide-svelte/dist/icons/inspection-panel.svelte
mark_module_start();
Inspection_panel[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/inspection-panel.svelte";
function Inspection_panel($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Inspection_panel);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M7 7h.01" }],
    ["path", { "d": "M17 7h.01" }],
    ["path", { "d": "M7 17h.01" }],
    ["path", { "d": "M17 17h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "inspection-panel" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Inspection_panel, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Inspection_panel);

// node_modules/lucide-svelte/dist/icons/instagram.svelte
mark_module_start();
Instagram[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/instagram.svelte";
function Instagram($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Instagram);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "20",
        "x": "2",
        "y": "2",
        "rx": "5",
        "ry": "5"
      }
    ],
    [
      "path",
      {
        "d": "M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"
      }
    ],
    [
      "line",
      {
        "x1": "17.5",
        "x2": "17.51",
        "y1": "6.5",
        "y2": "6.5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "instagram" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Instagram, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Instagram);

// node_modules/lucide-svelte/dist/icons/italic.svelte
mark_module_start();
Italic[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/italic.svelte";
function Italic($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Italic);
  const iconNode = [
    [
      "line",
      {
        "x1": "19",
        "x2": "10",
        "y1": "4",
        "y2": "4"
      }
    ],
    [
      "line",
      {
        "x1": "14",
        "x2": "5",
        "y1": "20",
        "y2": "20"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "9",
        "y1": "4",
        "y2": "20"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "italic" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Italic, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Italic);

// node_modules/lucide-svelte/dist/icons/iteration-ccw.svelte
mark_module_start();
Iteration_ccw[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/iteration-ccw.svelte";
function Iteration_ccw($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Iteration_ccw);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 10c0-4.4-3.6-8-8-8s-8 3.6-8 8 3.6 8 8 8h8"
      }
    ],
    [
      "polyline",
      { "points": "16 14 20 18 16 22" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "iteration-ccw" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Iteration_ccw, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Iteration_ccw);

// node_modules/lucide-svelte/dist/icons/iteration-cw.svelte
mark_module_start();
Iteration_cw[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/iteration-cw.svelte";
function Iteration_cw($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Iteration_cw);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 10c0-4.4 3.6-8 8-8s8 3.6 8 8-3.6 8-8 8H4"
      }
    ],
    ["polyline", { "points": "8 22 4 18 8 14" }]
  ];
  Icon($$anchor, spread_props({ name: "iteration-cw" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Iteration_cw, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Iteration_cw);

// node_modules/lucide-svelte/dist/icons/japanese-yen.svelte
mark_module_start();
Japanese_yen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/japanese-yen.svelte";
function Japanese_yen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Japanese_yen);
  const iconNode = [
    [
      "path",
      { "d": "M12 9.5V21m0-11.5L6 3m6 6.5L18 3" }
    ],
    ["path", { "d": "M6 15h12" }],
    ["path", { "d": "M6 11h12" }]
  ];
  Icon($$anchor, spread_props({ name: "japanese-yen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Japanese_yen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Japanese_yen);

// node_modules/lucide-svelte/dist/icons/joystick.svelte
mark_module_start();
Joystick[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/joystick.svelte";
function Joystick($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Joystick);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-2Z"
      }
    ],
    ["path", { "d": "M6 15v-2" }],
    ["path", { "d": "M12 15V9" }],
    [
      "circle",
      { "cx": "12", "cy": "6", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "joystick" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Joystick, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Joystick);

// node_modules/lucide-svelte/dist/icons/kanban.svelte
mark_module_start();
Kanban[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/kanban.svelte";
function Kanban($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Kanban);
  const iconNode = [
    ["path", { "d": "M6 5v11" }],
    ["path", { "d": "M12 5v6" }],
    ["path", { "d": "M18 5v14" }]
  ];
  Icon($$anchor, spread_props({ name: "kanban" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Kanban, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Kanban);

// node_modules/lucide-svelte/dist/icons/key-round.svelte
mark_module_start();
Key_round[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/key-round.svelte";
function Key_round($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Key_round);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.586 17.414A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814a6.5 6.5 0 1 0-4-4z"
      }
    ],
    [
      "circle",
      {
        "cx": "16.5",
        "cy": "7.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "key-round" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Key_round, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Key_round);

// node_modules/lucide-svelte/dist/icons/key-square.svelte
mark_module_start();
Key_square[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/key-square.svelte";
function Key_square($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Key_square);
  const iconNode = [
    [
      "path",
      {
        "d": "M12.4 2.7a2.5 2.5 0 0 1 3.4 0l5.5 5.5a2.5 2.5 0 0 1 0 3.4l-3.7 3.7a2.5 2.5 0 0 1-3.4 0L8.7 9.8a2.5 2.5 0 0 1 0-3.4z"
      }
    ],
    ["path", { "d": "m14 7 3 3" }],
    [
      "path",
      {
        "d": "m9.4 10.6-6.814 6.814A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "key-square" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Key_square, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Key_square);

// node_modules/lucide-svelte/dist/icons/key.svelte
mark_module_start();
Key[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/key.svelte";
function Key($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Key);
  const iconNode = [
    [
      "path",
      {
        "d": "m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4"
      }
    ],
    ["path", { "d": "m21 2-9.6 9.6" }],
    [
      "circle",
      { "cx": "7.5", "cy": "15.5", "r": "5.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "key" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Key, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Key);

// node_modules/lucide-svelte/dist/icons/keyboard-music.svelte
mark_module_start();
Keyboard_music[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/keyboard-music.svelte";
function Keyboard_music($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Keyboard_music);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "16",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M6 8h4" }],
    ["path", { "d": "M14 8h.01" }],
    ["path", { "d": "M18 8h.01" }],
    ["path", { "d": "M2 12h20" }],
    ["path", { "d": "M6 12v4" }],
    ["path", { "d": "M10 12v4" }],
    ["path", { "d": "M14 12v4" }],
    ["path", { "d": "M18 12v4" }]
  ];
  Icon($$anchor, spread_props({ name: "keyboard-music" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Keyboard_music, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Keyboard_music);

// node_modules/lucide-svelte/dist/icons/keyboard-off.svelte
mark_module_start();
Keyboard_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/keyboard-off.svelte";
function Keyboard_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Keyboard_off);
  const iconNode = [
    ["path", { "d": "M 20 4 A2 2 0 0 1 22 6" }],
    ["path", { "d": "M 22 6 L 22 16.41" }],
    ["path", { "d": "M 7 16 L 16 16" }],
    ["path", { "d": "M 9.69 4 L 20 4" }],
    ["path", { "d": "M14 8h.01" }],
    ["path", { "d": "M18 8h.01" }],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      { "d": "M20 20H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2" }
    ],
    ["path", { "d": "M6 8h.01" }],
    ["path", { "d": "M8 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "keyboard-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Keyboard_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Keyboard_off);

// node_modules/lucide-svelte/dist/icons/keyboard.svelte
mark_module_start();
Keyboard[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/keyboard.svelte";
function Keyboard($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Keyboard);
  const iconNode = [
    ["path", { "d": "M10 8h.01" }],
    ["path", { "d": "M12 12h.01" }],
    ["path", { "d": "M14 8h.01" }],
    ["path", { "d": "M16 12h.01" }],
    ["path", { "d": "M18 8h.01" }],
    ["path", { "d": "M6 8h.01" }],
    ["path", { "d": "M7 16h10" }],
    ["path", { "d": "M8 12h.01" }],
    [
      "rect",
      {
        "width": "20",
        "height": "16",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "keyboard" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Keyboard, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Keyboard);

// node_modules/lucide-svelte/dist/icons/lamp-ceiling.svelte
mark_module_start();
Lamp_ceiling[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lamp-ceiling.svelte";
function Lamp_ceiling($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lamp_ceiling);
  const iconNode = [
    ["path", { "d": "M12 2v5" }],
    ["path", { "d": "M6 7h12l4 9H2l4-9Z" }],
    [
      "path",
      { "d": "M9.17 16a3 3 0 1 0 5.66 0" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "lamp-ceiling" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lamp_ceiling, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lamp_ceiling);

// node_modules/lucide-svelte/dist/icons/lamp-desk.svelte
mark_module_start();
Lamp_desk[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lamp-desk.svelte";
function Lamp_desk($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lamp_desk);
  const iconNode = [
    ["path", { "d": "m14 5-3 3 2 7 8-8-7-2Z" }],
    ["path", { "d": "m14 5-3 3-3-3 3-3 3 3Z" }],
    ["path", { "d": "M9.5 6.5 4 12l3 6" }],
    [
      "path",
      {
        "d": "M3 22v-2c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2H3Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "lamp-desk" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lamp_desk, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lamp_desk);

// node_modules/lucide-svelte/dist/icons/lamp-floor.svelte
mark_module_start();
Lamp_floor[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lamp-floor.svelte";
function Lamp_floor($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lamp_floor);
  const iconNode = [
    ["path", { "d": "M9 2h6l3 7H6l3-7Z" }],
    ["path", { "d": "M12 9v13" }],
    ["path", { "d": "M9 22h6" }]
  ];
  Icon($$anchor, spread_props({ name: "lamp-floor" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lamp_floor, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lamp_floor);

// node_modules/lucide-svelte/dist/icons/lamp-wall-down.svelte
mark_module_start();
Lamp_wall_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lamp-wall-down.svelte";
function Lamp_wall_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lamp_wall_down);
  const iconNode = [
    ["path", { "d": "M11 13h6l3 7H8l3-7Z" }],
    ["path", { "d": "M14 13V8a2 2 0 0 0-2-2H8" }],
    [
      "path",
      {
        "d": "M4 9h2a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H4v6Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "lamp-wall-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lamp_wall_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lamp_wall_down);

// node_modules/lucide-svelte/dist/icons/lamp-wall-up.svelte
mark_module_start();
Lamp_wall_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lamp-wall-up.svelte";
function Lamp_wall_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lamp_wall_up);
  const iconNode = [
    ["path", { "d": "M11 4h6l3 7H8l3-7Z" }],
    ["path", { "d": "M14 11v5a2 2 0 0 1-2 2H8" }],
    [
      "path",
      {
        "d": "M4 15h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H4v-6Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "lamp-wall-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lamp_wall_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lamp_wall_up);

// node_modules/lucide-svelte/dist/icons/lamp.svelte
mark_module_start();
Lamp[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lamp.svelte";
function Lamp($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lamp);
  const iconNode = [
    ["path", { "d": "M8 2h8l4 10H4L8 2Z" }],
    ["path", { "d": "M12 12v6" }],
    [
      "path",
      {
        "d": "M8 22v-2c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2H8Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "lamp" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lamp, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lamp);

// node_modules/lucide-svelte/dist/icons/land-plot.svelte
mark_module_start();
Land_plot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/land-plot.svelte";
function Land_plot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Land_plot);
  const iconNode = [
    ["path", { "d": "m12 8 6-3-6-3v10" }],
    [
      "path",
      {
        "d": "m8 11.99-5.5 3.14a1 1 0 0 0 0 1.74l8.5 4.86a2 2 0 0 0 2 0l8.5-4.86a1 1 0 0 0 0-1.74L16 12"
      }
    ],
    ["path", { "d": "m6.49 12.85 11.02 6.3" }],
    ["path", { "d": "M17.51 12.85 6.5 19.15" }]
  ];
  Icon($$anchor, spread_props({ name: "land-plot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Land_plot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Land_plot);

// node_modules/lucide-svelte/dist/icons/landmark.svelte
mark_module_start();
Landmark[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/landmark.svelte";
function Landmark($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Landmark);
  const iconNode = [
    [
      "line",
      {
        "x1": "3",
        "x2": "21",
        "y1": "22",
        "y2": "22"
      }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "6",
        "y1": "18",
        "y2": "11"
      }
    ],
    [
      "line",
      {
        "x1": "10",
        "x2": "10",
        "y1": "18",
        "y2": "11"
      }
    ],
    [
      "line",
      {
        "x1": "14",
        "x2": "14",
        "y1": "18",
        "y2": "11"
      }
    ],
    [
      "line",
      {
        "x1": "18",
        "x2": "18",
        "y1": "18",
        "y2": "11"
      }
    ],
    ["polygon", { "points": "12 2 20 7 4 7" }]
  ];
  Icon($$anchor, spread_props({ name: "landmark" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Landmark, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Landmark);

// node_modules/lucide-svelte/dist/icons/languages.svelte
mark_module_start();
Languages[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/languages.svelte";
function Languages($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Languages);
  const iconNode = [
    ["path", { "d": "m5 8 6 6" }],
    ["path", { "d": "m4 14 6-6 2-3" }],
    ["path", { "d": "M2 5h12" }],
    ["path", { "d": "M7 2h1" }],
    ["path", { "d": "m22 22-5-10-5 10" }],
    ["path", { "d": "M14 18h6" }]
  ];
  Icon($$anchor, spread_props({ name: "languages" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Languages, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Languages);

// node_modules/lucide-svelte/dist/icons/laptop-minimal.svelte
mark_module_start();
Laptop_minimal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/laptop-minimal.svelte";
function Laptop_minimal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Laptop_minimal);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "12",
        "x": "3",
        "y": "4",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "20",
        "y2": "20"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "laptop-minimal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Laptop_minimal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Laptop_minimal);

// node_modules/lucide-svelte/dist/icons/laptop.svelte
mark_module_start();
Laptop[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/laptop.svelte";
function Laptop($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Laptop);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 16V7a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v9m16 0H4m16 0 1.28 2.55a1 1 0 0 1-.9 1.45H3.62a1 1 0 0 1-.9-1.45L4 16"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "laptop" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Laptop, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Laptop);

// node_modules/lucide-svelte/dist/icons/lasso-select.svelte
mark_module_start();
Lasso_select[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lasso-select.svelte";
function Lasso_select($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lasso_select);
  const iconNode = [
    ["path", { "d": "M7 22a5 5 0 0 1-2-4" }],
    [
      "path",
      { "d": "M7 16.93c.96.43 1.96.74 2.99.91" }
    ],
    [
      "path",
      {
        "d": "M3.34 14A6.8 6.8 0 0 1 2 10c0-4.42 4.48-8 10-8s10 3.58 10 8a7.19 7.19 0 0 1-.33 2"
      }
    ],
    [
      "path",
      { "d": "M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z" }
    ],
    [
      "path",
      {
        "d": "M14.33 22h-.09a.35.35 0 0 1-.24-.32v-10a.34.34 0 0 1 .33-.34c.08 0 .15.03.21.08l7.34 6a.33.33 0 0 1-.21.59h-4.49l-2.57 3.85a.35.35 0 0 1-.28.14z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "lasso-select" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lasso_select, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lasso_select);

// node_modules/lucide-svelte/dist/icons/lasso.svelte
mark_module_start();
Lasso[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lasso.svelte";
function Lasso($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lasso);
  const iconNode = [
    ["path", { "d": "M7 22a5 5 0 0 1-2-4" }],
    [
      "path",
      {
        "d": "M3.3 14A6.8 6.8 0 0 1 2 10c0-4.4 4.5-8 10-8s10 3.6 10 8-4.5 8-10 8a12 12 0 0 1-5-1"
      }
    ],
    [
      "path",
      { "d": "M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "lasso" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lasso, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lasso);

// node_modules/lucide-svelte/dist/icons/laugh.svelte
mark_module_start();
Laugh[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/laugh.svelte";
function Laugh($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Laugh);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "path",
      { "d": "M18 13a6 6 0 0 1-6 5 6 6 0 0 1-6-5h12Z" }
    ],
    [
      "line",
      {
        "x1": "9",
        "x2": "9.01",
        "y1": "9",
        "y2": "9"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "15.01",
        "y1": "9",
        "y2": "9"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "laugh" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Laugh, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Laugh);

// node_modules/lucide-svelte/dist/icons/layers-2.svelte
mark_module_start();
Layers_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/layers-2.svelte";
function Layers_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Layers_2);
  const iconNode = [
    [
      "path",
      {
        "d": "m16.02 12 5.48 3.13a1 1 0 0 1 0 1.74L13 21.74a2 2 0 0 1-2 0l-8.5-4.87a1 1 0 0 1 0-1.74L7.98 12"
      }
    ],
    [
      "path",
      {
        "d": "M13 13.74a2 2 0 0 1-2 0L2.5 8.87a1 1 0 0 1 0-1.74L11 2.26a2 2 0 0 1 2 0l8.5 4.87a1 1 0 0 1 0 1.74Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "layers-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Layers_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Layers_2);

// node_modules/lucide-svelte/dist/icons/layers-3.svelte
mark_module_start();
Layers_3[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/layers-3.svelte";
function Layers_3($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Layers_3);
  const iconNode = [
    [
      "path",
      {
        "d": "m12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83Z"
      }
    ],
    [
      "path",
      {
        "d": "m6.08 9.5-3.5 1.6a1 1 0 0 0 0 1.81l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9a1 1 0 0 0 0-1.83l-3.5-1.59"
      }
    ],
    [
      "path",
      {
        "d": "m6.08 14.5-3.5 1.6a1 1 0 0 0 0 1.81l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9a1 1 0 0 0 0-1.83l-3.5-1.59"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "layers-3" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Layers_3, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Layers_3);

// node_modules/lucide-svelte/dist/icons/layers.svelte
mark_module_start();
Layers[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/layers.svelte";
function Layers($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Layers);
  const iconNode = [
    [
      "path",
      {
        "d": "m12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83Z"
      }
    ],
    [
      "path",
      {
        "d": "m22 17.65-9.17 4.16a2 2 0 0 1-1.66 0L2 17.65"
      }
    ],
    [
      "path",
      {
        "d": "m22 12.65-9.17 4.16a2 2 0 0 1-1.66 0L2 12.65"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "layers" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Layers, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Layers);

// node_modules/lucide-svelte/dist/icons/layout-dashboard.svelte
mark_module_start();
Layout_dashboard[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/layout-dashboard.svelte";
function Layout_dashboard($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Layout_dashboard);
  const iconNode = [
    [
      "rect",
      {
        "width": "7",
        "height": "9",
        "x": "3",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "5",
        "x": "14",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "9",
        "x": "14",
        "y": "12",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "5",
        "x": "3",
        "y": "16",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "layout-dashboard" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Layout_dashboard, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Layout_dashboard);

// node_modules/lucide-svelte/dist/icons/layout-grid.svelte
mark_module_start();
Layout_grid[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/layout-grid.svelte";
function Layout_grid($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Layout_grid);
  const iconNode = [
    [
      "rect",
      {
        "width": "7",
        "height": "7",
        "x": "3",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "7",
        "x": "14",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "7",
        "x": "14",
        "y": "14",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "7",
        "x": "3",
        "y": "14",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "layout-grid" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Layout_grid, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Layout_grid);

// node_modules/lucide-svelte/dist/icons/layout-list.svelte
mark_module_start();
Layout_list[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/layout-list.svelte";
function Layout_list($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Layout_list);
  const iconNode = [
    [
      "rect",
      {
        "width": "7",
        "height": "7",
        "x": "3",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "7",
        "x": "3",
        "y": "14",
        "rx": "1"
      }
    ],
    ["path", { "d": "M14 4h7" }],
    ["path", { "d": "M14 9h7" }],
    ["path", { "d": "M14 15h7" }],
    ["path", { "d": "M14 20h7" }]
  ];
  Icon($$anchor, spread_props({ name: "layout-list" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Layout_list, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Layout_list);

// node_modules/lucide-svelte/dist/icons/layout-panel-left.svelte
mark_module_start();
Layout_panel_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/layout-panel-left.svelte";
function Layout_panel_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Layout_panel_left);
  const iconNode = [
    [
      "rect",
      {
        "width": "7",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "7",
        "x": "14",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "7",
        "x": "14",
        "y": "14",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "layout-panel-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Layout_panel_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Layout_panel_left);

// node_modules/lucide-svelte/dist/icons/layout-panel-top.svelte
mark_module_start();
Layout_panel_top[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/layout-panel-top.svelte";
function Layout_panel_top($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Layout_panel_top);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "7",
        "x": "3",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "7",
        "x": "3",
        "y": "14",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "7",
        "height": "7",
        "x": "14",
        "y": "14",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "layout-panel-top" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Layout_panel_top, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Layout_panel_top);

// node_modules/lucide-svelte/dist/icons/layout-template.svelte
mark_module_start();
Layout_template[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/layout-template.svelte";
function Layout_template($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Layout_template);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "7",
        "x": "3",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "9",
        "height": "7",
        "x": "3",
        "y": "14",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "5",
        "height": "7",
        "x": "16",
        "y": "14",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "layout-template" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Layout_template, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Layout_template);

// node_modules/lucide-svelte/dist/icons/leaf.svelte
mark_module_start();
Leaf[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/leaf.svelte";
function Leaf($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Leaf);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 20A7 7 0 0 1 9.8 6.1C15.5 5 17 4.48 19 2c1 2 2 4.18 2 8 0 5.5-4.78 10-10 10Z"
      }
    ],
    [
      "path",
      {
        "d": "M2 21c0-3 1.85-5.36 5.08-6C9.5 14.52 12 13 13 12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "leaf" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Leaf, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Leaf);

// node_modules/lucide-svelte/dist/icons/leafy-green.svelte
mark_module_start();
Leafy_green[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/leafy-green.svelte";
function Leafy_green($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Leafy_green);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 22c1.25-.987 2.27-1.975 3.9-2.2a5.56 5.56 0 0 1 3.8 1.5 4 4 0 0 0 6.187-2.353 3.5 3.5 0 0 0 3.69-5.116A3.5 3.5 0 0 0 20.95 8 3.5 3.5 0 1 0 16 3.05a3.5 3.5 0 0 0-5.831 1.373 3.5 3.5 0 0 0-5.116 3.69 4 4 0 0 0-2.348 6.155C3.499 15.42 4.409 16.712 4.2 18.1 3.926 19.743 3.014 20.732 2 22"
      }
    ],
    ["path", { "d": "M2 22 17 7" }]
  ];
  Icon($$anchor, spread_props({ name: "leafy-green" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Leafy_green, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Leafy_green);

// node_modules/lucide-svelte/dist/icons/lectern.svelte
mark_module_start();
Lectern[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lectern.svelte";
function Lectern($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lectern);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 12h3a2 2 0 0 0 1.902-1.38l1.056-3.333A1 1 0 0 0 21 6H3a1 1 0 0 0-.958 1.287l1.056 3.334A2 2 0 0 0 5 12h3"
      }
    ],
    ["path", { "d": "M18 6V3a1 1 0 0 0-1-1h-3" }],
    [
      "rect",
      {
        "width": "8",
        "height": "12",
        "x": "8",
        "y": "10",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "lectern" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lectern, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lectern);

// node_modules/lucide-svelte/dist/icons/letter-text.svelte
mark_module_start();
Letter_text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/letter-text.svelte";
function Letter_text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Letter_text);
  const iconNode = [
    ["path", { "d": "M15 12h6" }],
    ["path", { "d": "M15 6h6" }],
    [
      "path",
      {
        "d": "m3 13 3.553-7.724a.5.5 0 0 1 .894 0L11 13"
      }
    ],
    ["path", { "d": "M3 18h18" }],
    ["path", { "d": "M4 11h6" }]
  ];
  Icon($$anchor, spread_props({ name: "letter-text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Letter_text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Letter_text);

// node_modules/lucide-svelte/dist/icons/library-big.svelte
mark_module_start();
Library_big[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/library-big.svelte";
function Library_big($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Library_big);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "1"
      }
    ],
    ["path", { "d": "M7 3v18" }],
    [
      "path",
      {
        "d": "M20.4 18.9c.2.5-.1 1.1-.6 1.3l-1.9.7c-.5.2-1.1-.1-1.3-.6L11.1 5.1c-.2-.5.1-1.1.6-1.3l1.9-.7c.5-.2 1.1.1 1.3.6Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "library-big" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Library_big, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Library_big);

// node_modules/lucide-svelte/dist/icons/library.svelte
mark_module_start();
Library[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/library.svelte";
function Library($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Library);
  const iconNode = [
    ["path", { "d": "m16 6 4 14" }],
    ["path", { "d": "M12 6v14" }],
    ["path", { "d": "M8 8v12" }],
    ["path", { "d": "M4 4v16" }]
  ];
  Icon($$anchor, spread_props({ name: "library" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Library, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Library);

// node_modules/lucide-svelte/dist/icons/life-buoy.svelte
mark_module_start();
Life_buoy[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/life-buoy.svelte";
function Life_buoy($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Life_buoy);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "m4.93 4.93 4.24 4.24" }],
    ["path", { "d": "m14.83 9.17 4.24-4.24" }],
    ["path", { "d": "m14.83 14.83 4.24 4.24" }],
    ["path", { "d": "m9.17 14.83-4.24 4.24" }],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "life-buoy" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Life_buoy, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Life_buoy);

// node_modules/lucide-svelte/dist/icons/ligature.svelte
mark_module_start();
Ligature[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ligature.svelte";
function Ligature($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ligature);
  const iconNode = [
    [
      "path",
      {
        "d": "M8 20V8c0-2.2 1.8-4 4-4 1.5 0 2.8.8 3.5 2"
      }
    ],
    ["path", { "d": "M6 12h4" }],
    ["path", { "d": "M14 12h2v8" }],
    ["path", { "d": "M6 20h4" }],
    ["path", { "d": "M14 20h4" }]
  ];
  Icon($$anchor, spread_props({ name: "ligature" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ligature, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ligature);

// node_modules/lucide-svelte/dist/icons/lightbulb-off.svelte
mark_module_start();
Lightbulb_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lightbulb-off.svelte";
function Lightbulb_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lightbulb_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M16.8 11.2c.8-.9 1.2-2 1.2-3.2a6 6 0 0 0-9.3-5"
      }
    ],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      {
        "d": "M6.3 6.3a4.67 4.67 0 0 0 1.2 5.2c.7.7 1.3 1.5 1.5 2.5"
      }
    ],
    ["path", { "d": "M9 18h6" }],
    ["path", { "d": "M10 22h4" }]
  ];
  Icon($$anchor, spread_props({ name: "lightbulb-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lightbulb_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lightbulb_off);

// node_modules/lucide-svelte/dist/icons/lightbulb.svelte
mark_module_start();
Lightbulb[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lightbulb.svelte";
function Lightbulb($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lightbulb);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5"
      }
    ],
    ["path", { "d": "M9 18h6" }],
    ["path", { "d": "M10 22h4" }]
  ];
  Icon($$anchor, spread_props({ name: "lightbulb" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lightbulb, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lightbulb);

// node_modules/lucide-svelte/dist/icons/link-2-off.svelte
mark_module_start();
Link_2_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/link-2-off.svelte";
function Link_2_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Link_2_off);
  const iconNode = [
    ["path", { "d": "M9 17H7A5 5 0 0 1 7 7" }],
    ["path", { "d": "M15 7h2a5 5 0 0 1 4 8" }],
    [
      "line",
      {
        "x1": "8",
        "x2": "12",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "link-2-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Link_2_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Link_2_off);

// node_modules/lucide-svelte/dist/icons/link-2.svelte
mark_module_start();
Link_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/link-2.svelte";
function Link_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Link_2);
  const iconNode = [
    ["path", { "d": "M9 17H7A5 5 0 0 1 7 7h2" }],
    [
      "path",
      { "d": "M15 7h2a5 5 0 1 1 0 10h-2" }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "16",
        "y1": "12",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "link-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Link_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Link_2);

// node_modules/lucide-svelte/dist/icons/link.svelte
mark_module_start();
Link[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/link.svelte";
function Link($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Link);
  const iconNode = [
    [
      "path",
      {
        "d": "M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"
      }
    ],
    [
      "path",
      {
        "d": "M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "link" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Link, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Link);

// node_modules/lucide-svelte/dist/icons/linkedin.svelte
mark_module_start();
Linkedin[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/linkedin.svelte";
function Linkedin($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Linkedin);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"
      }
    ],
    [
      "rect",
      {
        "width": "4",
        "height": "12",
        "x": "2",
        "y": "9"
      }
    ],
    [
      "circle",
      { "cx": "4", "cy": "4", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "linkedin" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Linkedin, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Linkedin);

// node_modules/lucide-svelte/dist/icons/list-check.svelte
mark_module_start();
List_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-check.svelte";
function List_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_check);
  const iconNode = [
    ["path", { "d": "M11 18H3" }],
    ["path", { "d": "m15 18 2 2 4-4" }],
    ["path", { "d": "M16 12H3" }],
    ["path", { "d": "M16 6H3" }]
  ];
  Icon($$anchor, spread_props({ name: "list-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_check);

// node_modules/lucide-svelte/dist/icons/list-checks.svelte
mark_module_start();
List_checks[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-checks.svelte";
function List_checks($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_checks);
  const iconNode = [
    ["path", { "d": "m3 17 2 2 4-4" }],
    ["path", { "d": "m3 7 2 2 4-4" }],
    ["path", { "d": "M13 6h8" }],
    ["path", { "d": "M13 12h8" }],
    ["path", { "d": "M13 18h8" }]
  ];
  Icon($$anchor, spread_props({ name: "list-checks" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_checks, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_checks);

// node_modules/lucide-svelte/dist/icons/list-collapse.svelte
mark_module_start();
List_collapse[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-collapse.svelte";
function List_collapse($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_collapse);
  const iconNode = [
    ["path", { "d": "m3 10 2.5-2.5L3 5" }],
    ["path", { "d": "m3 19 2.5-2.5L3 14" }],
    ["path", { "d": "M10 6h11" }],
    ["path", { "d": "M10 12h11" }],
    ["path", { "d": "M10 18h11" }]
  ];
  Icon($$anchor, spread_props({ name: "list-collapse" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_collapse, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_collapse);

// node_modules/lucide-svelte/dist/icons/list-end.svelte
mark_module_start();
List_end[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-end.svelte";
function List_end($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_end);
  const iconNode = [
    ["path", { "d": "M16 12H3" }],
    ["path", { "d": "M16 6H3" }],
    ["path", { "d": "M10 18H3" }],
    [
      "path",
      { "d": "M21 6v10a2 2 0 0 1-2 2h-5" }
    ],
    ["path", { "d": "m16 16-2 2 2 2" }]
  ];
  Icon($$anchor, spread_props({ name: "list-end" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_end, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_end);

// node_modules/lucide-svelte/dist/icons/list-filter.svelte
mark_module_start();
List_filter[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-filter.svelte";
function List_filter($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_filter);
  const iconNode = [
    ["path", { "d": "M3 6h18" }],
    ["path", { "d": "M7 12h10" }],
    ["path", { "d": "M10 18h4" }]
  ];
  Icon($$anchor, spread_props({ name: "list-filter" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_filter, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_filter);

// node_modules/lucide-svelte/dist/icons/list-minus.svelte
mark_module_start();
List_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-minus.svelte";
function List_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_minus);
  const iconNode = [
    ["path", { "d": "M11 12H3" }],
    ["path", { "d": "M16 6H3" }],
    ["path", { "d": "M16 18H3" }],
    ["path", { "d": "M21 12h-6" }]
  ];
  Icon($$anchor, spread_props({ name: "list-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_minus);

// node_modules/lucide-svelte/dist/icons/list-music.svelte
mark_module_start();
List_music[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-music.svelte";
function List_music($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_music);
  const iconNode = [
    ["path", { "d": "M21 15V6" }],
    [
      "path",
      {
        "d": "M18.5 18a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z"
      }
    ],
    ["path", { "d": "M12 12H3" }],
    ["path", { "d": "M16 6H3" }],
    ["path", { "d": "M12 18H3" }]
  ];
  Icon($$anchor, spread_props({ name: "list-music" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_music, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_music);

// node_modules/lucide-svelte/dist/icons/list-ordered.svelte
mark_module_start();
List_ordered[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-ordered.svelte";
function List_ordered($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_ordered);
  const iconNode = [
    ["path", { "d": "M10 12h11" }],
    ["path", { "d": "M10 18h11" }],
    ["path", { "d": "M10 6h11" }],
    ["path", { "d": "M4 10h2" }],
    ["path", { "d": "M4 6h1v4" }],
    [
      "path",
      { "d": "M6 18H4c0-1 2-2 2-3s-1-1.5-2-1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "list-ordered" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_ordered, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_ordered);

// node_modules/lucide-svelte/dist/icons/list-plus.svelte
mark_module_start();
List_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-plus.svelte";
function List_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_plus);
  const iconNode = [
    ["path", { "d": "M11 12H3" }],
    ["path", { "d": "M16 6H3" }],
    ["path", { "d": "M16 18H3" }],
    ["path", { "d": "M18 9v6" }],
    ["path", { "d": "M21 12h-6" }]
  ];
  Icon($$anchor, spread_props({ name: "list-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_plus);

// node_modules/lucide-svelte/dist/icons/list-restart.svelte
mark_module_start();
List_restart[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-restart.svelte";
function List_restart($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_restart);
  const iconNode = [
    ["path", { "d": "M21 6H3" }],
    ["path", { "d": "M7 12H3" }],
    ["path", { "d": "M7 18H3" }],
    [
      "path",
      {
        "d": "M12 18a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L11 14"
      }
    ],
    ["path", { "d": "M11 10v4h4" }]
  ];
  Icon($$anchor, spread_props({ name: "list-restart" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_restart, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_restart);

// node_modules/lucide-svelte/dist/icons/list-start.svelte
mark_module_start();
List_start[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-start.svelte";
function List_start($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_start);
  const iconNode = [
    ["path", { "d": "M16 12H3" }],
    ["path", { "d": "M16 18H3" }],
    ["path", { "d": "M10 6H3" }],
    [
      "path",
      { "d": "M21 18V8a2 2 0 0 0-2-2h-5" }
    ],
    ["path", { "d": "m16 8-2-2 2-2" }]
  ];
  Icon($$anchor, spread_props({ name: "list-start" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_start, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_start);

// node_modules/lucide-svelte/dist/icons/list-todo.svelte
mark_module_start();
List_todo[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-todo.svelte";
function List_todo($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_todo);
  const iconNode = [
    [
      "rect",
      {
        "x": "3",
        "y": "5",
        "width": "6",
        "height": "6",
        "rx": "1"
      }
    ],
    ["path", { "d": "m3 17 2 2 4-4" }],
    ["path", { "d": "M13 6h8" }],
    ["path", { "d": "M13 12h8" }],
    ["path", { "d": "M13 18h8" }]
  ];
  Icon($$anchor, spread_props({ name: "list-todo" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_todo, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_todo);

// node_modules/lucide-svelte/dist/icons/list-tree.svelte
mark_module_start();
List_tree[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-tree.svelte";
function List_tree($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_tree);
  const iconNode = [
    ["path", { "d": "M21 12h-8" }],
    ["path", { "d": "M21 6H8" }],
    ["path", { "d": "M21 18h-8" }],
    ["path", { "d": "M3 6v4c0 1.1.9 2 2 2h3" }],
    ["path", { "d": "M3 10v6c0 1.1.9 2 2 2h3" }]
  ];
  Icon($$anchor, spread_props({ name: "list-tree" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_tree, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_tree);

// node_modules/lucide-svelte/dist/icons/list-video.svelte
mark_module_start();
List_video[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-video.svelte";
function List_video($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_video);
  const iconNode = [
    ["path", { "d": "M12 12H3" }],
    ["path", { "d": "M16 6H3" }],
    ["path", { "d": "M12 18H3" }],
    ["path", { "d": "m16 12 5 3-5 3v-6Z" }]
  ];
  Icon($$anchor, spread_props({ name: "list-video" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_video, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_video);

// node_modules/lucide-svelte/dist/icons/list-x.svelte
mark_module_start();
List_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list-x.svelte";
function List_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List_x);
  const iconNode = [
    ["path", { "d": "M11 12H3" }],
    ["path", { "d": "M16 6H3" }],
    ["path", { "d": "M16 18H3" }],
    ["path", { "d": "m19 10-4 4" }],
    ["path", { "d": "m15 10 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "list-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List_x);

// node_modules/lucide-svelte/dist/icons/list.svelte
mark_module_start();
List[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/list.svelte";
function List($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, List);
  const iconNode = [
    ["path", { "d": "M3 12h.01" }],
    ["path", { "d": "M3 18h.01" }],
    ["path", { "d": "M3 6h.01" }],
    ["path", { "d": "M8 12h13" }],
    ["path", { "d": "M8 18h13" }],
    ["path", { "d": "M8 6h13" }]
  ];
  Icon($$anchor, spread_props({ name: "list" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(List, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(List);

// node_modules/lucide-svelte/dist/icons/loader-circle.svelte
mark_module_start();
Loader_circle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/loader-circle.svelte";
function Loader_circle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Loader_circle);
  const iconNode = [
    [
      "path",
      { "d": "M21 12a9 9 0 1 1-6.219-8.56" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "loader-circle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Loader_circle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Loader_circle);

// node_modules/lucide-svelte/dist/icons/loader-pinwheel.svelte
mark_module_start();
Loader_pinwheel[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/loader-pinwheel.svelte";
function Loader_pinwheel($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Loader_pinwheel);
  const iconNode = [
    [
      "path",
      { "d": "M22 12a1 1 0 0 1-10 0 1 1 0 0 0-10 0" }
    ],
    [
      "path",
      { "d": "M7 20.7a1 1 0 1 1 5-8.7 1 1 0 1 0 5-8.6" }
    ],
    [
      "path",
      { "d": "M7 3.3a1 1 0 1 1 5 8.6 1 1 0 1 0 5 8.6" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "loader-pinwheel" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Loader_pinwheel, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Loader_pinwheel);

// node_modules/lucide-svelte/dist/icons/loader.svelte
mark_module_start();
Loader[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/loader.svelte";
function Loader($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Loader);
  const iconNode = [
    ["path", { "d": "M12 2v4" }],
    ["path", { "d": "m16.2 7.8 2.9-2.9" }],
    ["path", { "d": "M18 12h4" }],
    ["path", { "d": "m16.2 16.2 2.9 2.9" }],
    ["path", { "d": "M12 18v4" }],
    ["path", { "d": "m4.9 19.1 2.9-2.9" }],
    ["path", { "d": "M2 12h4" }],
    ["path", { "d": "m4.9 4.9 2.9 2.9" }]
  ];
  Icon($$anchor, spread_props({ name: "loader" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Loader, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Loader);

// node_modules/lucide-svelte/dist/icons/locate-fixed.svelte
mark_module_start();
Locate_fixed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/locate-fixed.svelte";
function Locate_fixed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Locate_fixed);
  const iconNode = [
    [
      "line",
      {
        "x1": "2",
        "x2": "5",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "19",
        "x2": "22",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "2",
        "y2": "5"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "19",
        "y2": "22"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "7" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "locate-fixed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Locate_fixed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Locate_fixed);

// node_modules/lucide-svelte/dist/icons/locate-off.svelte
mark_module_start();
Locate_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/locate-off.svelte";
function Locate_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Locate_off);
  const iconNode = [
    [
      "line",
      {
        "x1": "2",
        "x2": "5",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "19",
        "x2": "22",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "2",
        "y2": "5"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "19",
        "y2": "22"
      }
    ],
    [
      "path",
      {
        "d": "M7.11 7.11C5.83 8.39 5 10.1 5 12c0 3.87 3.13 7 7 7 1.9 0 3.61-.83 4.89-2.11"
      }
    ],
    [
      "path",
      {
        "d": "M18.71 13.96c.19-.63.29-1.29.29-1.96 0-3.87-3.13-7-7-7-.67 0-1.33.1-1.96.29"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "locate-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Locate_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Locate_off);

// node_modules/lucide-svelte/dist/icons/locate.svelte
mark_module_start();
Locate[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/locate.svelte";
function Locate($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Locate);
  const iconNode = [
    [
      "line",
      {
        "x1": "2",
        "x2": "5",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "19",
        "x2": "22",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "2",
        "y2": "5"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "19",
        "y2": "22"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "7" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "locate" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Locate, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Locate);

// node_modules/lucide-svelte/dist/icons/lock-keyhole-open.svelte
mark_module_start();
Lock_keyhole_open[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lock-keyhole-open.svelte";
function Lock_keyhole_open($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lock_keyhole_open);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "16", "r": "1" }
    ],
    [
      "rect",
      {
        "width": "18",
        "height": "12",
        "x": "3",
        "y": "10",
        "rx": "2"
      }
    ],
    [
      "path",
      { "d": "M7 10V7a5 5 0 0 1 9.33-2.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "lock-keyhole-open" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lock_keyhole_open, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lock_keyhole_open);

// node_modules/lucide-svelte/dist/icons/lock-keyhole.svelte
mark_module_start();
Lock_keyhole[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lock-keyhole.svelte";
function Lock_keyhole($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lock_keyhole);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "16", "r": "1" }
    ],
    [
      "rect",
      {
        "x": "3",
        "y": "10",
        "width": "18",
        "height": "12",
        "rx": "2"
      }
    ],
    ["path", { "d": "M7 10V7a5 5 0 0 1 10 0v3" }]
  ];
  Icon($$anchor, spread_props({ name: "lock-keyhole" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lock_keyhole, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lock_keyhole);

// node_modules/lucide-svelte/dist/icons/lock-open.svelte
mark_module_start();
Lock_open[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lock-open.svelte";
function Lock_open($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lock_open);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "11",
        "x": "3",
        "y": "11",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["path", { "d": "M7 11V7a5 5 0 0 1 9.9-1" }]
  ];
  Icon($$anchor, spread_props({ name: "lock-open" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lock_open, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lock_open);

// node_modules/lucide-svelte/dist/icons/lock.svelte
mark_module_start();
Lock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lock.svelte";
function Lock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lock);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "11",
        "x": "3",
        "y": "11",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["path", { "d": "M7 11V7a5 5 0 0 1 10 0v4" }]
  ];
  Icon($$anchor, spread_props({ name: "lock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lock);

// node_modules/lucide-svelte/dist/icons/log-in.svelte
mark_module_start();
Log_in[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/log-in.svelte";
function Log_in($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Log_in);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"
      }
    ],
    [
      "polyline",
      { "points": "10 17 15 12 10 7" }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "3",
        "y1": "12",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "log-in" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Log_in, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Log_in);

// node_modules/lucide-svelte/dist/icons/log-out.svelte
mark_module_start();
Log_out[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/log-out.svelte";
function Log_out($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Log_out);
  const iconNode = [
    [
      "path",
      { "d": "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" }
    ],
    [
      "polyline",
      { "points": "16 17 21 12 16 7" }
    ],
    [
      "line",
      {
        "x1": "21",
        "x2": "9",
        "y1": "12",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "log-out" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Log_out, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Log_out);

// node_modules/lucide-svelte/dist/icons/logs.svelte
mark_module_start();
Logs[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/logs.svelte";
function Logs($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Logs);
  const iconNode = [
    ["path", { "d": "M13 12h8" }],
    ["path", { "d": "M13 18h8" }],
    ["path", { "d": "M13 6h8" }],
    ["path", { "d": "M3 12h1" }],
    ["path", { "d": "M3 18h1" }],
    ["path", { "d": "M3 6h1" }],
    ["path", { "d": "M8 12h1" }],
    ["path", { "d": "M8 18h1" }],
    ["path", { "d": "M8 6h1" }]
  ];
  Icon($$anchor, spread_props({ name: "logs" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Logs, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Logs);

// node_modules/lucide-svelte/dist/icons/lollipop.svelte
mark_module_start();
Lollipop[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/lollipop.svelte";
function Lollipop($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Lollipop);
  const iconNode = [
    [
      "circle",
      { "cx": "11", "cy": "11", "r": "8" }
    ],
    ["path", { "d": "m21 21-4.3-4.3" }],
    [
      "path",
      {
        "d": "M11 11a2 2 0 0 0 4 0 4 4 0 0 0-8 0 6 6 0 0 0 12 0"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "lollipop" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Lollipop, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Lollipop);

// node_modules/lucide-svelte/dist/icons/luggage.svelte
mark_module_start();
Luggage[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/luggage.svelte";
function Luggage($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Luggage);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 20a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2"
      }
    ],
    [
      "path",
      {
        "d": "M8 18V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v14"
      }
    ],
    ["path", { "d": "M10 20h4" }],
    [
      "circle",
      { "cx": "16", "cy": "20", "r": "2" }
    ],
    [
      "circle",
      { "cx": "8", "cy": "20", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "luggage" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Luggage, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Luggage);

// node_modules/lucide-svelte/dist/icons/magnet.svelte
mark_module_start();
Magnet[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/magnet.svelte";
function Magnet($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Magnet);
  const iconNode = [
    [
      "path",
      {
        "d": "m6 15-4-4 6.75-6.77a7.79 7.79 0 0 1 11 11L13 22l-4-4 6.39-6.36a2.14 2.14 0 0 0-3-3L6 15"
      }
    ],
    ["path", { "d": "m5 8 4 4" }],
    ["path", { "d": "m12 15 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "magnet" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Magnet, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Magnet);

// node_modules/lucide-svelte/dist/icons/mail-check.svelte
mark_module_start();
Mail_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mail-check.svelte";
function Mail_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mail_check);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8"
      }
    ],
    [
      "path",
      {
        "d": "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
      }
    ],
    ["path", { "d": "m16 19 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "mail-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mail_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mail_check);

// node_modules/lucide-svelte/dist/icons/mail-minus.svelte
mark_module_start();
Mail_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mail-minus.svelte";
function Mail_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mail_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 15V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8"
      }
    ],
    [
      "path",
      {
        "d": "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
      }
    ],
    ["path", { "d": "M16 19h6" }]
  ];
  Icon($$anchor, spread_props({ name: "mail-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mail_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mail_minus);

// node_modules/lucide-svelte/dist/icons/mail-open.svelte
mark_module_start();
Mail_open[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mail-open.svelte";
function Mail_open($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mail_open);
  const iconNode = [
    [
      "path",
      {
        "d": "M21.2 8.4c.5.38.8.97.8 1.6v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V10a2 2 0 0 1 .8-1.6l8-6a2 2 0 0 1 2.4 0l8 6Z"
      }
    ],
    [
      "path",
      {
        "d": "m22 10-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 10"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "mail-open" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mail_open, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mail_open);

// node_modules/lucide-svelte/dist/icons/mail-plus.svelte
mark_module_start();
Mail_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mail-plus.svelte";
function Mail_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mail_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8"
      }
    ],
    [
      "path",
      {
        "d": "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
      }
    ],
    ["path", { "d": "M19 16v6" }],
    ["path", { "d": "M16 19h6" }]
  ];
  Icon($$anchor, spread_props({ name: "mail-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mail_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mail_plus);

// node_modules/lucide-svelte/dist/icons/mail-question.svelte
mark_module_start();
Mail_question[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mail-question.svelte";
function Mail_question($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mail_question);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5"
      }
    ],
    [
      "path",
      {
        "d": "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
      }
    ],
    [
      "path",
      {
        "d": "M18 15.28c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2"
      }
    ],
    ["path", { "d": "M20 22v.01" }]
  ];
  Icon($$anchor, spread_props({ name: "mail-question" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mail_question, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mail_question);

// node_modules/lucide-svelte/dist/icons/mail-search.svelte
mark_module_start();
Mail_search[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mail-search.svelte";
function Mail_search($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mail_search);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 12.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h7.5"
      }
    ],
    [
      "path",
      {
        "d": "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
      }
    ],
    [
      "path",
      { "d": "M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "3" }
    ],
    ["path", { "d": "m22 22-1.5-1.5" }]
  ];
  Icon($$anchor, spread_props({ name: "mail-search" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mail_search, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mail_search);

// node_modules/lucide-svelte/dist/icons/mail-warning.svelte
mark_module_start();
Mail_warning[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mail-warning.svelte";
function Mail_warning($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mail_warning);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5"
      }
    ],
    [
      "path",
      {
        "d": "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
      }
    ],
    ["path", { "d": "M20 14v4" }],
    ["path", { "d": "M20 22v.01" }]
  ];
  Icon($$anchor, spread_props({ name: "mail-warning" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mail_warning, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mail_warning);

// node_modules/lucide-svelte/dist/icons/mail-x.svelte
mark_module_start();
Mail_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mail-x.svelte";
function Mail_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mail_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h9"
      }
    ],
    [
      "path",
      {
        "d": "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
      }
    ],
    ["path", { "d": "m17 17 4 4" }],
    ["path", { "d": "m21 17-4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "mail-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mail_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mail_x);

// node_modules/lucide-svelte/dist/icons/mail.svelte
mark_module_start();
Mail[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mail.svelte";
function Mail($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mail);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "16",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ],
    [
      "path",
      {
        "d": "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "mail" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mail, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mail);

// node_modules/lucide-svelte/dist/icons/mailbox.svelte
mark_module_start();
Mailbox[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mailbox.svelte";
function Mailbox($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mailbox);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9.5C2 7 4 5 6.5 5H18c2.2 0 4 1.8 4 4v8Z"
      }
    ],
    ["polyline", { "points": "15,9 18,9 18,11" }],
    [
      "path",
      { "d": "M6.5 5C9 5 11 7 11 9.5V17a2 2 0 0 1-2 2" }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "7",
        "y1": "10",
        "y2": "10"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "mailbox" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mailbox, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mailbox);

// node_modules/lucide-svelte/dist/icons/mails.svelte
mark_module_start();
Mails[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mails.svelte";
function Mails($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mails);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "13",
        "x": "6",
        "y": "4",
        "rx": "2"
      }
    ],
    [
      "path",
      { "d": "m22 7-7.1 3.78c-.57.3-1.23.3-1.8 0L6 7" }
    ],
    ["path", { "d": "M2 8v11c0 1.1.9 2 2 2h14" }]
  ];
  Icon($$anchor, spread_props({ name: "mails" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mails, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mails);

// node_modules/lucide-svelte/dist/icons/map-pin-check-inside.svelte
mark_module_start();
Map_pin_check_inside[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pin-check-inside.svelte";
function Map_pin_check_inside($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pin_check_inside);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"
      }
    ],
    ["path", { "d": "m9 10 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "map-pin-check-inside" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pin_check_inside, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pin_check_inside);

// node_modules/lucide-svelte/dist/icons/map-pin-check.svelte
mark_module_start();
Map_pin_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pin-check.svelte";
function Map_pin_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pin_check);
  const iconNode = [
    [
      "path",
      {
        "d": "M19.43 12.935c.357-.967.57-1.955.57-2.935a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32.197 32.197 0 0 0 .813-.728"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "3" }
    ],
    ["path", { "d": "m16 18 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "map-pin-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pin_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pin_check);

// node_modules/lucide-svelte/dist/icons/map-pin-house.svelte
mark_module_start();
Map_pin_house[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pin-house.svelte";
function Map_pin_house($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pin_house);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 22a1 1 0 0 1-1-1v-4a1 1 0 0 1 .445-.832l3-2a1 1 0 0 1 1.11 0l3 2A1 1 0 0 1 22 17v4a1 1 0 0 1-1 1z"
      }
    ],
    [
      "path",
      {
        "d": "M18 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 .601.2"
      }
    ],
    ["path", { "d": "M18 22v-3" }],
    [
      "circle",
      { "cx": "10", "cy": "10", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "map-pin-house" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pin_house, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pin_house);

// node_modules/lucide-svelte/dist/icons/map-pin-minus-inside.svelte
mark_module_start();
Map_pin_minus_inside[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pin-minus-inside.svelte";
function Map_pin_minus_inside($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pin_minus_inside);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"
      }
    ],
    ["path", { "d": "M9 10h6" }]
  ];
  Icon($$anchor, spread_props({ name: "map-pin-minus-inside" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pin_minus_inside, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pin_minus_inside);

// node_modules/lucide-svelte/dist/icons/map-pin-minus.svelte
mark_module_start();
Map_pin_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pin-minus.svelte";
function Map_pin_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pin_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M18.977 14C19.6 12.701 20 11.343 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32 32 0 0 0 .824-.738"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "3" }
    ],
    ["path", { "d": "M16 18h6" }]
  ];
  Icon($$anchor, spread_props({ name: "map-pin-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pin_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pin_minus);

// node_modules/lucide-svelte/dist/icons/map-pin-off.svelte
mark_module_start();
Map_pin_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pin-off.svelte";
function Map_pin_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pin_off);
  const iconNode = [
    [
      "path",
      { "d": "M12.75 7.09a3 3 0 0 1 2.16 2.16" }
    ],
    [
      "path",
      {
        "d": "M17.072 17.072c-1.634 2.17-3.527 3.912-4.471 4.727a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 1.432-4.568"
      }
    ],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      {
        "d": "M8.475 2.818A8 8 0 0 1 20 10c0 1.183-.31 2.377-.81 3.533"
      }
    ],
    [
      "path",
      { "d": "M9.13 9.13a3 3 0 0 0 3.74 3.74" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "map-pin-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pin_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pin_off);

// node_modules/lucide-svelte/dist/icons/map-pin-plus-inside.svelte
mark_module_start();
Map_pin_plus_inside[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pin-plus-inside.svelte";
function Map_pin_plus_inside($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pin_plus_inside);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"
      }
    ],
    ["path", { "d": "M12 7v6" }],
    ["path", { "d": "M9 10h6" }]
  ];
  Icon($$anchor, spread_props({ name: "map-pin-plus-inside" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pin_plus_inside, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pin_plus_inside);

// node_modules/lucide-svelte/dist/icons/map-pin-plus.svelte
mark_module_start();
Map_pin_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pin-plus.svelte";
function Map_pin_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pin_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "M19.914 11.105A7.298 7.298 0 0 0 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32 32 0 0 0 .824-.738"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "3" }
    ],
    ["path", { "d": "M16 18h6" }],
    ["path", { "d": "M19 15v6" }]
  ];
  Icon($$anchor, spread_props({ name: "map-pin-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pin_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pin_plus);

// node_modules/lucide-svelte/dist/icons/map-pin-x-inside.svelte
mark_module_start();
Map_pin_x_inside[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pin-x-inside.svelte";
function Map_pin_x_inside($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pin_x_inside);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"
      }
    ],
    ["path", { "d": "m14.5 7.5-5 5" }],
    ["path", { "d": "m9.5 7.5 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "map-pin-x-inside" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pin_x_inside, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pin_x_inside);

// node_modules/lucide-svelte/dist/icons/map-pin-x.svelte
mark_module_start();
Map_pin_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pin-x.svelte";
function Map_pin_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pin_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M19.752 11.901A7.78 7.78 0 0 0 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 19 19 0 0 0 .09-.077"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "3" }
    ],
    ["path", { "d": "m21.5 15.5-5 5" }],
    ["path", { "d": "m21.5 20.5-5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "map-pin-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pin_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pin_x);

// node_modules/lucide-svelte/dist/icons/map-pin.svelte
mark_module_start();
Map_pin[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pin.svelte";
function Map_pin($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pin);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "map-pin" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pin, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pin);

// node_modules/lucide-svelte/dist/icons/map-pinned.svelte
mark_module_start();
Map_pinned[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map-pinned.svelte";
function Map_pinned($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map_pinned);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 8c0 3.613-3.869 7.429-5.393 8.795a1 1 0 0 1-1.214 0C9.87 15.429 6 11.613 6 8a6 6 0 0 1 12 0"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "8", "r": "2" }
    ],
    [
      "path",
      {
        "d": "M8.714 14h-3.71a1 1 0 0 0-.948.683l-2.004 6A1 1 0 0 0 3 22h18a1 1 0 0 0 .948-1.316l-2-6a1 1 0 0 0-.949-.684h-3.712"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "map-pinned" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map_pinned, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map_pinned);

// node_modules/lucide-svelte/dist/icons/map.svelte
mark_module_start();
Map[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/map.svelte";
function Map($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Map);
  const iconNode = [
    [
      "path",
      {
        "d": "M14.106 5.553a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619v12.764a1 1 0 0 1-.553.894l-4.553 2.277a2 2 0 0 1-1.788 0l-4.212-2.106a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0z"
      }
    ],
    ["path", { "d": "M15 5.764v15" }],
    ["path", { "d": "M9 3.236v15" }]
  ];
  Icon($$anchor, spread_props({ name: "map" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Map, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Map);

// node_modules/lucide-svelte/dist/icons/martini.svelte
mark_module_start();
Martini[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/martini.svelte";
function Martini($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Martini);
  const iconNode = [
    ["path", { "d": "M8 22h8" }],
    ["path", { "d": "M12 11v11" }],
    ["path", { "d": "m19 3-7 8-7-8Z" }]
  ];
  Icon($$anchor, spread_props({ name: "martini" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Martini, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Martini);

// node_modules/lucide-svelte/dist/icons/maximize-2.svelte
mark_module_start();
Maximize_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/maximize-2.svelte";
function Maximize_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Maximize_2);
  const iconNode = [
    ["polyline", { "points": "15 3 21 3 21 9" }],
    ["polyline", { "points": "9 21 3 21 3 15" }],
    [
      "line",
      {
        "x1": "21",
        "x2": "14",
        "y1": "3",
        "y2": "10"
      }
    ],
    [
      "line",
      {
        "x1": "3",
        "x2": "10",
        "y1": "21",
        "y2": "14"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "maximize-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Maximize_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Maximize_2);

// node_modules/lucide-svelte/dist/icons/maximize.svelte
mark_module_start();
Maximize[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/maximize.svelte";
function Maximize($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Maximize);
  const iconNode = [
    ["path", { "d": "M8 3H5a2 2 0 0 0-2 2v3" }],
    ["path", { "d": "M21 8V5a2 2 0 0 0-2-2h-3" }],
    ["path", { "d": "M3 16v3a2 2 0 0 0 2 2h3" }],
    [
      "path",
      { "d": "M16 21h3a2 2 0 0 0 2-2v-3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "maximize" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Maximize, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Maximize);

// node_modules/lucide-svelte/dist/icons/medal.svelte
mark_module_start();
Medal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/medal.svelte";
function Medal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Medal);
  const iconNode = [
    [
      "path",
      {
        "d": "M7.21 15 2.66 7.14a2 2 0 0 1 .13-2.2L4.4 2.8A2 2 0 0 1 6 2h12a2 2 0 0 1 1.6.8l1.6 2.14a2 2 0 0 1 .14 2.2L16.79 15"
      }
    ],
    ["path", { "d": "M11 12 5.12 2.2" }],
    ["path", { "d": "m13 12 5.88-9.8" }],
    ["path", { "d": "M8 7h8" }],
    [
      "circle",
      { "cx": "12", "cy": "17", "r": "5" }
    ],
    ["path", { "d": "M12 18v-2h-.5" }]
  ];
  Icon($$anchor, spread_props({ name: "medal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Medal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Medal);

// node_modules/lucide-svelte/dist/icons/megaphone-off.svelte
mark_module_start();
Megaphone_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/megaphone-off.svelte";
function Megaphone_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Megaphone_off);
  const iconNode = [
    [
      "path",
      { "d": "M9.26 9.26 3 11v3l14.14 3.14" }
    ],
    ["path", { "d": "M21 15.34V6l-7.31 2.03" }],
    [
      "path",
      { "d": "M11.6 16.8a3 3 0 1 1-5.8-1.6" }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "megaphone-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Megaphone_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Megaphone_off);

// node_modules/lucide-svelte/dist/icons/megaphone.svelte
mark_module_start();
Megaphone[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/megaphone.svelte";
function Megaphone($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Megaphone);
  const iconNode = [
    ["path", { "d": "m3 11 18-5v12L3 14v-3z" }],
    [
      "path",
      { "d": "M11.6 16.8a3 3 0 1 1-5.8-1.6" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "megaphone" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Megaphone, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Megaphone);

// node_modules/lucide-svelte/dist/icons/meh.svelte
mark_module_start();
Meh[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/meh.svelte";
function Meh($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Meh);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "16",
        "y1": "15",
        "y2": "15"
      }
    ],
    [
      "line",
      {
        "x1": "9",
        "x2": "9.01",
        "y1": "9",
        "y2": "9"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "15.01",
        "y1": "9",
        "y2": "9"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "meh" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Meh, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Meh);

// node_modules/lucide-svelte/dist/icons/memory-stick.svelte
mark_module_start();
Memory_stick[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/memory-stick.svelte";
function Memory_stick($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Memory_stick);
  const iconNode = [
    ["path", { "d": "M6 19v-3" }],
    ["path", { "d": "M10 19v-3" }],
    ["path", { "d": "M14 19v-3" }],
    ["path", { "d": "M18 19v-3" }],
    ["path", { "d": "M8 11V9" }],
    ["path", { "d": "M16 11V9" }],
    ["path", { "d": "M12 11V9" }],
    ["path", { "d": "M2 15h20" }],
    [
      "path",
      {
        "d": "M2 7a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v1.1a2 2 0 0 0 0 3.837V17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-5.1a2 2 0 0 0 0-3.837Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "memory-stick" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Memory_stick, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Memory_stick);

// node_modules/lucide-svelte/dist/icons/menu.svelte
mark_module_start();
Menu[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/menu.svelte";
function Menu($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Menu);
  const iconNode = [
    [
      "line",
      {
        "x1": "4",
        "x2": "20",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      { "x1": "4", "x2": "20", "y1": "6", "y2": "6" }
    ],
    [
      "line",
      {
        "x1": "4",
        "x2": "20",
        "y1": "18",
        "y2": "18"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "menu" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Menu, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Menu);

// node_modules/lucide-svelte/dist/icons/merge.svelte
mark_module_start();
Merge[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/merge.svelte";
function Merge($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Merge);
  const iconNode = [
    ["path", { "d": "m8 6 4-4 4 4" }],
    [
      "path",
      { "d": "M12 2v10.3a4 4 0 0 1-1.172 2.872L4 22" }
    ],
    ["path", { "d": "m20 22-5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "merge" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Merge, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Merge);

// node_modules/lucide-svelte/dist/icons/message-circle-code.svelte
mark_module_start();
Message_circle_code[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-circle-code.svelte";
function Message_circle_code($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_circle_code);
  const iconNode = [
    ["path", { "d": "M10 9.5 8 12l2 2.5" }],
    ["path", { "d": "m14 9.5 2 2.5-2 2.5" }],
    [
      "path",
      { "d": "M7.9 20A9 9 0 1 0 4 16.1L2 22z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-circle-code" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_circle_code, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_circle_code);

// node_modules/lucide-svelte/dist/icons/message-circle-dashed.svelte
mark_module_start();
Message_circle_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-circle-dashed.svelte";
function Message_circle_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_circle_dashed);
  const iconNode = [
    [
      "path",
      { "d": "M13.5 3.1c-.5 0-1-.1-1.5-.1s-1 .1-1.5.1" }
    ],
    [
      "path",
      { "d": "M19.3 6.8a10.45 10.45 0 0 0-2.1-2.1" }
    ],
    [
      "path",
      {
        "d": "M20.9 13.5c.1-.5.1-1 .1-1.5s-.1-1-.1-1.5"
      }
    ],
    [
      "path",
      { "d": "M17.2 19.3a10.45 10.45 0 0 0 2.1-2.1" }
    ],
    [
      "path",
      { "d": "M10.5 20.9c.5.1 1 .1 1.5.1s1-.1 1.5-.1" }
    ],
    ["path", { "d": "M3.5 17.5 2 22l4.5-1.5" }],
    [
      "path",
      { "d": "M3.1 10.5c0 .5-.1 1-.1 1.5s.1 1 .1 1.5" }
    ],
    [
      "path",
      { "d": "M6.8 4.7a10.45 10.45 0 0 0-2.1 2.1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-circle-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_circle_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_circle_dashed);

// node_modules/lucide-svelte/dist/icons/message-circle-heart.svelte
mark_module_start();
Message_circle_heart[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-circle-heart.svelte";
function Message_circle_heart($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_circle_heart);
  const iconNode = [
    [
      "path",
      { "d": "M7.9 20A9 9 0 1 0 4 16.1L2 22Z" }
    ],
    [
      "path",
      {
        "d": "M15.8 9.2a2.5 2.5 0 0 0-3.5 0l-.3.4-.35-.3a2.42 2.42 0 1 0-3.2 3.6l3.6 3.5 3.6-3.5c1.2-1.2 1.1-2.7.2-3.7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-circle-heart" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_circle_heart, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_circle_heart);

// node_modules/lucide-svelte/dist/icons/message-circle-more.svelte
mark_module_start();
Message_circle_more[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-circle-more.svelte";
function Message_circle_more($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_circle_more);
  const iconNode = [
    [
      "path",
      { "d": "M7.9 20A9 9 0 1 0 4 16.1L2 22Z" }
    ],
    ["path", { "d": "M8 12h.01" }],
    ["path", { "d": "M12 12h.01" }],
    ["path", { "d": "M16 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "message-circle-more" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_circle_more, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_circle_more);

// node_modules/lucide-svelte/dist/icons/message-circle-off.svelte
mark_module_start();
Message_circle_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-circle-off.svelte";
function Message_circle_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_circle_off);
  const iconNode = [
    [
      "path",
      { "d": "M20.5 14.9A9 9 0 0 0 9.1 3.5" }
    ],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      {
        "d": "M5.6 5.6C3 8.3 2.2 12.5 4 16l-2 6 6-2c3.4 1.8 7.6 1.1 10.3-1.7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-circle-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_circle_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_circle_off);

// node_modules/lucide-svelte/dist/icons/message-circle-plus.svelte
mark_module_start();
Message_circle_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-circle-plus.svelte";
function Message_circle_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_circle_plus);
  const iconNode = [
    [
      "path",
      { "d": "M7.9 20A9 9 0 1 0 4 16.1L2 22Z" }
    ],
    ["path", { "d": "M8 12h8" }],
    ["path", { "d": "M12 8v8" }]
  ];
  Icon($$anchor, spread_props({ name: "message-circle-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_circle_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_circle_plus);

// node_modules/lucide-svelte/dist/icons/message-circle-question.svelte
mark_module_start();
Message_circle_question[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-circle-question.svelte";
function Message_circle_question($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_circle_question);
  const iconNode = [
    [
      "path",
      { "d": "M7.9 20A9 9 0 1 0 4 16.1L2 22Z" }
    ],
    [
      "path",
      { "d": "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3" }
    ],
    ["path", { "d": "M12 17h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "message-circle-question" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_circle_question, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_circle_question);

// node_modules/lucide-svelte/dist/icons/message-circle-reply.svelte
mark_module_start();
Message_circle_reply[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-circle-reply.svelte";
function Message_circle_reply($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_circle_reply);
  const iconNode = [
    [
      "path",
      { "d": "M7.9 20A9 9 0 1 0 4 16.1L2 22Z" }
    ],
    ["path", { "d": "m10 15-3-3 3-3" }],
    ["path", { "d": "M7 12h7a2 2 0 0 1 2 2v1" }]
  ];
  Icon($$anchor, spread_props({ name: "message-circle-reply" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_circle_reply, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_circle_reply);

// node_modules/lucide-svelte/dist/icons/message-circle-warning.svelte
mark_module_start();
Message_circle_warning[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-circle-warning.svelte";
function Message_circle_warning($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_circle_warning);
  const iconNode = [
    [
      "path",
      { "d": "M7.9 20A9 9 0 1 0 4 16.1L2 22Z" }
    ],
    ["path", { "d": "M12 8v4" }],
    ["path", { "d": "M12 16h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "message-circle-warning" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_circle_warning, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_circle_warning);

// node_modules/lucide-svelte/dist/icons/message-circle-x.svelte
mark_module_start();
Message_circle_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-circle-x.svelte";
function Message_circle_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_circle_x);
  const iconNode = [
    [
      "path",
      { "d": "M7.9 20A9 9 0 1 0 4 16.1L2 22Z" }
    ],
    ["path", { "d": "m15 9-6 6" }],
    ["path", { "d": "m9 9 6 6" }]
  ];
  Icon($$anchor, spread_props({ name: "message-circle-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_circle_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_circle_x);

// node_modules/lucide-svelte/dist/icons/message-circle.svelte
mark_module_start();
Message_circle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-circle.svelte";
function Message_circle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_circle);
  const iconNode = [
    [
      "path",
      { "d": "M7.9 20A9 9 0 1 0 4 16.1L2 22Z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-circle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_circle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_circle);

// node_modules/lucide-svelte/dist/icons/message-square-code.svelte
mark_module_start();
Message_square_code[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-code.svelte";
function Message_square_code($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_code);
  const iconNode = [
    ["path", { "d": "M10 7.5 8 10l2 2.5" }],
    ["path", { "d": "m14 7.5 2 2.5-2 2.5" }],
    [
      "path",
      {
        "d": "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-square-code" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_code, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_code);

// node_modules/lucide-svelte/dist/icons/message-square-dashed.svelte
mark_module_start();
Message_square_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-dashed.svelte";
function Message_square_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_dashed);
  const iconNode = [
    ["path", { "d": "M10 17H7l-4 4v-7" }],
    ["path", { "d": "M14 17h1" }],
    ["path", { "d": "M14 3h1" }],
    ["path", { "d": "M19 3a2 2 0 0 1 2 2" }],
    ["path", { "d": "M21 14v1a2 2 0 0 1-2 2" }],
    ["path", { "d": "M21 9v1" }],
    ["path", { "d": "M3 9v1" }],
    ["path", { "d": "M5 3a2 2 0 0 0-2 2" }],
    ["path", { "d": "M9 3h1" }]
  ];
  Icon($$anchor, spread_props({ name: "message-square-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_dashed);

// node_modules/lucide-svelte/dist/icons/message-square-diff.svelte
mark_module_start();
Message_square_diff[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-diff.svelte";
function Message_square_diff($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_diff);
  const iconNode = [
    [
      "path",
      {
        "d": "m5 19-2 2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2"
      }
    ],
    ["path", { "d": "M9 10h6" }],
    ["path", { "d": "M12 7v6" }],
    ["path", { "d": "M9 17h6" }]
  ];
  Icon($$anchor, spread_props({ name: "message-square-diff" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_diff, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_diff);

// node_modules/lucide-svelte/dist/icons/message-square-dot.svelte
mark_module_start();
Message_square_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-dot.svelte";
function Message_square_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_dot);
  const iconNode = [
    [
      "path",
      {
        "d": "M11.7 3H5a2 2 0 0 0-2 2v16l4-4h12a2 2 0 0 0 2-2v-2.7"
      }
    ],
    [
      "circle",
      { "cx": "18", "cy": "6", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-square-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_dot);

// node_modules/lucide-svelte/dist/icons/message-square-heart.svelte
mark_module_start();
Message_square_heart[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-heart.svelte";
function Message_square_heart($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_heart);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
      }
    ],
    [
      "path",
      {
        "d": "M14.8 7.5a1.84 1.84 0 0 0-2.6 0l-.2.3-.3-.3a1.84 1.84 0 1 0-2.4 2.8L12 13l2.7-2.7c.9-.9.8-2.1.1-2.8"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-square-heart" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_heart, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_heart);

// node_modules/lucide-svelte/dist/icons/message-square-lock.svelte
mark_module_start();
Message_square_lock[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-lock.svelte";
function Message_square_lock($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_lock);
  const iconNode = [
    [
      "path",
      { "d": "M19 15v-2a2 2 0 1 0-4 0v2" }
    ],
    [
      "path",
      {
        "d": "M9 17H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v3.5"
      }
    ],
    [
      "rect",
      {
        "x": "13",
        "y": "15",
        "width": "8",
        "height": "5",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-square-lock" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_lock, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_lock);

// node_modules/lucide-svelte/dist/icons/message-square-more.svelte
mark_module_start();
Message_square_more[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-more.svelte";
function Message_square_more($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_more);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
      }
    ],
    ["path", { "d": "M8 10h.01" }],
    ["path", { "d": "M12 10h.01" }],
    ["path", { "d": "M16 10h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "message-square-more" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_more, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_more);

// node_modules/lucide-svelte/dist/icons/message-square-off.svelte
mark_module_start();
Message_square_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-off.svelte";
function Message_square_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_off);
  const iconNode = [
    ["path", { "d": "M21 15V5a2 2 0 0 0-2-2H9" }],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      { "d": "M3.6 3.6c-.4.3-.6.8-.6 1.4v16l4-4h10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-square-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_off);

// node_modules/lucide-svelte/dist/icons/message-square-plus.svelte
mark_module_start();
Message_square_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-plus.svelte";
function Message_square_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
      }
    ],
    ["path", { "d": "M12 7v6" }],
    ["path", { "d": "M9 10h6" }]
  ];
  Icon($$anchor, spread_props({ name: "message-square-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_plus);

// node_modules/lucide-svelte/dist/icons/message-square-quote.svelte
mark_module_start();
Message_square_quote[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-quote.svelte";
function Message_square_quote($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_quote);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
      }
    ],
    ["path", { "d": "M8 12a2 2 0 0 0 2-2V8H8" }],
    [
      "path",
      { "d": "M14 12a2 2 0 0 0 2-2V8h-2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-square-quote" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_quote, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_quote);

// node_modules/lucide-svelte/dist/icons/message-square-reply.svelte
mark_module_start();
Message_square_reply[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-reply.svelte";
function Message_square_reply($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_reply);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
      }
    ],
    ["path", { "d": "m10 7-3 3 3 3" }],
    [
      "path",
      { "d": "M17 13v-1a2 2 0 0 0-2-2H7" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-square-reply" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_reply, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_reply);

// node_modules/lucide-svelte/dist/icons/message-square-share.svelte
mark_module_start();
Message_square_share[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-share.svelte";
function Message_square_share($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_share);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 12v3a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h7"
      }
    ],
    ["path", { "d": "M16 3h5v5" }],
    ["path", { "d": "m16 8 5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "message-square-share" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_share, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_share);

// node_modules/lucide-svelte/dist/icons/message-square-text.svelte
mark_module_start();
Message_square_text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-text.svelte";
function Message_square_text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_text);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
      }
    ],
    ["path", { "d": "M13 8H7" }],
    ["path", { "d": "M17 12H7" }]
  ];
  Icon($$anchor, spread_props({ name: "message-square-text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_text);

// node_modules/lucide-svelte/dist/icons/message-square-warning.svelte
mark_module_start();
Message_square_warning[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-warning.svelte";
function Message_square_warning($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_warning);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
      }
    ],
    ["path", { "d": "M12 7v2" }],
    ["path", { "d": "M12 13h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "message-square-warning" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_warning, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_warning);

// node_modules/lucide-svelte/dist/icons/message-square-x.svelte
mark_module_start();
Message_square_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square-x.svelte";
function Message_square_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
      }
    ],
    ["path", { "d": "m14.5 7.5-5 5" }],
    ["path", { "d": "m9.5 7.5 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "message-square-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square_x);

// node_modules/lucide-svelte/dist/icons/message-square.svelte
mark_module_start();
Message_square[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/message-square.svelte";
function Message_square($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Message_square);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "message-square" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Message_square, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Message_square);

// node_modules/lucide-svelte/dist/icons/messages-square.svelte
mark_module_start();
Messages_square[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/messages-square.svelte";
function Messages_square($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Messages_square);
  const iconNode = [
    [
      "path",
      {
        "d": "M14 9a2 2 0 0 1-2 2H6l-4 4V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2z"
      }
    ],
    [
      "path",
      {
        "d": "M18 9h2a2 2 0 0 1 2 2v11l-4-4h-6a2 2 0 0 1-2-2v-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "messages-square" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Messages_square, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Messages_square);

// node_modules/lucide-svelte/dist/icons/mic-off.svelte
mark_module_start();
Mic_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mic-off.svelte";
function Mic_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mic_off);
  const iconNode = [
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ],
    [
      "path",
      { "d": "M18.89 13.23A7.12 7.12 0 0 0 19 12v-2" }
    ],
    ["path", { "d": "M5 10v2a7 7 0 0 0 12 5" }],
    [
      "path",
      { "d": "M15 9.34V5a3 3 0 0 0-5.68-1.33" }
    ],
    [
      "path",
      { "d": "M9 9v3a3 3 0 0 0 5.12 2.12" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "19",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "mic-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mic_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mic_off);

// node_modules/lucide-svelte/dist/icons/mic-vocal.svelte
mark_module_start();
Mic_vocal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mic-vocal.svelte";
function Mic_vocal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mic_vocal);
  const iconNode = [
    [
      "path",
      {
        "d": "m11 7.601-5.994 8.19a1 1 0 0 0 .1 1.298l.817.818a1 1 0 0 0 1.314.087L15.09 12"
      }
    ],
    [
      "path",
      {
        "d": "M16.5 21.174C15.5 20.5 14.372 20 13 20c-2.058 0-3.928 2.356-6 2-2.072-.356-2.775-3.369-1.5-4.5"
      }
    ],
    [
      "circle",
      { "cx": "16", "cy": "7", "r": "5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "mic-vocal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mic_vocal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mic_vocal);

// node_modules/lucide-svelte/dist/icons/mic.svelte
mark_module_start();
Mic[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mic.svelte";
function Mic($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mic);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z"
      }
    ],
    [
      "path",
      { "d": "M19 10v2a7 7 0 0 1-14 0v-2" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "19",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "mic" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mic, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mic);

// node_modules/lucide-svelte/dist/icons/microchip.svelte
mark_module_start();
Microchip[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/microchip.svelte";
function Microchip($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Microchip);
  const iconNode = [
    ["path", { "d": "M18 12h2" }],
    ["path", { "d": "M18 16h2" }],
    ["path", { "d": "M18 20h2" }],
    ["path", { "d": "M18 4h2" }],
    ["path", { "d": "M18 8h2" }],
    ["path", { "d": "M4 12h2" }],
    ["path", { "d": "M4 16h2" }],
    ["path", { "d": "M4 20h2" }],
    ["path", { "d": "M4 4h2" }],
    ["path", { "d": "M4 8h2" }],
    [
      "path",
      {
        "d": "M8 2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-1.5c-.276 0-.494.227-.562.495a2 2 0 0 1-3.876 0C9.994 2.227 9.776 2 9.5 2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "microchip" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Microchip, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Microchip);

// node_modules/lucide-svelte/dist/icons/microscope.svelte
mark_module_start();
Microscope[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/microscope.svelte";
function Microscope($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Microscope);
  const iconNode = [
    ["path", { "d": "M6 18h8" }],
    ["path", { "d": "M3 22h18" }],
    ["path", { "d": "M14 22a7 7 0 1 0 0-14h-1" }],
    ["path", { "d": "M9 14h2" }],
    [
      "path",
      {
        "d": "M9 12a2 2 0 0 1-2-2V6h6v4a2 2 0 0 1-2 2Z"
      }
    ],
    [
      "path",
      { "d": "M12 6V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "microscope" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Microscope, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Microscope);

// node_modules/lucide-svelte/dist/icons/microwave.svelte
mark_module_start();
Microwave[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/microwave.svelte";
function Microwave($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Microwave);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "15",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "8",
        "height": "7",
        "x": "6",
        "y": "8",
        "rx": "1"
      }
    ],
    ["path", { "d": "M18 8v7" }],
    ["path", { "d": "M6 19v2" }],
    ["path", { "d": "M18 19v2" }]
  ];
  Icon($$anchor, spread_props({ name: "microwave" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Microwave, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Microwave);

// node_modules/lucide-svelte/dist/icons/milestone.svelte
mark_module_start();
Milestone[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/milestone.svelte";
function Milestone($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Milestone);
  const iconNode = [
    ["path", { "d": "M12 13v8" }],
    ["path", { "d": "M12 3v3" }],
    [
      "path",
      {
        "d": "M4 6a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h13a2 2 0 0 0 1.152-.365l3.424-2.317a1 1 0 0 0 0-1.635l-3.424-2.318A2 2 0 0 0 17 6z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "milestone" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Milestone, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Milestone);

// node_modules/lucide-svelte/dist/icons/milk-off.svelte
mark_module_start();
Milk_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/milk-off.svelte";
function Milk_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Milk_off);
  const iconNode = [
    ["path", { "d": "M8 2h8" }],
    [
      "path",
      {
        "d": "M9 2v1.343M15 2v2.789a4 4 0 0 0 .672 2.219l.656.984a4 4 0 0 1 .672 2.22v1.131M7.8 7.8l-.128.192A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3"
      }
    ],
    [
      "path",
      {
        "d": "M7 15a6.47 6.47 0 0 1 5 0 6.472 6.472 0 0 0 3.435.435"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "milk-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Milk_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Milk_off);

// node_modules/lucide-svelte/dist/icons/milk.svelte
mark_module_start();
Milk[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/milk.svelte";
function Milk($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Milk);
  const iconNode = [
    ["path", { "d": "M8 2h8" }],
    [
      "path",
      {
        "d": "M9 2v2.789a4 4 0 0 1-.672 2.219l-.656.984A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-9.789a4 4 0 0 0-.672-2.219l-.656-.984A4 4 0 0 1 15 4.788V2"
      }
    ],
    [
      "path",
      {
        "d": "M7 15a6.472 6.472 0 0 1 5 0 6.47 6.47 0 0 0 5 0"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "milk" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Milk, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Milk);

// node_modules/lucide-svelte/dist/icons/minimize-2.svelte
mark_module_start();
Minimize_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/minimize-2.svelte";
function Minimize_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Minimize_2);
  const iconNode = [
    [
      "polyline",
      { "points": "4 14 10 14 10 20" }
    ],
    [
      "polyline",
      { "points": "20 10 14 10 14 4" }
    ],
    [
      "line",
      {
        "x1": "14",
        "x2": "21",
        "y1": "10",
        "y2": "3"
      }
    ],
    [
      "line",
      {
        "x1": "3",
        "x2": "10",
        "y1": "21",
        "y2": "14"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "minimize-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Minimize_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Minimize_2);

// node_modules/lucide-svelte/dist/icons/minimize.svelte
mark_module_start();
Minimize[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/minimize.svelte";
function Minimize($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Minimize);
  const iconNode = [
    ["path", { "d": "M8 3v3a2 2 0 0 1-2 2H3" }],
    ["path", { "d": "M21 8h-3a2 2 0 0 1-2-2V3" }],
    ["path", { "d": "M3 16h3a2 2 0 0 1 2 2v3" }],
    [
      "path",
      { "d": "M16 21v-3a2 2 0 0 1 2-2h3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "minimize" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Minimize, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Minimize);

// node_modules/lucide-svelte/dist/icons/minus.svelte
mark_module_start();
Minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/minus.svelte";
function Minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Minus);
  const iconNode = [["path", { "d": "M5 12h14" }]];
  Icon($$anchor, spread_props({ name: "minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Minus);

// node_modules/lucide-svelte/dist/icons/monitor-check.svelte
mark_module_start();
Monitor_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-check.svelte";
function Monitor_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_check);
  const iconNode = [
    ["path", { "d": "m9 10 2 2 4-4" }],
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "M8 21h8" }]
  ];
  Icon($$anchor, spread_props({ name: "monitor-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_check);

// node_modules/lucide-svelte/dist/icons/monitor-cog.svelte
mark_module_start();
Monitor_cog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-cog.svelte";
function Monitor_cog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_cog);
  const iconNode = [
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "m15.2 4.9-.9-.4" }],
    ["path", { "d": "m15.2 7.1-.9.4" }],
    ["path", { "d": "m16.9 3.2-.4-.9" }],
    ["path", { "d": "m16.9 8.8-.4.9" }],
    ["path", { "d": "m19.5 2.3-.4.9" }],
    ["path", { "d": "m19.5 9.7-.4-.9" }],
    ["path", { "d": "m21.7 4.5-.9.4" }],
    ["path", { "d": "m21.7 7.5-.9-.4" }],
    [
      "path",
      {
        "d": "M22 13v2a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7"
      }
    ],
    ["path", { "d": "M8 21h8" }],
    [
      "circle",
      { "cx": "18", "cy": "6", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "monitor-cog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_cog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_cog);

// node_modules/lucide-svelte/dist/icons/monitor-dot.svelte
mark_module_start();
Monitor_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-dot.svelte";
function Monitor_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_dot);
  const iconNode = [
    [
      "circle",
      { "cx": "19", "cy": "6", "r": "3" }
    ],
    [
      "path",
      {
        "d": "M22 12v3a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h9"
      }
    ],
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "M8 21h8" }]
  ];
  Icon($$anchor, spread_props({ name: "monitor-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_dot);

// node_modules/lucide-svelte/dist/icons/monitor-down.svelte
mark_module_start();
Monitor_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-down.svelte";
function Monitor_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_down);
  const iconNode = [
    ["path", { "d": "M12 13V7" }],
    ["path", { "d": "m15 10-3 3-3-3" }],
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "M8 21h8" }]
  ];
  Icon($$anchor, spread_props({ name: "monitor-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_down);

// node_modules/lucide-svelte/dist/icons/monitor-off.svelte
mark_module_start();
Monitor_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-off.svelte";
function Monitor_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_off);
  const iconNode = [
    [
      "path",
      { "d": "M17 17H4a2 2 0 0 1-2-2V5c0-1.5 1-2 1-2" }
    ],
    ["path", { "d": "M22 15V5a2 2 0 0 0-2-2H9" }],
    ["path", { "d": "M8 21h8" }],
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "monitor-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_off);

// node_modules/lucide-svelte/dist/icons/monitor-pause.svelte
mark_module_start();
Monitor_pause[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-pause.svelte";
function Monitor_pause($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_pause);
  const iconNode = [
    ["path", { "d": "M10 13V7" }],
    ["path", { "d": "M14 13V7" }],
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "M8 21h8" }]
  ];
  Icon($$anchor, spread_props({ name: "monitor-pause" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_pause, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_pause);

// node_modules/lucide-svelte/dist/icons/monitor-play.svelte
mark_module_start();
Monitor_play[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-play.svelte";
function Monitor_play($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_play);
  const iconNode = [
    [
      "path",
      {
        "d": "M10 7.75a.75.75 0 0 1 1.142-.638l3.664 2.249a.75.75 0 0 1 0 1.278l-3.664 2.25a.75.75 0 0 1-1.142-.64z"
      }
    ],
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "M8 21h8" }],
    [
      "rect",
      {
        "x": "2",
        "y": "3",
        "width": "20",
        "height": "14",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "monitor-play" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_play, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_play);

// node_modules/lucide-svelte/dist/icons/monitor-smartphone.svelte
mark_module_start();
Monitor_smartphone[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-smartphone.svelte";
function Monitor_smartphone($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_smartphone);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 8V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h8"
      }
    ],
    ["path", { "d": "M10 19v-3.96 3.15" }],
    ["path", { "d": "M7 19h5" }],
    [
      "rect",
      {
        "width": "6",
        "height": "10",
        "x": "16",
        "y": "12",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "monitor-smartphone" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_smartphone, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_smartphone);

// node_modules/lucide-svelte/dist/icons/monitor-speaker.svelte
mark_module_start();
Monitor_speaker[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-speaker.svelte";
function Monitor_speaker($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_speaker);
  const iconNode = [
    ["path", { "d": "M5.5 20H8" }],
    ["path", { "d": "M17 9h.01" }],
    [
      "rect",
      {
        "width": "10",
        "height": "16",
        "x": "12",
        "y": "4",
        "rx": "2"
      }
    ],
    [
      "path",
      { "d": "M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4" }
    ],
    [
      "circle",
      { "cx": "17", "cy": "15", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "monitor-speaker" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_speaker, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_speaker);

// node_modules/lucide-svelte/dist/icons/monitor-stop.svelte
mark_module_start();
Monitor_stop[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-stop.svelte";
function Monitor_stop($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_stop);
  const iconNode = [
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "M8 21h8" }],
    [
      "rect",
      {
        "x": "2",
        "y": "3",
        "width": "20",
        "height": "14",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "x": "9",
        "y": "7",
        "width": "6",
        "height": "6",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "monitor-stop" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_stop, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_stop);

// node_modules/lucide-svelte/dist/icons/monitor-up.svelte
mark_module_start();
Monitor_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-up.svelte";
function Monitor_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_up);
  const iconNode = [
    ["path", { "d": "m9 10 3-3 3 3" }],
    ["path", { "d": "M12 13V7" }],
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "M8 21h8" }]
  ];
  Icon($$anchor, spread_props({ name: "monitor-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_up);

// node_modules/lucide-svelte/dist/icons/monitor-x.svelte
mark_module_start();
Monitor_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor-x.svelte";
function Monitor_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor_x);
  const iconNode = [
    ["path", { "d": "m14.5 12.5-5-5" }],
    ["path", { "d": "m9.5 12.5 5-5" }],
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "M8 21h8" }]
  ];
  Icon($$anchor, spread_props({ name: "monitor-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor_x);

// node_modules/lucide-svelte/dist/icons/monitor.svelte
mark_module_start();
Monitor[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/monitor.svelte";
function Monitor($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Monitor);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "3",
        "rx": "2"
      }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "16",
        "y1": "21",
        "y2": "21"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "17",
        "y2": "21"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "monitor" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Monitor, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Monitor);

// node_modules/lucide-svelte/dist/icons/moon-star.svelte
mark_module_start();
Moon_star[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/moon-star.svelte";
function Moon_star($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Moon_star);
  const iconNode = [
    [
      "path",
      { "d": "M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9" }
    ],
    ["path", { "d": "M20 3v4" }],
    ["path", { "d": "M22 5h-4" }]
  ];
  Icon($$anchor, spread_props({ name: "moon-star" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Moon_star, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Moon_star);

// node_modules/lucide-svelte/dist/icons/moon.svelte
mark_module_start();
Moon[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/moon.svelte";
function Moon($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Moon);
  const iconNode = [
    [
      "path",
      { "d": "M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "moon" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Moon, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Moon);

// node_modules/lucide-svelte/dist/icons/mountain-snow.svelte
mark_module_start();
Mountain_snow[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mountain-snow.svelte";
function Mountain_snow($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mountain_snow);
  const iconNode = [
    ["path", { "d": "m8 3 4 8 5-5 5 15H2L8 3z" }],
    [
      "path",
      {
        "d": "M4.14 15.08c2.62-1.57 5.24-1.43 7.86.42 2.74 1.94 5.49 2 8.23.19"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "mountain-snow" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mountain_snow, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mountain_snow);

// node_modules/lucide-svelte/dist/icons/mountain.svelte
mark_module_start();
Mountain[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mountain.svelte";
function Mountain($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mountain);
  const iconNode = [
    ["path", { "d": "m8 3 4 8 5-5 5 15H2L8 3z" }]
  ];
  Icon($$anchor, spread_props({ name: "mountain" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mountain, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mountain);

// node_modules/lucide-svelte/dist/icons/mouse-off.svelte
mark_module_start();
Mouse_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mouse-off.svelte";
function Mouse_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mouse_off);
  const iconNode = [
    ["path", { "d": "M12 6v.343" }],
    [
      "path",
      {
        "d": "M18.218 18.218A7 7 0 0 1 5 15V9a7 7 0 0 1 .782-3.218"
      }
    ],
    [
      "path",
      { "d": "M19 13.343V9A7 7 0 0 0 8.56 2.902" }
    ],
    ["path", { "d": "M22 22 2 2" }]
  ];
  Icon($$anchor, spread_props({ name: "mouse-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mouse_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mouse_off);

// node_modules/lucide-svelte/dist/icons/mouse-pointer-2.svelte
mark_module_start();
Mouse_pointer_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mouse-pointer-2.svelte";
function Mouse_pointer_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mouse_pointer_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M4.037 4.688a.495.495 0 0 1 .651-.651l16 6.5a.5.5 0 0 1-.063.947l-6.124 1.58a2 2 0 0 0-1.438 1.435l-1.579 6.126a.5.5 0 0 1-.947.063z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "mouse-pointer-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mouse_pointer_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mouse_pointer_2);

// node_modules/lucide-svelte/dist/icons/mouse-pointer-ban.svelte
mark_module_start();
Mouse_pointer_ban[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mouse-pointer-ban.svelte";
function Mouse_pointer_ban($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mouse_pointer_ban);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.034 2.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.944L8.204 7.545a1 1 0 0 0-.66.66l-1.066 3.443a.5.5 0 0 1-.944.033z"
      }
    ],
    [
      "circle",
      { "cx": "16", "cy": "16", "r": "6" }
    ],
    ["path", { "d": "m11.8 11.8 8.4 8.4" }]
  ];
  Icon($$anchor, spread_props({ name: "mouse-pointer-ban" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mouse_pointer_ban, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mouse_pointer_ban);

// node_modules/lucide-svelte/dist/icons/mouse-pointer-click.svelte
mark_module_start();
Mouse_pointer_click[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mouse-pointer-click.svelte";
function Mouse_pointer_click($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mouse_pointer_click);
  const iconNode = [
    ["path", { "d": "M14 4.1 12 6" }],
    ["path", { "d": "m5.1 8-2.9-.8" }],
    ["path", { "d": "m6 12-1.9 2" }],
    ["path", { "d": "M7.2 2.2 8 5.1" }],
    [
      "path",
      {
        "d": "M9.037 9.69a.498.498 0 0 1 .653-.653l11 4.5a.5.5 0 0 1-.074.949l-4.349 1.041a1 1 0 0 0-.74.739l-1.04 4.35a.5.5 0 0 1-.95.074z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "mouse-pointer-click" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mouse_pointer_click, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mouse_pointer_click);

// node_modules/lucide-svelte/dist/icons/mouse-pointer.svelte
mark_module_start();
Mouse_pointer[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mouse-pointer.svelte";
function Mouse_pointer($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mouse_pointer);
  const iconNode = [
    ["path", { "d": "M12.586 12.586 19 19" }],
    [
      "path",
      {
        "d": "M3.688 3.037a.497.497 0 0 0-.651.651l6.5 15.999a.501.501 0 0 0 .947-.062l1.569-6.083a2 2 0 0 1 1.448-1.479l6.124-1.579a.5.5 0 0 0 .063-.947z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "mouse-pointer" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mouse_pointer, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mouse_pointer);

// node_modules/lucide-svelte/dist/icons/mouse.svelte
mark_module_start();
Mouse[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/mouse.svelte";
function Mouse($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Mouse);
  const iconNode = [
    [
      "rect",
      {
        "x": "5",
        "y": "2",
        "width": "14",
        "height": "20",
        "rx": "7"
      }
    ],
    ["path", { "d": "M12 6v4" }]
  ];
  Icon($$anchor, spread_props({ name: "mouse" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Mouse, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Mouse);

// node_modules/lucide-svelte/dist/icons/move-3d.svelte
mark_module_start();
Move_3d[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-3d.svelte";
function Move_3d($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_3d);
  const iconNode = [
    ["path", { "d": "M5 3v16h16" }],
    ["path", { "d": "m5 19 6-6" }],
    ["path", { "d": "m2 6 3-3 3 3" }],
    ["path", { "d": "m18 16 3 3-3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "move-3d" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_3d, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_3d);

// node_modules/lucide-svelte/dist/icons/move-diagonal-2.svelte
mark_module_start();
Move_diagonal_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-diagonal-2.svelte";
function Move_diagonal_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_diagonal_2);
  const iconNode = [
    ["path", { "d": "M19 13v6h-6" }],
    ["path", { "d": "M5 11V5h6" }],
    ["path", { "d": "m5 5 14 14" }]
  ];
  Icon($$anchor, spread_props({ name: "move-diagonal-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_diagonal_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_diagonal_2);

// node_modules/lucide-svelte/dist/icons/move-diagonal.svelte
mark_module_start();
Move_diagonal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-diagonal.svelte";
function Move_diagonal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_diagonal);
  const iconNode = [
    ["path", { "d": "M11 19H5v-6" }],
    ["path", { "d": "M13 5h6v6" }],
    ["path", { "d": "M19 5 5 19" }]
  ];
  Icon($$anchor, spread_props({ name: "move-diagonal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_diagonal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_diagonal);

// node_modules/lucide-svelte/dist/icons/move-down-left.svelte
mark_module_start();
Move_down_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-down-left.svelte";
function Move_down_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_down_left);
  const iconNode = [
    ["path", { "d": "M11 19H5V13" }],
    ["path", { "d": "M19 5L5 19" }]
  ];
  Icon($$anchor, spread_props({ name: "move-down-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_down_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_down_left);

// node_modules/lucide-svelte/dist/icons/move-down-right.svelte
mark_module_start();
Move_down_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-down-right.svelte";
function Move_down_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_down_right);
  const iconNode = [
    ["path", { "d": "M19 13V19H13" }],
    ["path", { "d": "M5 5L19 19" }]
  ];
  Icon($$anchor, spread_props({ name: "move-down-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_down_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_down_right);

// node_modules/lucide-svelte/dist/icons/move-down.svelte
mark_module_start();
Move_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-down.svelte";
function Move_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_down);
  const iconNode = [
    ["path", { "d": "M8 18L12 22L16 18" }],
    ["path", { "d": "M12 2V22" }]
  ];
  Icon($$anchor, spread_props({ name: "move-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_down);

// node_modules/lucide-svelte/dist/icons/move-horizontal.svelte
mark_module_start();
Move_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-horizontal.svelte";
function Move_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_horizontal);
  const iconNode = [
    ["path", { "d": "m18 8 4 4-4 4" }],
    ["path", { "d": "M2 12h20" }],
    ["path", { "d": "m6 8-4 4 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "move-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_horizontal);

// node_modules/lucide-svelte/dist/icons/move-left.svelte
mark_module_start();
Move_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-left.svelte";
function Move_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_left);
  const iconNode = [
    ["path", { "d": "M6 8L2 12L6 16" }],
    ["path", { "d": "M2 12H22" }]
  ];
  Icon($$anchor, spread_props({ name: "move-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_left);

// node_modules/lucide-svelte/dist/icons/move-right.svelte
mark_module_start();
Move_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-right.svelte";
function Move_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_right);
  const iconNode = [
    ["path", { "d": "M18 8L22 12L18 16" }],
    ["path", { "d": "M2 12H22" }]
  ];
  Icon($$anchor, spread_props({ name: "move-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_right);

// node_modules/lucide-svelte/dist/icons/move-up-left.svelte
mark_module_start();
Move_up_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-up-left.svelte";
function Move_up_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_up_left);
  const iconNode = [
    ["path", { "d": "M5 11V5H11" }],
    ["path", { "d": "M5 5L19 19" }]
  ];
  Icon($$anchor, spread_props({ name: "move-up-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_up_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_up_left);

// node_modules/lucide-svelte/dist/icons/move-up-right.svelte
mark_module_start();
Move_up_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-up-right.svelte";
function Move_up_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_up_right);
  const iconNode = [
    ["path", { "d": "M13 5H19V11" }],
    ["path", { "d": "M19 5L5 19" }]
  ];
  Icon($$anchor, spread_props({ name: "move-up-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_up_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_up_right);

// node_modules/lucide-svelte/dist/icons/move-up.svelte
mark_module_start();
Move_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-up.svelte";
function Move_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_up);
  const iconNode = [
    ["path", { "d": "M8 6L12 2L16 6" }],
    ["path", { "d": "M12 2V22" }]
  ];
  Icon($$anchor, spread_props({ name: "move-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_up);

// node_modules/lucide-svelte/dist/icons/move-vertical.svelte
mark_module_start();
Move_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move-vertical.svelte";
function Move_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move_vertical);
  const iconNode = [
    ["path", { "d": "M12 2v20" }],
    ["path", { "d": "m8 18 4 4 4-4" }],
    ["path", { "d": "m8 6 4-4 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "move-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move_vertical);

// node_modules/lucide-svelte/dist/icons/move.svelte
mark_module_start();
Move[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/move.svelte";
function Move($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Move);
  const iconNode = [
    ["path", { "d": "M12 2v20" }],
    ["path", { "d": "m15 19-3 3-3-3" }],
    ["path", { "d": "m19 9 3 3-3 3" }],
    ["path", { "d": "M2 12h20" }],
    ["path", { "d": "m5 9-3 3 3 3" }],
    ["path", { "d": "m9 5 3-3 3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "move" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Move, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Move);

// node_modules/lucide-svelte/dist/icons/music-2.svelte
mark_module_start();
Music_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/music-2.svelte";
function Music_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Music_2);
  const iconNode = [
    [
      "circle",
      { "cx": "8", "cy": "18", "r": "4" }
    ],
    ["path", { "d": "M12 18V2l7 4" }]
  ];
  Icon($$anchor, spread_props({ name: "music-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Music_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Music_2);

// node_modules/lucide-svelte/dist/icons/music-3.svelte
mark_module_start();
Music_3[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/music-3.svelte";
function Music_3($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Music_3);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "18", "r": "4" }
    ],
    ["path", { "d": "M16 18V2" }]
  ];
  Icon($$anchor, spread_props({ name: "music-3" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Music_3, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Music_3);

// node_modules/lucide-svelte/dist/icons/music-4.svelte
mark_module_start();
Music_4[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/music-4.svelte";
function Music_4($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Music_4);
  const iconNode = [
    ["path", { "d": "M9 18V5l12-2v13" }],
    ["path", { "d": "m9 9 12-2" }],
    [
      "circle",
      { "cx": "6", "cy": "18", "r": "3" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "16", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "music-4" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Music_4, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Music_4);

// node_modules/lucide-svelte/dist/icons/music.svelte
mark_module_start();
Music[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/music.svelte";
function Music($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Music);
  const iconNode = [
    ["path", { "d": "M9 18V5l12-2v13" }],
    [
      "circle",
      { "cx": "6", "cy": "18", "r": "3" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "16", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "music" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Music, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Music);

// node_modules/lucide-svelte/dist/icons/navigation-2-off.svelte
mark_module_start();
Navigation_2_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/navigation-2-off.svelte";
function Navigation_2_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Navigation_2_off);
  const iconNode = [
    [
      "path",
      { "d": "M9.31 9.31 5 21l7-4 7 4-1.17-3.17" }
    ],
    [
      "path",
      { "d": "M14.53 8.88 12 2l-1.17 3.17" }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "navigation-2-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Navigation_2_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Navigation_2_off);

// node_modules/lucide-svelte/dist/icons/navigation-2.svelte
mark_module_start();
Navigation_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/navigation-2.svelte";
function Navigation_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Navigation_2);
  const iconNode = [
    [
      "polygon",
      { "points": "12 2 19 21 12 17 5 21 12 2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "navigation-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Navigation_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Navigation_2);

// node_modules/lucide-svelte/dist/icons/navigation-off.svelte
mark_module_start();
Navigation_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/navigation-off.svelte";
function Navigation_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Navigation_off);
  const iconNode = [
    [
      "path",
      { "d": "M8.43 8.43 3 11l8 2 2 8 2.57-5.43" }
    ],
    [
      "path",
      { "d": "M17.39 11.73 22 2l-9.73 4.61" }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "navigation-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Navigation_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Navigation_off);

// node_modules/lucide-svelte/dist/icons/navigation.svelte
mark_module_start();
Navigation[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/navigation.svelte";
function Navigation($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Navigation);
  const iconNode = [
    [
      "polygon",
      { "points": "3 11 22 2 13 21 11 13 3 11" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "navigation" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Navigation, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Navigation);

// node_modules/lucide-svelte/dist/icons/network.svelte
mark_module_start();
Network[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/network.svelte";
function Network($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Network);
  const iconNode = [
    [
      "rect",
      {
        "x": "16",
        "y": "16",
        "width": "6",
        "height": "6",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "x": "2",
        "y": "16",
        "width": "6",
        "height": "6",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "x": "9",
        "y": "2",
        "width": "6",
        "height": "6",
        "rx": "1"
      }
    ],
    [
      "path",
      {
        "d": "M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3"
      }
    ],
    ["path", { "d": "M12 12V8" }]
  ];
  Icon($$anchor, spread_props({ name: "network" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Network, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Network);

// node_modules/lucide-svelte/dist/icons/newspaper.svelte
mark_module_start();
Newspaper[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/newspaper.svelte";
function Newspaper($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Newspaper);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22h16a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v16a2 2 0 0 1-2 2Zm0 0a2 2 0 0 1-2-2v-9c0-1.1.9-2 2-2h2"
      }
    ],
    ["path", { "d": "M18 14h-8" }],
    ["path", { "d": "M15 18h-5" }],
    ["path", { "d": "M10 6h8v4h-8V6Z" }]
  ];
  Icon($$anchor, spread_props({ name: "newspaper" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Newspaper, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Newspaper);

// node_modules/lucide-svelte/dist/icons/nfc.svelte
mark_module_start();
Nfc[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/nfc.svelte";
function Nfc($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Nfc);
  const iconNode = [
    [
      "path",
      { "d": "M6 8.32a7.43 7.43 0 0 1 0 7.36" }
    ],
    [
      "path",
      { "d": "M9.46 6.21a11.76 11.76 0 0 1 0 11.58" }
    ],
    [
      "path",
      { "d": "M12.91 4.1a15.91 15.91 0 0 1 .01 15.8" }
    ],
    [
      "path",
      { "d": "M16.37 2a20.16 20.16 0 0 1 0 20" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "nfc" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Nfc, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Nfc);

// node_modules/lucide-svelte/dist/icons/notebook-pen.svelte
mark_module_start();
Notebook_pen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/notebook-pen.svelte";
function Notebook_pen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Notebook_pen);
  const iconNode = [
    [
      "path",
      {
        "d": "M13.4 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-7.4"
      }
    ],
    ["path", { "d": "M2 6h4" }],
    ["path", { "d": "M2 10h4" }],
    ["path", { "d": "M2 14h4" }],
    ["path", { "d": "M2 18h4" }],
    [
      "path",
      {
        "d": "M21.378 5.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "notebook-pen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Notebook_pen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Notebook_pen);

// node_modules/lucide-svelte/dist/icons/notebook-tabs.svelte
mark_module_start();
Notebook_tabs[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/notebook-tabs.svelte";
function Notebook_tabs($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Notebook_tabs);
  const iconNode = [
    ["path", { "d": "M2 6h4" }],
    ["path", { "d": "M2 10h4" }],
    ["path", { "d": "M2 14h4" }],
    ["path", { "d": "M2 18h4" }],
    [
      "rect",
      {
        "width": "16",
        "height": "20",
        "x": "4",
        "y": "2",
        "rx": "2"
      }
    ],
    ["path", { "d": "M15 2v20" }],
    ["path", { "d": "M15 7h5" }],
    ["path", { "d": "M15 12h5" }],
    ["path", { "d": "M15 17h5" }]
  ];
  Icon($$anchor, spread_props({ name: "notebook-tabs" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Notebook_tabs, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Notebook_tabs);

// node_modules/lucide-svelte/dist/icons/notebook-text.svelte
mark_module_start();
Notebook_text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/notebook-text.svelte";
function Notebook_text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Notebook_text);
  const iconNode = [
    ["path", { "d": "M2 6h4" }],
    ["path", { "d": "M2 10h4" }],
    ["path", { "d": "M2 14h4" }],
    ["path", { "d": "M2 18h4" }],
    [
      "rect",
      {
        "width": "16",
        "height": "20",
        "x": "4",
        "y": "2",
        "rx": "2"
      }
    ],
    ["path", { "d": "M9.5 8h5" }],
    ["path", { "d": "M9.5 12H16" }],
    ["path", { "d": "M9.5 16H14" }]
  ];
  Icon($$anchor, spread_props({ name: "notebook-text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Notebook_text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Notebook_text);

// node_modules/lucide-svelte/dist/icons/notebook.svelte
mark_module_start();
Notebook[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/notebook.svelte";
function Notebook($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Notebook);
  const iconNode = [
    ["path", { "d": "M2 6h4" }],
    ["path", { "d": "M2 10h4" }],
    ["path", { "d": "M2 14h4" }],
    ["path", { "d": "M2 18h4" }],
    [
      "rect",
      {
        "width": "16",
        "height": "20",
        "x": "4",
        "y": "2",
        "rx": "2"
      }
    ],
    ["path", { "d": "M16 2v20" }]
  ];
  Icon($$anchor, spread_props({ name: "notebook" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Notebook, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Notebook);

// node_modules/lucide-svelte/dist/icons/notepad-text-dashed.svelte
mark_module_start();
Notepad_text_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/notepad-text-dashed.svelte";
function Notepad_text_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Notepad_text_dashed);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M12 2v4" }],
    ["path", { "d": "M16 2v4" }],
    ["path", { "d": "M16 4h2a2 2 0 0 1 2 2v2" }],
    ["path", { "d": "M20 12v2" }],
    [
      "path",
      { "d": "M20 18v2a2 2 0 0 1-2 2h-1" }
    ],
    ["path", { "d": "M13 22h-2" }],
    ["path", { "d": "M7 22H6a2 2 0 0 1-2-2v-2" }],
    ["path", { "d": "M4 14v-2" }],
    ["path", { "d": "M4 8V6a2 2 0 0 1 2-2h2" }],
    ["path", { "d": "M8 10h6" }],
    ["path", { "d": "M8 14h8" }],
    ["path", { "d": "M8 18h5" }]
  ];
  Icon($$anchor, spread_props({ name: "notepad-text-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Notepad_text_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Notepad_text_dashed);

// node_modules/lucide-svelte/dist/icons/notepad-text.svelte
mark_module_start();
Notepad_text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/notepad-text.svelte";
function Notepad_text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Notepad_text);
  const iconNode = [
    ["path", { "d": "M8 2v4" }],
    ["path", { "d": "M12 2v4" }],
    ["path", { "d": "M16 2v4" }],
    [
      "rect",
      {
        "width": "16",
        "height": "18",
        "x": "4",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M8 10h6" }],
    ["path", { "d": "M8 14h8" }],
    ["path", { "d": "M8 18h5" }]
  ];
  Icon($$anchor, spread_props({ name: "notepad-text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Notepad_text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Notepad_text);

// node_modules/lucide-svelte/dist/icons/nut-off.svelte
mark_module_start();
Nut_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/nut-off.svelte";
function Nut_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Nut_off);
  const iconNode = [
    ["path", { "d": "M12 4V2" }],
    [
      "path",
      {
        "d": "M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592a7.01 7.01 0 0 0 4.125-2.939"
      }
    ],
    ["path", { "d": "M19 10v3.343" }],
    [
      "path",
      {
        "d": "M12 12c-1.349-.573-1.905-1.005-2.5-2-.546.902-1.048 1.353-2.5 2-1.018-.644-1.46-1.08-2-2-1.028.71-1.69.918-3 1 1.081-1.048 1.757-2.03 2-3 .194-.776.84-1.551 1.79-2.21m11.654 5.997c.887-.457 1.28-.891 1.556-1.787 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4-.74 0-1.461.068-2.15.192"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "nut-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Nut_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Nut_off);

// node_modules/lucide-svelte/dist/icons/nut.svelte
mark_module_start();
Nut[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/nut.svelte";
function Nut($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Nut);
  const iconNode = [
    ["path", { "d": "M12 4V2" }],
    [
      "path",
      {
        "d": "M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592A7.003 7.003 0 0 0 19 14v-4"
      }
    ],
    [
      "path",
      {
        "d": "M12 4C8 4 4.5 6 4 8c-.243.97-.919 1.952-2 3 1.31-.082 1.972-.29 3-1 .54.92.982 1.356 2 2 1.452-.647 1.954-1.098 2.5-2 .595.995 1.151 1.427 2.5 2 1.31-.621 1.862-1.058 2.5-2 .629.977 1.162 1.423 2.5 2 1.209-.548 1.68-.967 2-2 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "nut" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Nut, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Nut);

// node_modules/lucide-svelte/dist/icons/octagon-alert.svelte
mark_module_start();
Octagon_alert[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/octagon-alert.svelte";
function Octagon_alert($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Octagon_alert);
  const iconNode = [
    ["path", { "d": "M12 16h.01" }],
    ["path", { "d": "M12 8v4" }],
    [
      "path",
      {
        "d": "M15.312 2a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586l-4.688-4.688A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "octagon-alert" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Octagon_alert, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Octagon_alert);

// node_modules/lucide-svelte/dist/icons/octagon-minus.svelte
mark_module_start();
Octagon_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/octagon-minus.svelte";
function Octagon_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Octagon_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z"
      }
    ],
    ["path", { "d": "M8 12h8" }]
  ];
  Icon($$anchor, spread_props({ name: "octagon-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Octagon_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Octagon_minus);

// node_modules/lucide-svelte/dist/icons/octagon-pause.svelte
mark_module_start();
Octagon_pause[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/octagon-pause.svelte";
function Octagon_pause($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Octagon_pause);
  const iconNode = [
    ["path", { "d": "M10 15V9" }],
    ["path", { "d": "M14 15V9" }],
    [
      "path",
      {
        "d": "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "octagon-pause" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Octagon_pause, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Octagon_pause);

// node_modules/lucide-svelte/dist/icons/octagon-x.svelte
mark_module_start();
Octagon_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/octagon-x.svelte";
function Octagon_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Octagon_x);
  const iconNode = [
    ["path", { "d": "m15 9-6 6" }],
    [
      "path",
      {
        "d": "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z"
      }
    ],
    ["path", { "d": "m9 9 6 6" }]
  ];
  Icon($$anchor, spread_props({ name: "octagon-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Octagon_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Octagon_x);

// node_modules/lucide-svelte/dist/icons/octagon.svelte
mark_module_start();
Octagon[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/octagon.svelte";
function Octagon($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Octagon);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "octagon" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Octagon, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Octagon);

// node_modules/lucide-svelte/dist/icons/omega.svelte
mark_module_start();
Omega[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/omega.svelte";
function Omega($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Omega);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 20h4.5a.5.5 0 0 0 .5-.5v-.282a.52.52 0 0 0-.247-.437 8 8 0 1 1 8.494-.001.52.52 0 0 0-.247.438v.282a.5.5 0 0 0 .5.5H21"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "omega" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Omega, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Omega);

// node_modules/lucide-svelte/dist/icons/option.svelte
mark_module_start();
Option[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/option.svelte";
function Option($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Option);
  const iconNode = [
    ["path", { "d": "M3 3h6l6 18h6" }],
    ["path", { "d": "M14 3h7" }]
  ];
  Icon($$anchor, spread_props({ name: "option" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Option, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Option);

// node_modules/lucide-svelte/dist/icons/orbit.svelte
mark_module_start();
Orbit[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/orbit.svelte";
function Orbit($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Orbit);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ],
    [
      "circle",
      { "cx": "19", "cy": "5", "r": "2" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "19", "r": "2" }
    ],
    [
      "path",
      { "d": "M10.4 21.9a10 10 0 0 0 9.941-15.416" }
    ],
    [
      "path",
      { "d": "M13.5 2.1a10 10 0 0 0-9.841 15.416" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "orbit" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Orbit, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Orbit);

// node_modules/lucide-svelte/dist/icons/origami.svelte
mark_module_start();
Origami[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/origami.svelte";
function Origami($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Origami);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 12V4a1 1 0 0 1 1-1h6.297a1 1 0 0 1 .651 1.759l-4.696 4.025"
      }
    ],
    [
      "path",
      {
        "d": "m12 21-7.414-7.414A2 2 0 0 1 4 12.172V6.415a1.002 1.002 0 0 1 1.707-.707L20 20.009"
      }
    ],
    [
      "path",
      {
        "d": "m12.214 3.381 8.414 14.966a1 1 0 0 1-.167 1.199l-1.168 1.163a1 1 0 0 1-.706.291H6.351a1 1 0 0 1-.625-.219L3.25 18.8a1 1 0 0 1 .631-1.781l4.165.027"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "origami" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Origami, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Origami);

// node_modules/lucide-svelte/dist/icons/package-2.svelte
mark_module_start();
Package_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/package-2.svelte";
function Package_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Package_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z"
      }
    ],
    [
      "path",
      {
        "d": "m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9"
      }
    ],
    ["path", { "d": "M12 3v6" }]
  ];
  Icon($$anchor, spread_props({ name: "package-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Package_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Package_2);

// node_modules/lucide-svelte/dist/icons/package-check.svelte
mark_module_start();
Package_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/package-check.svelte";
function Package_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Package_check);
  const iconNode = [
    ["path", { "d": "m16 16 2 2 4-4" }],
    [
      "path",
      {
        "d": "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14"
      }
    ],
    ["path", { "d": "m7.5 4.27 9 5.15" }],
    [
      "polyline",
      { "points": "3.29 7 12 12 20.71 7" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "22",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "package-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Package_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Package_check);

// node_modules/lucide-svelte/dist/icons/package-minus.svelte
mark_module_start();
Package_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/package-minus.svelte";
function Package_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Package_minus);
  const iconNode = [
    ["path", { "d": "M16 16h6" }],
    [
      "path",
      {
        "d": "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14"
      }
    ],
    ["path", { "d": "m7.5 4.27 9 5.15" }],
    [
      "polyline",
      { "points": "3.29 7 12 12 20.71 7" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "22",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "package-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Package_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Package_minus);

// node_modules/lucide-svelte/dist/icons/package-open.svelte
mark_module_start();
Package_open[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/package-open.svelte";
function Package_open($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Package_open);
  const iconNode = [
    ["path", { "d": "M12 22v-9" }],
    [
      "path",
      {
        "d": "M15.17 2.21a1.67 1.67 0 0 1 1.63 0L21 4.57a1.93 1.93 0 0 1 0 3.36L8.82 14.79a1.655 1.655 0 0 1-1.64 0L3 12.43a1.93 1.93 0 0 1 0-3.36z"
      }
    ],
    [
      "path",
      {
        "d": "M20 13v3.87a2.06 2.06 0 0 1-1.11 1.83l-6 3.08a1.93 1.93 0 0 1-1.78 0l-6-3.08A2.06 2.06 0 0 1 4 16.87V13"
      }
    ],
    [
      "path",
      {
        "d": "M21 12.43a1.93 1.93 0 0 0 0-3.36L8.83 2.2a1.64 1.64 0 0 0-1.63 0L3 4.57a1.93 1.93 0 0 0 0 3.36l12.18 6.86a1.636 1.636 0 0 0 1.63 0z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "package-open" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Package_open, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Package_open);

// node_modules/lucide-svelte/dist/icons/package-plus.svelte
mark_module_start();
Package_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/package-plus.svelte";
function Package_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Package_plus);
  const iconNode = [
    ["path", { "d": "M16 16h6" }],
    ["path", { "d": "M19 13v6" }],
    [
      "path",
      {
        "d": "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14"
      }
    ],
    ["path", { "d": "m7.5 4.27 9 5.15" }],
    [
      "polyline",
      { "points": "3.29 7 12 12 20.71 7" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "22",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "package-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Package_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Package_plus);

// node_modules/lucide-svelte/dist/icons/package-search.svelte
mark_module_start();
Package_search[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/package-search.svelte";
function Package_search($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Package_search);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14"
      }
    ],
    ["path", { "d": "m7.5 4.27 9 5.15" }],
    [
      "polyline",
      { "points": "3.29 7 12 12 20.71 7" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "22",
        "y2": "12"
      }
    ],
    [
      "circle",
      { "cx": "18.5", "cy": "15.5", "r": "2.5" }
    ],
    ["path", { "d": "M20.27 17.27 22 19" }]
  ];
  Icon($$anchor, spread_props({ name: "package-search" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Package_search, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Package_search);

// node_modules/lucide-svelte/dist/icons/package-x.svelte
mark_module_start();
Package_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/package-x.svelte";
function Package_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Package_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14"
      }
    ],
    ["path", { "d": "m7.5 4.27 9 5.15" }],
    [
      "polyline",
      { "points": "3.29 7 12 12 20.71 7" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "22",
        "y2": "12"
      }
    ],
    ["path", { "d": "m17 13 5 5m-5 0 5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "package-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Package_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Package_x);

// node_modules/lucide-svelte/dist/icons/package.svelte
mark_module_start();
Package[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/package.svelte";
function Package($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Package);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 21.73a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73z"
      }
    ],
    ["path", { "d": "M12 22V12" }],
    [
      "path",
      {
        "d": "m3.3 7 7.703 4.734a2 2 0 0 0 1.994 0L20.7 7"
      }
    ],
    ["path", { "d": "m7.5 4.27 9 5.15" }]
  ];
  Icon($$anchor, spread_props({ name: "package" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Package, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Package);

// node_modules/lucide-svelte/dist/icons/paint-bucket.svelte
mark_module_start();
Paint_bucket[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/paint-bucket.svelte";
function Paint_bucket($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Paint_bucket);
  const iconNode = [
    [
      "path",
      {
        "d": "m19 11-8-8-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0L19 11Z"
      }
    ],
    ["path", { "d": "m5 2 5 5" }],
    ["path", { "d": "M2 13h15" }],
    [
      "path",
      {
        "d": "M22 20a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4 .3 1.6 2 2.4 2 4Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "paint-bucket" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Paint_bucket, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Paint_bucket);

// node_modules/lucide-svelte/dist/icons/paint-roller.svelte
mark_module_start();
Paint_roller[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/paint-roller.svelte";
function Paint_roller($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Paint_roller);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "6",
        "x": "2",
        "y": "2",
        "rx": "2"
      }
    ],
    [
      "path",
      {
        "d": "M10 16v-2a2 2 0 0 1 2-2h8a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"
      }
    ],
    [
      "rect",
      {
        "width": "4",
        "height": "6",
        "x": "8",
        "y": "16",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "paint-roller" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Paint_roller, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Paint_roller);

// node_modules/lucide-svelte/dist/icons/paintbrush-vertical.svelte
mark_module_start();
Paintbrush_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/paintbrush-vertical.svelte";
function Paintbrush_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Paintbrush_vertical);
  const iconNode = [
    ["path", { "d": "M10 2v2" }],
    ["path", { "d": "M14 2v4" }],
    [
      "path",
      {
        "d": "M17 2a1 1 0 0 1 1 1v9H6V3a1 1 0 0 1 1-1z"
      }
    ],
    [
      "path",
      {
        "d": "M6 12a1 1 0 0 0-1 1v1a2 2 0 0 0 2 2h2a1 1 0 0 1 1 1v2.9a2 2 0 1 0 4 0V17a1 1 0 0 1 1-1h2a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "paintbrush-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Paintbrush_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Paintbrush_vertical);

// node_modules/lucide-svelte/dist/icons/paintbrush.svelte
mark_module_start();
Paintbrush[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/paintbrush.svelte";
function Paintbrush($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Paintbrush);
  const iconNode = [
    [
      "path",
      { "d": "m14.622 17.897-10.68-2.913" }
    ],
    [
      "path",
      {
        "d": "M18.376 2.622a1 1 0 1 1 3.002 3.002L17.36 9.643a.5.5 0 0 0 0 .707l.944.944a2.41 2.41 0 0 1 0 3.408l-.944.944a.5.5 0 0 1-.707 0L8.354 7.348a.5.5 0 0 1 0-.707l.944-.944a2.41 2.41 0 0 1 3.408 0l.944.944a.5.5 0 0 0 .707 0z"
      }
    ],
    [
      "path",
      {
        "d": "M9 8c-1.804 2.71-3.97 3.46-6.583 3.948a.507.507 0 0 0-.302.819l7.32 8.883a1 1 0 0 0 1.185.204C12.735 20.405 16 16.792 16 15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "paintbrush" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Paintbrush, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Paintbrush);

// node_modules/lucide-svelte/dist/icons/palette.svelte
mark_module_start();
Palette[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/palette.svelte";
function Palette($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Palette);
  const iconNode = [
    [
      "circle",
      {
        "cx": "13.5",
        "cy": "6.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    [
      "circle",
      {
        "cx": "17.5",
        "cy": "10.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    [
      "circle",
      {
        "cx": "8.5",
        "cy": "7.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    [
      "circle",
      {
        "cx": "6.5",
        "cy": "12.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    [
      "path",
      {
        "d": "M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "palette" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Palette, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Palette);

// node_modules/lucide-svelte/dist/icons/panel-bottom-close.svelte
mark_module_start();
Panel_bottom_close[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-bottom-close.svelte";
function Panel_bottom_close($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_bottom_close);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 15h18" }],
    ["path", { "d": "m15 8-3 3-3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-bottom-close" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_bottom_close, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_bottom_close);

// node_modules/lucide-svelte/dist/icons/panel-bottom-dashed.svelte
mark_module_start();
Panel_bottom_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-bottom-dashed.svelte";
function Panel_bottom_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_bottom_dashed);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M14 15h1" }],
    ["path", { "d": "M19 15h2" }],
    ["path", { "d": "M3 15h2" }],
    ["path", { "d": "M9 15h1" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-bottom-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_bottom_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_bottom_dashed);

// node_modules/lucide-svelte/dist/icons/panel-bottom-open.svelte
mark_module_start();
Panel_bottom_open[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-bottom-open.svelte";
function Panel_bottom_open($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_bottom_open);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 15h18" }],
    ["path", { "d": "m9 10 3-3 3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-bottom-open" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_bottom_open, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_bottom_open);

// node_modules/lucide-svelte/dist/icons/panel-bottom.svelte
mark_module_start();
Panel_bottom[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-bottom.svelte";
function Panel_bottom($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_bottom);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 15h18" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-bottom" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_bottom, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_bottom);

// node_modules/lucide-svelte/dist/icons/panel-left-close.svelte
mark_module_start();
Panel_left_close[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-left-close.svelte";
function Panel_left_close($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_left_close);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M9 3v18" }],
    ["path", { "d": "m16 15-3-3 3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-left-close" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_left_close, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_left_close);

// node_modules/lucide-svelte/dist/icons/panel-left-dashed.svelte
mark_module_start();
Panel_left_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-left-dashed.svelte";
function Panel_left_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_left_dashed);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M9 14v1" }],
    ["path", { "d": "M9 19v2" }],
    ["path", { "d": "M9 3v2" }],
    ["path", { "d": "M9 9v1" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-left-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_left_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_left_dashed);

// node_modules/lucide-svelte/dist/icons/panel-left-open.svelte
mark_module_start();
Panel_left_open[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-left-open.svelte";
function Panel_left_open($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_left_open);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M9 3v18" }],
    ["path", { "d": "m14 9 3 3-3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-left-open" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_left_open, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_left_open);

// node_modules/lucide-svelte/dist/icons/panel-left.svelte
mark_module_start();
Panel_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-left.svelte";
function Panel_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_left);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M9 3v18" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_left);

// node_modules/lucide-svelte/dist/icons/panel-right-close.svelte
mark_module_start();
Panel_right_close[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-right-close.svelte";
function Panel_right_close($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_right_close);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M15 3v18" }],
    ["path", { "d": "m8 9 3 3-3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-right-close" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_right_close, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_right_close);

// node_modules/lucide-svelte/dist/icons/panel-right-dashed.svelte
mark_module_start();
Panel_right_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-right-dashed.svelte";
function Panel_right_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_right_dashed);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M15 14v1" }],
    ["path", { "d": "M15 19v2" }],
    ["path", { "d": "M15 3v2" }],
    ["path", { "d": "M15 9v1" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-right-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_right_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_right_dashed);

// node_modules/lucide-svelte/dist/icons/panel-right-open.svelte
mark_module_start();
Panel_right_open[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-right-open.svelte";
function Panel_right_open($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_right_open);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M15 3v18" }],
    ["path", { "d": "m10 15-3-3 3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-right-open" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_right_open, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_right_open);

// node_modules/lucide-svelte/dist/icons/panel-right.svelte
mark_module_start();
Panel_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-right.svelte";
function Panel_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_right);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M15 3v18" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_right);

// node_modules/lucide-svelte/dist/icons/panel-top-close.svelte
mark_module_start();
Panel_top_close[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-top-close.svelte";
function Panel_top_close($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_top_close);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 9h18" }],
    ["path", { "d": "m9 16 3-3 3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-top-close" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_top_close, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_top_close);

// node_modules/lucide-svelte/dist/icons/panel-top-dashed.svelte
mark_module_start();
Panel_top_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-top-dashed.svelte";
function Panel_top_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_top_dashed);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M14 9h1" }],
    ["path", { "d": "M19 9h2" }],
    ["path", { "d": "M3 9h2" }],
    ["path", { "d": "M9 9h1" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-top-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_top_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_top_dashed);

// node_modules/lucide-svelte/dist/icons/panel-top-open.svelte
mark_module_start();
Panel_top_open[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-top-open.svelte";
function Panel_top_open($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_top_open);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 9h18" }],
    ["path", { "d": "m15 14-3 3-3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-top-open" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_top_open, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_top_open);

// node_modules/lucide-svelte/dist/icons/panel-top.svelte
mark_module_start();
Panel_top[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panel-top.svelte";
function Panel_top($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panel_top);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 9h18" }]
  ];
  Icon($$anchor, spread_props({ name: "panel-top" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panel_top, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panel_top);

// node_modules/lucide-svelte/dist/icons/panels-left-bottom.svelte
mark_module_start();
Panels_left_bottom[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panels-left-bottom.svelte";
function Panels_left_bottom($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panels_left_bottom);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M9 3v18" }],
    ["path", { "d": "M9 15h12" }]
  ];
  Icon($$anchor, spread_props({ name: "panels-left-bottom" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panels_left_bottom, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panels_left_bottom);

// node_modules/lucide-svelte/dist/icons/panels-right-bottom.svelte
mark_module_start();
Panels_right_bottom[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panels-right-bottom.svelte";
function Panels_right_bottom($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panels_right_bottom);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 15h12" }],
    ["path", { "d": "M15 3v18" }]
  ];
  Icon($$anchor, spread_props({ name: "panels-right-bottom" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panels_right_bottom, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panels_right_bottom);

// node_modules/lucide-svelte/dist/icons/panels-top-left.svelte
mark_module_start();
Panels_top_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/panels-top-left.svelte";
function Panels_top_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Panels_top_left);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 9h18" }],
    ["path", { "d": "M9 21V9" }]
  ];
  Icon($$anchor, spread_props({ name: "panels-top-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Panels_top_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Panels_top_left);

// node_modules/lucide-svelte/dist/icons/paperclip.svelte
mark_module_start();
Paperclip[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/paperclip.svelte";
function Paperclip($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Paperclip);
  const iconNode = [
    [
      "path",
      {
        "d": "m21.44 11.05-9.19 9.19a6 6 0 0 1-8.49-8.49l8.57-8.57A4 4 0 1 1 18 8.84l-8.59 8.57a2 2 0 0 1-2.83-2.83l8.49-8.48"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "paperclip" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Paperclip, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Paperclip);

// node_modules/lucide-svelte/dist/icons/parentheses.svelte
mark_module_start();
Parentheses[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/parentheses.svelte";
function Parentheses($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Parentheses);
  const iconNode = [
    ["path", { "d": "M8 21s-4-3-4-9 4-9 4-9" }],
    ["path", { "d": "M16 3s4 3 4 9-4 9-4 9" }]
  ];
  Icon($$anchor, spread_props({ name: "parentheses" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Parentheses, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Parentheses);

// node_modules/lucide-svelte/dist/icons/parking-meter.svelte
mark_module_start();
Parking_meter[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/parking-meter.svelte";
function Parking_meter($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Parking_meter);
  const iconNode = [
    ["path", { "d": "M11 15h2" }],
    ["path", { "d": "M12 12v3" }],
    ["path", { "d": "M12 19v3" }],
    [
      "path",
      {
        "d": "M15.282 19a1 1 0 0 0 .948-.68l2.37-6.988a7 7 0 1 0-13.2 0l2.37 6.988a1 1 0 0 0 .948.68z"
      }
    ],
    ["path", { "d": "M9 9a3 3 0 1 1 6 0" }]
  ];
  Icon($$anchor, spread_props({ name: "parking-meter" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Parking_meter, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Parking_meter);

// node_modules/lucide-svelte/dist/icons/party-popper.svelte
mark_module_start();
Party_popper[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/party-popper.svelte";
function Party_popper($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Party_popper);
  const iconNode = [
    ["path", { "d": "M5.8 11.3 2 22l10.7-3.79" }],
    ["path", { "d": "M4 3h.01" }],
    ["path", { "d": "M22 8h.01" }],
    ["path", { "d": "M15 2h.01" }],
    ["path", { "d": "M22 20h.01" }],
    [
      "path",
      {
        "d": "m22 2-2.24.75a2.9 2.9 0 0 0-1.96 3.12c.1.86-.57 1.63-1.45 1.63h-.38c-.86 0-1.6.6-1.76 1.44L14 10"
      }
    ],
    [
      "path",
      {
        "d": "m22 13-.82-.33c-.86-.34-1.82.2-1.98 1.11c-.11.7-.72 1.22-1.43 1.22H17"
      }
    ],
    [
      "path",
      {
        "d": "m11 2 .33.82c.34.86-.2 1.82-1.11 1.98C9.52 4.9 9 5.52 9 6.23V7"
      }
    ],
    [
      "path",
      {
        "d": "M11 13c1.93 1.93 2.83 4.17 2 5-.83.83-3.07-.07-5-2-1.93-1.93-2.83-4.17-2-5 .83-.83 3.07.07 5 2Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "party-popper" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Party_popper, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Party_popper);

// node_modules/lucide-svelte/dist/icons/pause.svelte
mark_module_start();
Pause[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pause.svelte";
function Pause($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pause);
  const iconNode = [
    [
      "rect",
      {
        "x": "14",
        "y": "4",
        "width": "4",
        "height": "16",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "x": "6",
        "y": "4",
        "width": "4",
        "height": "16",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pause" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pause, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pause);

// node_modules/lucide-svelte/dist/icons/paw-print.svelte
mark_module_start();
Paw_print[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/paw-print.svelte";
function Paw_print($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Paw_print);
  const iconNode = [
    [
      "circle",
      { "cx": "11", "cy": "4", "r": "2" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "8", "r": "2" }
    ],
    [
      "circle",
      { "cx": "20", "cy": "16", "r": "2" }
    ],
    [
      "path",
      {
        "d": "M9 10a5 5 0 0 1 5 5v3.5a3.5 3.5 0 0 1-6.84 1.045Q6.52 17.48 4.46 16.84A3.5 3.5 0 0 1 5.5 10Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "paw-print" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Paw_print, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Paw_print);

// node_modules/lucide-svelte/dist/icons/pc-case.svelte
mark_module_start();
Pc_case[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pc-case.svelte";
function Pc_case($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pc_case);
  const iconNode = [
    [
      "rect",
      {
        "width": "14",
        "height": "20",
        "x": "5",
        "y": "2",
        "rx": "2"
      }
    ],
    ["path", { "d": "M15 14h.01" }],
    ["path", { "d": "M9 6h6" }],
    ["path", { "d": "M9 10h6" }]
  ];
  Icon($$anchor, spread_props({ name: "pc-case" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pc_case, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pc_case);

// node_modules/lucide-svelte/dist/icons/pen-line.svelte
mark_module_start();
Pen_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pen-line.svelte";
function Pen_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pen_line);
  const iconNode = [
    ["path", { "d": "M12 20h9" }],
    [
      "path",
      {
        "d": "M16.376 3.622a1 1 0 0 1 3.002 3.002L7.368 18.635a2 2 0 0 1-.855.506l-2.872.838a.5.5 0 0 1-.62-.62l.838-2.872a2 2 0 0 1 .506-.854z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pen-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pen_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pen_line);

// node_modules/lucide-svelte/dist/icons/pen-off.svelte
mark_module_start();
Pen_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pen-off.svelte";
function Pen_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pen_off);
  const iconNode = [
    [
      "path",
      {
        "d": "m10 10-6.157 6.162a2 2 0 0 0-.5.833l-1.322 4.36a.5.5 0 0 0 .622.624l4.358-1.323a2 2 0 0 0 .83-.5L14 13.982"
      }
    ],
    [
      "path",
      {
        "d": "m12.829 7.172 4.359-4.346a1 1 0 1 1 3.986 3.986l-4.353 4.353"
      }
    ],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "pen-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pen_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pen_off);

// node_modules/lucide-svelte/dist/icons/pen-tool.svelte
mark_module_start();
Pen_tool[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pen-tool.svelte";
function Pen_tool($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pen_tool);
  const iconNode = [
    [
      "path",
      {
        "d": "M15.707 21.293a1 1 0 0 1-1.414 0l-1.586-1.586a1 1 0 0 1 0-1.414l5.586-5.586a1 1 0 0 1 1.414 0l1.586 1.586a1 1 0 0 1 0 1.414z"
      }
    ],
    [
      "path",
      {
        "d": "m18 13-1.375-6.874a1 1 0 0 0-.746-.776L3.235 2.028a1 1 0 0 0-1.207 1.207L5.35 15.879a1 1 0 0 0 .776.746L13 18"
      }
    ],
    ["path", { "d": "m2.3 2.3 7.286 7.286" }],
    [
      "circle",
      { "cx": "11", "cy": "11", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pen-tool" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pen_tool, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pen_tool);

// node_modules/lucide-svelte/dist/icons/pen.svelte
mark_module_start();
Pen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pen.svelte";
function Pen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pen);
  const iconNode = [
    [
      "path",
      {
        "d": "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pen);

// node_modules/lucide-svelte/dist/icons/pencil-line.svelte
mark_module_start();
Pencil_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pencil-line.svelte";
function Pencil_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pencil_line);
  const iconNode = [
    ["path", { "d": "M12 20h9" }],
    [
      "path",
      {
        "d": "M16.376 3.622a1 1 0 0 1 3.002 3.002L7.368 18.635a2 2 0 0 1-.855.506l-2.872.838a.5.5 0 0 1-.62-.62l.838-2.872a2 2 0 0 1 .506-.854z"
      }
    ],
    ["path", { "d": "m15 5 3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "pencil-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pencil_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pencil_line);

// node_modules/lucide-svelte/dist/icons/pencil-off.svelte
mark_module_start();
Pencil_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pencil-off.svelte";
function Pencil_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pencil_off);
  const iconNode = [
    [
      "path",
      {
        "d": "m10 10-6.157 6.162a2 2 0 0 0-.5.833l-1.322 4.36a.5.5 0 0 0 .622.624l4.358-1.323a2 2 0 0 0 .83-.5L14 13.982"
      }
    ],
    [
      "path",
      {
        "d": "m12.829 7.172 4.359-4.346a1 1 0 1 1 3.986 3.986l-4.353 4.353"
      }
    ],
    ["path", { "d": "m15 5 4 4" }],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "pencil-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pencil_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pencil_off);

// node_modules/lucide-svelte/dist/icons/pencil-ruler.svelte
mark_module_start();
Pencil_ruler[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pencil-ruler.svelte";
function Pencil_ruler($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pencil_ruler);
  const iconNode = [
    [
      "path",
      {
        "d": "M13 7 8.7 2.7a2.41 2.41 0 0 0-3.4 0L2.7 5.3a2.41 2.41 0 0 0 0 3.4L7 13"
      }
    ],
    ["path", { "d": "m8 6 2-2" }],
    ["path", { "d": "m18 16 2-2" }],
    [
      "path",
      {
        "d": "m17 11 4.3 4.3c.94.94.94 2.46 0 3.4l-2.6 2.6c-.94.94-2.46.94-3.4 0L11 17"
      }
    ],
    [
      "path",
      {
        "d": "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"
      }
    ],
    ["path", { "d": "m15 5 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "pencil-ruler" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pencil_ruler, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pencil_ruler);

// node_modules/lucide-svelte/dist/icons/pencil.svelte
mark_module_start();
Pencil[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pencil.svelte";
function Pencil($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pencil);
  const iconNode = [
    [
      "path",
      {
        "d": "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"
      }
    ],
    ["path", { "d": "m15 5 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "pencil" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pencil, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pencil);

// node_modules/lucide-svelte/dist/icons/pentagon.svelte
mark_module_start();
Pentagon[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pentagon.svelte";
function Pentagon($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pentagon);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.83 2.38a2 2 0 0 1 2.34 0l8 5.74a2 2 0 0 1 .73 2.25l-3.04 9.26a2 2 0 0 1-1.9 1.37H7.04a2 2 0 0 1-1.9-1.37L2.1 10.37a2 2 0 0 1 .73-2.25z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pentagon" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pentagon, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pentagon);

// node_modules/lucide-svelte/dist/icons/percent.svelte
mark_module_start();
Percent[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/percent.svelte";
function Percent($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Percent);
  const iconNode = [
    [
      "line",
      {
        "x1": "19",
        "x2": "5",
        "y1": "5",
        "y2": "19"
      }
    ],
    [
      "circle",
      { "cx": "6.5", "cy": "6.5", "r": "2.5" }
    ],
    [
      "circle",
      { "cx": "17.5", "cy": "17.5", "r": "2.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "percent" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Percent, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Percent);

// node_modules/lucide-svelte/dist/icons/person-standing.svelte
mark_module_start();
Person_standing[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/person-standing.svelte";
function Person_standing($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Person_standing);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "5", "r": "1" }
    ],
    ["path", { "d": "m9 20 3-6 3 6" }],
    ["path", { "d": "m6 8 6 2 6-2" }],
    ["path", { "d": "M12 10v4" }]
  ];
  Icon($$anchor, spread_props({ name: "person-standing" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Person_standing, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Person_standing);

// node_modules/lucide-svelte/dist/icons/philippine-peso.svelte
mark_module_start();
Philippine_peso[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/philippine-peso.svelte";
function Philippine_peso($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Philippine_peso);
  const iconNode = [
    ["path", { "d": "M20 11H4" }],
    ["path", { "d": "M20 7H4" }],
    [
      "path",
      {
        "d": "M7 21V4a1 1 0 0 1 1-1h4a1 1 0 0 1 0 12H7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "philippine-peso" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Philippine_peso, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Philippine_peso);

// node_modules/lucide-svelte/dist/icons/phone-call.svelte
mark_module_start();
Phone_call[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/phone-call.svelte";
function Phone_call($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Phone_call);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
      }
    ],
    [
      "path",
      { "d": "M14.05 2a9 9 0 0 1 8 7.94" }
    ],
    ["path", { "d": "M14.05 6A5 5 0 0 1 18 10" }]
  ];
  Icon($$anchor, spread_props({ name: "phone-call" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Phone_call, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Phone_call);

// node_modules/lucide-svelte/dist/icons/phone-forwarded.svelte
mark_module_start();
Phone_forwarded[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/phone-forwarded.svelte";
function Phone_forwarded($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Phone_forwarded);
  const iconNode = [
    ["polyline", { "points": "18 2 22 6 18 10" }],
    [
      "line",
      {
        "x1": "14",
        "x2": "22",
        "y1": "6",
        "y2": "6"
      }
    ],
    [
      "path",
      {
        "d": "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "phone-forwarded" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Phone_forwarded, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Phone_forwarded);

// node_modules/lucide-svelte/dist/icons/phone-incoming.svelte
mark_module_start();
Phone_incoming[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/phone-incoming.svelte";
function Phone_incoming($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Phone_incoming);
  const iconNode = [
    ["polyline", { "points": "16 2 16 8 22 8" }],
    [
      "line",
      {
        "x1": "22",
        "x2": "16",
        "y1": "2",
        "y2": "8"
      }
    ],
    [
      "path",
      {
        "d": "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "phone-incoming" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Phone_incoming, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Phone_incoming);

// node_modules/lucide-svelte/dist/icons/phone-missed.svelte
mark_module_start();
Phone_missed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/phone-missed.svelte";
function Phone_missed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Phone_missed);
  const iconNode = [
    [
      "line",
      {
        "x1": "22",
        "x2": "16",
        "y1": "2",
        "y2": "8"
      }
    ],
    [
      "line",
      {
        "x1": "16",
        "x2": "22",
        "y1": "2",
        "y2": "8"
      }
    ],
    [
      "path",
      {
        "d": "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "phone-missed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Phone_missed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Phone_missed);

// node_modules/lucide-svelte/dist/icons/phone-off.svelte
mark_module_start();
Phone_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/phone-off.svelte";
function Phone_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Phone_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"
      }
    ],
    [
      "line",
      {
        "x1": "22",
        "x2": "2",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "phone-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Phone_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Phone_off);

// node_modules/lucide-svelte/dist/icons/phone-outgoing.svelte
mark_module_start();
Phone_outgoing[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/phone-outgoing.svelte";
function Phone_outgoing($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Phone_outgoing);
  const iconNode = [
    ["polyline", { "points": "22 8 22 2 16 2" }],
    [
      "line",
      {
        "x1": "16",
        "x2": "22",
        "y1": "8",
        "y2": "2"
      }
    ],
    [
      "path",
      {
        "d": "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "phone-outgoing" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Phone_outgoing, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Phone_outgoing);

// node_modules/lucide-svelte/dist/icons/phone.svelte
mark_module_start();
Phone[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/phone.svelte";
function Phone($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Phone);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "phone" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Phone, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Phone);

// node_modules/lucide-svelte/dist/icons/pi.svelte
mark_module_start();
Pi[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pi.svelte";
function Pi($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pi);
  const iconNode = [
    [
      "line",
      { "x1": "9", "x2": "9", "y1": "4", "y2": "20" }
    ],
    ["path", { "d": "M4 7c0-1.7 1.3-3 3-3h13" }],
    [
      "path",
      { "d": "M18 20c-1.7 0-3-1.3-3-3V4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pi" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pi, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pi);

// node_modules/lucide-svelte/dist/icons/piano.svelte
mark_module_start();
Piano[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/piano.svelte";
function Piano($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Piano);
  const iconNode = [
    [
      "path",
      {
        "d": "M18.5 8c-1.4 0-2.6-.8-3.2-2A6.87 6.87 0 0 0 2 9v11a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-8.5C22 9.6 20.4 8 18.5 8"
      }
    ],
    ["path", { "d": "M2 14h20" }],
    ["path", { "d": "M6 14v4" }],
    ["path", { "d": "M10 14v4" }],
    ["path", { "d": "M14 14v4" }],
    ["path", { "d": "M18 14v4" }]
  ];
  Icon($$anchor, spread_props({ name: "piano" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Piano, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Piano);

// node_modules/lucide-svelte/dist/icons/pickaxe.svelte
mark_module_start();
Pickaxe[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pickaxe.svelte";
function Pickaxe($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pickaxe);
  const iconNode = [
    [
      "path",
      {
        "d": "M14.531 12.469 6.619 20.38a1 1 0 1 1-3-3l7.912-7.912"
      }
    ],
    [
      "path",
      {
        "d": "M15.686 4.314A12.5 12.5 0 0 0 5.461 2.958 1 1 0 0 0 5.58 4.71a22 22 0 0 1 6.318 3.393"
      }
    ],
    [
      "path",
      {
        "d": "M17.7 3.7a1 1 0 0 0-1.4 0l-4.6 4.6a1 1 0 0 0 0 1.4l2.6 2.6a1 1 0 0 0 1.4 0l4.6-4.6a1 1 0 0 0 0-1.4z"
      }
    ],
    [
      "path",
      {
        "d": "M19.686 8.314a12.501 12.501 0 0 1 1.356 10.225 1 1 0 0 1-1.751-.119 22 22 0 0 0-3.393-6.319"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pickaxe" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pickaxe, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pickaxe);

// node_modules/lucide-svelte/dist/icons/picture-in-picture-2.svelte
mark_module_start();
Picture_in_picture_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/picture-in-picture-2.svelte";
function Picture_in_picture_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Picture_in_picture_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 9V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10c0 1.1.9 2 2 2h4"
      }
    ],
    [
      "rect",
      {
        "width": "10",
        "height": "7",
        "x": "12",
        "y": "13",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "picture-in-picture-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Picture_in_picture_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Picture_in_picture_2);

// node_modules/lucide-svelte/dist/icons/picture-in-picture.svelte
mark_module_start();
Picture_in_picture[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/picture-in-picture.svelte";
function Picture_in_picture($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Picture_in_picture);
  const iconNode = [
    [
      "path",
      {
        "d": "M8 4.5v5H3m-1-6 6 6m13 0v-3c0-1.16-.84-2-2-2h-7m-9 9v2c0 1.05.95 2 2 2h3"
      }
    ],
    [
      "rect",
      {
        "width": "10",
        "height": "7",
        "x": "12",
        "y": "13.5",
        "ry": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "picture-in-picture" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Picture_in_picture, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Picture_in_picture);

// node_modules/lucide-svelte/dist/icons/piggy-bank.svelte
mark_module_start();
Piggy_bank[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/piggy-bank.svelte";
function Piggy_bank($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Piggy_bank);
  const iconNode = [
    [
      "path",
      {
        "d": "M19 5c-1.5 0-2.8 1.4-3 2-3.5-1.5-11-.3-11 5 0 1.8 0 3 2 4.5V20h4v-2h3v2h4v-4c1-.5 1.7-1 2-2h2v-4h-2c0-1-.5-1.5-1-2V5z"
      }
    ],
    ["path", { "d": "M2 9v1c0 1.1.9 2 2 2h1" }],
    ["path", { "d": "M16 11h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "piggy-bank" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Piggy_bank, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Piggy_bank);

// node_modules/lucide-svelte/dist/icons/pilcrow-left.svelte
mark_module_start();
Pilcrow_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pilcrow-left.svelte";
function Pilcrow_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pilcrow_left);
  const iconNode = [
    ["path", { "d": "M14 3v11" }],
    ["path", { "d": "M14 9h-3a3 3 0 0 1 0-6h9" }],
    ["path", { "d": "M18 3v11" }],
    ["path", { "d": "M22 18H2l4-4" }],
    ["path", { "d": "m6 22-4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "pilcrow-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pilcrow_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pilcrow_left);

// node_modules/lucide-svelte/dist/icons/pilcrow-right.svelte
mark_module_start();
Pilcrow_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pilcrow-right.svelte";
function Pilcrow_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pilcrow_right);
  const iconNode = [
    ["path", { "d": "M10 3v11" }],
    ["path", { "d": "M10 9H7a1 1 0 0 1 0-6h8" }],
    ["path", { "d": "M14 3v11" }],
    ["path", { "d": "m18 14 4 4H2" }],
    ["path", { "d": "m22 18-4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "pilcrow-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pilcrow_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pilcrow_right);

// node_modules/lucide-svelte/dist/icons/pilcrow.svelte
mark_module_start();
Pilcrow[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pilcrow.svelte";
function Pilcrow($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pilcrow);
  const iconNode = [
    ["path", { "d": "M13 4v16" }],
    ["path", { "d": "M17 4v16" }],
    [
      "path",
      { "d": "M19 4H9.5a4.5 4.5 0 0 0 0 9H13" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pilcrow" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pilcrow, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pilcrow);

// node_modules/lucide-svelte/dist/icons/pill-bottle.svelte
mark_module_start();
Pill_bottle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pill-bottle.svelte";
function Pill_bottle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pill_bottle);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 11h-4a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h4"
      }
    ],
    [
      "path",
      { "d": "M6 7v13a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V7" }
    ],
    [
      "rect",
      {
        "width": "16",
        "height": "5",
        "x": "4",
        "y": "2",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pill-bottle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pill_bottle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pill_bottle);

// node_modules/lucide-svelte/dist/icons/pill.svelte
mark_module_start();
Pill[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pill.svelte";
function Pill($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pill);
  const iconNode = [
    [
      "path",
      {
        "d": "m10.5 20.5 10-10a4.95 4.95 0 1 0-7-7l-10 10a4.95 4.95 0 1 0 7 7Z"
      }
    ],
    ["path", { "d": "m8.5 8.5 7 7" }]
  ];
  Icon($$anchor, spread_props({ name: "pill" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pill, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pill);

// node_modules/lucide-svelte/dist/icons/pin-off.svelte
mark_module_start();
Pin_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pin-off.svelte";
function Pin_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pin_off);
  const iconNode = [
    ["path", { "d": "M12 17v5" }],
    [
      "path",
      {
        "d": "M15 9.34V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H7.89"
      }
    ],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      {
        "d": "M9 9v1.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h11"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pin-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pin_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pin_off);

// node_modules/lucide-svelte/dist/icons/pin.svelte
mark_module_start();
Pin[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pin.svelte";
function Pin($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pin);
  const iconNode = [
    ["path", { "d": "M12 17v5" }],
    [
      "path",
      {
        "d": "M9 10.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H8a2 2 0 0 0 0 4 1 1 0 0 1 1 1z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pin" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pin, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pin);

// node_modules/lucide-svelte/dist/icons/pipette.svelte
mark_module_start();
Pipette[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pipette.svelte";
function Pipette($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pipette);
  const iconNode = [
    ["path", { "d": "m2 22 1-1h3l9-9" }],
    ["path", { "d": "M3 21v-3l9-9" }],
    [
      "path",
      {
        "d": "m15 6 3.4-3.4a2.1 2.1 0 1 1 3 3L18 9l.4.4a2.1 2.1 0 1 1-3 3l-3.8-3.8a2.1 2.1 0 1 1 3-3l.4.4Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pipette" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pipette, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pipette);

// node_modules/lucide-svelte/dist/icons/pizza.svelte
mark_module_start();
Pizza[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pizza.svelte";
function Pizza($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pizza);
  const iconNode = [
    ["path", { "d": "m12 14-1 1" }],
    ["path", { "d": "m13.75 18.25-1.25 1.42" }],
    [
      "path",
      {
        "d": "M17.775 5.654a15.68 15.68 0 0 0-12.121 12.12"
      }
    ],
    [
      "path",
      { "d": "M18.8 9.3a1 1 0 0 0 2.1 7.7" }
    ],
    [
      "path",
      {
        "d": "M21.964 20.732a1 1 0 0 1-1.232 1.232l-18-5a1 1 0 0 1-.695-1.232A19.68 19.68 0 0 1 15.732 2.037a1 1 0 0 1 1.232.695z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pizza" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pizza, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pizza);

// node_modules/lucide-svelte/dist/icons/plane-landing.svelte
mark_module_start();
Plane_landing[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/plane-landing.svelte";
function Plane_landing($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Plane_landing);
  const iconNode = [
    ["path", { "d": "M2 22h20" }],
    [
      "path",
      {
        "d": "M3.77 10.77 2 9l2-4.5 1.1.55c.55.28.9.84.9 1.45s.35 1.17.9 1.45L8 8.5l3-6 1.05.53a2 2 0 0 1 1.09 1.52l.72 5.4a2 2 0 0 0 1.09 1.52l4.4 2.2c.42.22.78.55 1.01.96l.6 1.03c.49.88-.06 1.98-1.06 2.1l-1.18.15c-.47.06-.95-.02-1.37-.24L4.29 11.15a2 2 0 0 1-.52-.38Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "plane-landing" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Plane_landing, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Plane_landing);

// node_modules/lucide-svelte/dist/icons/plane-takeoff.svelte
mark_module_start();
Plane_takeoff[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/plane-takeoff.svelte";
function Plane_takeoff($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Plane_takeoff);
  const iconNode = [
    ["path", { "d": "M2 22h20" }],
    [
      "path",
      {
        "d": "M6.36 17.4 4 17l-2-4 1.1-.55a2 2 0 0 1 1.8 0l.17.1a2 2 0 0 0 1.8 0L8 12 5 6l.9-.45a2 2 0 0 1 2.09.2l4.02 3a2 2 0 0 0 2.1.2l4.19-2.06a2.41 2.41 0 0 1 1.73-.17L21 7a1.4 1.4 0 0 1 .87 1.99l-.38.76c-.23.46-.6.84-1.07 1.08L7.58 17.2a2 2 0 0 1-1.22.18Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "plane-takeoff" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Plane_takeoff, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Plane_takeoff);

// node_modules/lucide-svelte/dist/icons/plane.svelte
mark_module_start();
Plane[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/plane.svelte";
function Plane($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Plane);
  const iconNode = [
    [
      "path",
      {
        "d": "M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "plane" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Plane, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Plane);

// node_modules/lucide-svelte/dist/icons/play.svelte
mark_module_start();
Play[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/play.svelte";
function Play($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Play);
  const iconNode = [
    [
      "polygon",
      { "points": "6 3 20 12 6 21 6 3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "play" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Play, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Play);

// node_modules/lucide-svelte/dist/icons/plug-2.svelte
mark_module_start();
Plug_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/plug-2.svelte";
function Plug_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Plug_2);
  const iconNode = [
    ["path", { "d": "M9 2v6" }],
    ["path", { "d": "M15 2v6" }],
    ["path", { "d": "M12 17v5" }],
    ["path", { "d": "M5 8h14" }],
    [
      "path",
      { "d": "M6 11V8h12v3a6 6 0 1 1-12 0Z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "plug-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Plug_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Plug_2);

// node_modules/lucide-svelte/dist/icons/plug-zap.svelte
mark_module_start();
Plug_zap[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/plug-zap.svelte";
function Plug_zap($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Plug_zap);
  const iconNode = [
    [
      "path",
      {
        "d": "M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z"
      }
    ],
    ["path", { "d": "m2 22 3-3" }],
    ["path", { "d": "M7.5 13.5 10 11" }],
    ["path", { "d": "M10.5 16.5 13 14" }],
    ["path", { "d": "m18 3-4 4h6l-4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "plug-zap" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Plug_zap, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Plug_zap);

// node_modules/lucide-svelte/dist/icons/plug.svelte
mark_module_start();
Plug[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/plug.svelte";
function Plug($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Plug);
  const iconNode = [
    ["path", { "d": "M12 22v-5" }],
    ["path", { "d": "M9 8V2" }],
    ["path", { "d": "M15 8V2" }],
    [
      "path",
      {
        "d": "M18 8v5a4 4 0 0 1-4 4h-4a4 4 0 0 1-4-4V8Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "plug" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Plug, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Plug);

// node_modules/lucide-svelte/dist/icons/plus.svelte
mark_module_start();
Plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/plus.svelte";
function Plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Plus);
  const iconNode = [
    ["path", { "d": "M5 12h14" }],
    ["path", { "d": "M12 5v14" }]
  ];
  Icon($$anchor, spread_props({ name: "plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Plus);

// node_modules/lucide-svelte/dist/icons/pocket-knife.svelte
mark_module_start();
Pocket_knife[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pocket-knife.svelte";
function Pocket_knife($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pocket_knife);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 2v1c0 1 2 1 2 2S3 6 3 7s2 1 2 2-2 1-2 2 2 1 2 2"
      }
    ],
    ["path", { "d": "M18 6h.01" }],
    ["path", { "d": "M6 18h.01" }],
    [
      "path",
      {
        "d": "M20.83 8.83a4 4 0 0 0-5.66-5.66l-12 12a4 4 0 1 0 5.66 5.66Z"
      }
    ],
    [
      "path",
      { "d": "M18 11.66V22a4 4 0 0 0 4-4V6" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pocket-knife" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pocket_knife, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pocket_knife);

// node_modules/lucide-svelte/dist/icons/pocket.svelte
mark_module_start();
Pocket[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pocket.svelte";
function Pocket($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pocket);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"
      }
    ],
    [
      "polyline",
      { "points": "8 10 12 14 16 10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pocket" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pocket, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pocket);

// node_modules/lucide-svelte/dist/icons/podcast.svelte
mark_module_start();
Podcast[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/podcast.svelte";
function Podcast($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Podcast);
  const iconNode = [
    [
      "path",
      { "d": "M16.85 18.58a9 9 0 1 0-9.7 0" }
    ],
    ["path", { "d": "M8 14a5 5 0 1 1 8 0" }],
    [
      "circle",
      { "cx": "12", "cy": "11", "r": "1" }
    ],
    [
      "path",
      {
        "d": "M13 17a1 1 0 1 0-2 0l.5 4.5a.5.5 0 1 0 1 0Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "podcast" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Podcast, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Podcast);

// node_modules/lucide-svelte/dist/icons/pointer-off.svelte
mark_module_start();
Pointer_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pointer-off.svelte";
function Pointer_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pointer_off);
  const iconNode = [
    [
      "path",
      { "d": "M10 4.5V4a2 2 0 0 0-2.41-1.957" }
    ],
    [
      "path",
      { "d": "M13.9 8.4a2 2 0 0 0-1.26-1.295" }
    ],
    [
      "path",
      {
        "d": "M21.7 16.2A8 8 0 0 0 22 14v-3a2 2 0 1 0-4 0v-1a2 2 0 0 0-3.63-1.158"
      }
    ],
    [
      "path",
      {
        "d": "m7 15-1.8-1.8a2 2 0 0 0-2.79 2.86L6 19.7a7.74 7.74 0 0 0 6 2.3h2a8 8 0 0 0 5.657-2.343"
      }
    ],
    ["path", { "d": "M6 6v8" }],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "pointer-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pointer_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pointer_off);

// node_modules/lucide-svelte/dist/icons/pointer.svelte
mark_module_start();
Pointer[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pointer.svelte";
function Pointer($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pointer);
  const iconNode = [
    ["path", { "d": "M22 14a8 8 0 0 1-8 8" }],
    [
      "path",
      { "d": "M18 11v-1a2 2 0 0 0-2-2a2 2 0 0 0-2 2" }
    ],
    [
      "path",
      { "d": "M14 10V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1" }
    ],
    [
      "path",
      {
        "d": "M10 9.5V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v10"
      }
    ],
    [
      "path",
      {
        "d": "M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "pointer" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pointer, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pointer);

// node_modules/lucide-svelte/dist/icons/popcorn.svelte
mark_module_start();
Popcorn[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/popcorn.svelte";
function Popcorn($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Popcorn);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 8a2 2 0 0 0 0-4 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0 0 4"
      }
    ],
    ["path", { "d": "M10 22 9 8" }],
    ["path", { "d": "m14 22 1-14" }],
    [
      "path",
      {
        "d": "M20 8c.5 0 .9.4.8 1l-2.6 12c-.1.5-.7 1-1.2 1H7c-.6 0-1.1-.4-1.2-1L3.2 9c-.1-.6.3-1 .8-1Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "popcorn" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Popcorn, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Popcorn);

// node_modules/lucide-svelte/dist/icons/popsicle.svelte
mark_module_start();
Popsicle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/popsicle.svelte";
function Popsicle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Popsicle);
  const iconNode = [
    [
      "path",
      {
        "d": "M18.6 14.4c.8-.8.8-2 0-2.8l-8.1-8.1a4.95 4.95 0 1 0-7.1 7.1l8.1 8.1c.9.7 2.1.7 2.9-.1Z"
      }
    ],
    ["path", { "d": "m22 22-5.5-5.5" }]
  ];
  Icon($$anchor, spread_props({ name: "popsicle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Popsicle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Popsicle);

// node_modules/lucide-svelte/dist/icons/pound-sterling.svelte
mark_module_start();
Pound_sterling[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pound-sterling.svelte";
function Pound_sterling($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pound_sterling);
  const iconNode = [
    [
      "path",
      { "d": "M18 7c0-5.333-8-5.333-8 0" }
    ],
    ["path", { "d": "M10 7v14" }],
    ["path", { "d": "M6 21h12" }],
    ["path", { "d": "M6 13h10" }]
  ];
  Icon($$anchor, spread_props({ name: "pound-sterling" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pound_sterling, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pound_sterling);

// node_modules/lucide-svelte/dist/icons/power-off.svelte
mark_module_start();
Power_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/power-off.svelte";
function Power_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Power_off);
  const iconNode = [
    [
      "path",
      { "d": "M18.36 6.64A9 9 0 0 1 20.77 15" }
    ],
    [
      "path",
      { "d": "M6.16 6.16a9 9 0 1 0 12.68 12.68" }
    ],
    ["path", { "d": "M12 2v4" }],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "power-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Power_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Power_off);

// node_modules/lucide-svelte/dist/icons/power.svelte
mark_module_start();
Power[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/power.svelte";
function Power($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Power);
  const iconNode = [
    ["path", { "d": "M12 2v10" }],
    [
      "path",
      { "d": "M18.4 6.6a9 9 0 1 1-12.77.04" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "power" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Power, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Power);

// node_modules/lucide-svelte/dist/icons/presentation.svelte
mark_module_start();
Presentation[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/presentation.svelte";
function Presentation($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Presentation);
  const iconNode = [
    ["path", { "d": "M2 3h20" }],
    [
      "path",
      {
        "d": "M21 3v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V3"
      }
    ],
    ["path", { "d": "m7 21 5-5 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "presentation" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Presentation, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Presentation);

// node_modules/lucide-svelte/dist/icons/printer-check.svelte
mark_module_start();
Printer_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/printer-check.svelte";
function Printer_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Printer_check);
  const iconNode = [
    [
      "path",
      {
        "d": "M13.5 22H7a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v.5"
      }
    ],
    ["path", { "d": "m16 19 2 2 4-4" }],
    [
      "path",
      {
        "d": "M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v2"
      }
    ],
    [
      "path",
      { "d": "M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "printer-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Printer_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Printer_check);

// node_modules/lucide-svelte/dist/icons/printer.svelte
mark_module_start();
Printer[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/printer.svelte";
function Printer($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Printer);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"
      }
    ],
    [
      "path",
      { "d": "M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6" }
    ],
    [
      "rect",
      {
        "x": "6",
        "y": "14",
        "width": "12",
        "height": "8",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "printer" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Printer, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Printer);

// node_modules/lucide-svelte/dist/icons/projector.svelte
mark_module_start();
Projector[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/projector.svelte";
function Projector($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Projector);
  const iconNode = [
    ["path", { "d": "M5 7 3 5" }],
    ["path", { "d": "M9 6V3" }],
    ["path", { "d": "m13 7 2-2" }],
    [
      "circle",
      { "cx": "9", "cy": "13", "r": "3" }
    ],
    [
      "path",
      {
        "d": "M11.83 12H20a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h2.17"
      }
    ],
    ["path", { "d": "M16 16h2" }]
  ];
  Icon($$anchor, spread_props({ name: "projector" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Projector, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Projector);

// node_modules/lucide-svelte/dist/icons/proportions.svelte
mark_module_start();
Proportions[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/proportions.svelte";
function Proportions($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Proportions);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "16",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 9v11" }],
    ["path", { "d": "M2 9h13a2 2 0 0 1 2 2v9" }]
  ];
  Icon($$anchor, spread_props({ name: "proportions" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Proportions, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Proportions);

// node_modules/lucide-svelte/dist/icons/puzzle.svelte
mark_module_start();
Puzzle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/puzzle.svelte";
function Puzzle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Puzzle);
  const iconNode = [
    [
      "path",
      {
        "d": "M19.439 7.85c-.049.322.059.648.289.878l1.568 1.568c.47.47.706 1.087.706 1.704s-.235 1.233-.706 1.704l-1.611 1.611a.98.98 0 0 1-.837.276c-.47-.07-.802-.48-.968-.925a2.501 2.501 0 1 0-3.214 3.214c.446.166.855.497.925.968a.979.979 0 0 1-.276.837l-1.61 1.61a2.404 2.404 0 0 1-1.705.707 2.402 2.402 0 0 1-1.704-.706l-1.568-1.568a1.026 1.026 0 0 0-.877-.29c-.493.074-.84.504-1.02.968a2.5 2.5 0 1 1-3.237-3.237c.464-.18.894-.527.967-1.02a1.026 1.026 0 0 0-.289-.877l-1.568-1.568A2.402 2.402 0 0 1 1.998 12c0-.617.236-1.234.706-1.704L4.23 8.77c.24-.24.581-.353.917-.303.515.077.877.528 1.073 1.01a2.5 2.5 0 1 0 3.259-3.259c-.482-.196-.933-.558-1.01-1.073-.05-.336.062-.676.303-.917l1.525-1.525A2.402 2.402 0 0 1 12 1.998c.617 0 1.234.236 1.704.706l1.568 1.568c.23.23.556.338.877.29.493-.074.84-.504 1.02-.968a2.5 2.5 0 1 1 3.237 3.237c-.464.18-.894.527-.967 1.02Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "puzzle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Puzzle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Puzzle);

// node_modules/lucide-svelte/dist/icons/pyramid.svelte
mark_module_start();
Pyramid[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/pyramid.svelte";
function Pyramid($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Pyramid);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.5 16.88a1 1 0 0 1-.32-1.43l9-13.02a1 1 0 0 1 1.64 0l9 13.01a1 1 0 0 1-.32 1.44l-8.51 4.86a2 2 0 0 1-1.98 0Z"
      }
    ],
    ["path", { "d": "M12 2v20" }]
  ];
  Icon($$anchor, spread_props({ name: "pyramid" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Pyramid, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Pyramid);

// node_modules/lucide-svelte/dist/icons/qr-code.svelte
mark_module_start();
Qr_code[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/qr-code.svelte";
function Qr_code($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Qr_code);
  const iconNode = [
    [
      "rect",
      {
        "width": "5",
        "height": "5",
        "x": "3",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "5",
        "height": "5",
        "x": "16",
        "y": "3",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "5",
        "height": "5",
        "x": "3",
        "y": "16",
        "rx": "1"
      }
    ],
    [
      "path",
      { "d": "M21 16h-3a2 2 0 0 0-2 2v3" }
    ],
    ["path", { "d": "M21 21v.01" }],
    ["path", { "d": "M12 7v3a2 2 0 0 1-2 2H7" }],
    ["path", { "d": "M3 12h.01" }],
    ["path", { "d": "M12 3h.01" }],
    ["path", { "d": "M12 16v.01" }],
    ["path", { "d": "M16 12h1" }],
    ["path", { "d": "M21 12v.01" }],
    ["path", { "d": "M12 21v-1" }]
  ];
  Icon($$anchor, spread_props({ name: "qr-code" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Qr_code, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Qr_code);

// node_modules/lucide-svelte/dist/icons/quote.svelte
mark_module_start();
Quote[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/quote.svelte";
function Quote($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Quote);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z"
      }
    ],
    [
      "path",
      {
        "d": "M5 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "quote" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Quote, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Quote);

// node_modules/lucide-svelte/dist/icons/rabbit.svelte
mark_module_start();
Rabbit[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rabbit.svelte";
function Rabbit($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rabbit);
  const iconNode = [
    ["path", { "d": "M13 16a3 3 0 0 1 2.24 5" }],
    ["path", { "d": "M18 12h.01" }],
    [
      "path",
      {
        "d": "M18 21h-8a4 4 0 0 1-4-4 7 7 0 0 1 7-7h.2L9.6 6.4a1 1 0 1 1 2.8-2.8L15.8 7h.2c3.3 0 6 2.7 6 6v1a2 2 0 0 1-2 2h-1a3 3 0 0 0-3 3"
      }
    ],
    [
      "path",
      { "d": "M20 8.54V4a2 2 0 1 0-4 0v3" }
    ],
    [
      "path",
      { "d": "M7.612 12.524a3 3 0 1 0-1.6 4.3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "rabbit" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rabbit, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rabbit);

// node_modules/lucide-svelte/dist/icons/radar.svelte
mark_module_start();
Radar[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/radar.svelte";
function Radar($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Radar);
  const iconNode = [
    [
      "path",
      { "d": "M19.07 4.93A10 10 0 0 0 6.99 3.34" }
    ],
    ["path", { "d": "M4 6h.01" }],
    [
      "path",
      { "d": "M2.29 9.62A10 10 0 1 0 21.31 8.35" }
    ],
    [
      "path",
      { "d": "M16.24 7.76A6 6 0 1 0 8.23 16.67" }
    ],
    ["path", { "d": "M12 18h.01" }],
    [
      "path",
      { "d": "M17.99 11.66A6 6 0 0 1 15.77 16.67" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "2" }
    ],
    ["path", { "d": "m13.41 10.59 5.66-5.66" }]
  ];
  Icon($$anchor, spread_props({ name: "radar" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Radar, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Radar);

// node_modules/lucide-svelte/dist/icons/radiation.svelte
mark_module_start();
Radiation[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/radiation.svelte";
function Radiation($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Radiation);
  const iconNode = [
    ["path", { "d": "M12 12h.01" }],
    [
      "path",
      {
        "d": "M7.5 4.2c-.3-.5-.9-.7-1.3-.4C3.9 5.5 2.3 8.1 2 11c-.1.5.4 1 1 1h5c0-1.5.8-2.8 2-3.4-1.1-1.9-2-3.5-2.5-4.4z"
      }
    ],
    [
      "path",
      {
        "d": "M21 12c.6 0 1-.4 1-1-.3-2.9-1.8-5.5-4.1-7.1-.4-.3-1.1-.2-1.3.3-.6.9-1.5 2.5-2.6 4.3 1.2.7 2 2 2 3.5h5z"
      }
    ],
    [
      "path",
      {
        "d": "M7.5 19.8c-.3.5-.1 1.1.4 1.3 2.6 1.2 5.6 1.2 8.2 0 .5-.2.7-.8.4-1.3-.5-.9-1.4-2.5-2.5-4.3-1.2.7-2.8.7-4 0-1.1 1.8-2 3.4-2.5 4.3z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "radiation" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Radiation, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Radiation);

// node_modules/lucide-svelte/dist/icons/radical.svelte
mark_module_start();
Radical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/radical.svelte";
function Radical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Radical);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 12h3.28a1 1 0 0 1 .948.684l2.298 7.934a.5.5 0 0 0 .96-.044L13.82 4.771A1 1 0 0 1 14.792 4H21"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "radical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Radical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Radical);

// node_modules/lucide-svelte/dist/icons/radio-receiver.svelte
mark_module_start();
Radio_receiver[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/radio-receiver.svelte";
function Radio_receiver($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Radio_receiver);
  const iconNode = [
    ["path", { "d": "M5 16v2" }],
    ["path", { "d": "M19 16v2" }],
    [
      "rect",
      {
        "width": "20",
        "height": "8",
        "x": "2",
        "y": "8",
        "rx": "2"
      }
    ],
    ["path", { "d": "M18 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "radio-receiver" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Radio_receiver, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Radio_receiver);

// node_modules/lucide-svelte/dist/icons/radio-tower.svelte
mark_module_start();
Radio_tower[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/radio-tower.svelte";
function Radio_tower($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Radio_tower);
  const iconNode = [
    [
      "path",
      { "d": "M4.9 16.1C1 12.2 1 5.8 4.9 1.9" }
    ],
    [
      "path",
      { "d": "M7.8 4.7a6.14 6.14 0 0 0-.8 7.5" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "9", "r": "2" }
    ],
    [
      "path",
      { "d": "M16.2 4.8c2 2 2.26 5.11.8 7.47" }
    ],
    [
      "path",
      { "d": "M19.1 1.9a9.96 9.96 0 0 1 0 14.1" }
    ],
    ["path", { "d": "M9.5 18h5" }],
    ["path", { "d": "m8 22 4-11 4 11" }]
  ];
  Icon($$anchor, spread_props({ name: "radio-tower" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Radio_tower, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Radio_tower);

// node_modules/lucide-svelte/dist/icons/radio.svelte
mark_module_start();
Radio[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/radio.svelte";
function Radio($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Radio);
  const iconNode = [
    [
      "path",
      { "d": "M4.9 19.1C1 15.2 1 8.8 4.9 4.9" }
    ],
    [
      "path",
      { "d": "M7.8 16.2c-2.3-2.3-2.3-6.1 0-8.5" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "2" }
    ],
    [
      "path",
      { "d": "M16.2 7.8c2.3 2.3 2.3 6.1 0 8.5" }
    ],
    [
      "path",
      { "d": "M19.1 4.9C23 8.8 23 15.1 19.1 19" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "radio" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Radio, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Radio);

// node_modules/lucide-svelte/dist/icons/radius.svelte
mark_module_start();
Radius[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/radius.svelte";
function Radius($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Radius);
  const iconNode = [
    [
      "path",
      { "d": "M20.34 17.52a10 10 0 1 0-2.82 2.82" }
    ],
    [
      "circle",
      { "cx": "19", "cy": "19", "r": "2" }
    ],
    ["path", { "d": "m13.41 13.41 4.18 4.18" }],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "radius" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Radius, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Radius);

// node_modules/lucide-svelte/dist/icons/rail-symbol.svelte
mark_module_start();
Rail_symbol[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rail-symbol.svelte";
function Rail_symbol($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rail_symbol);
  const iconNode = [
    ["path", { "d": "M5 15h14" }],
    ["path", { "d": "M5 9h14" }],
    ["path", { "d": "m14 20-5-5 6-6-5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "rail-symbol" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rail_symbol, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rail_symbol);

// node_modules/lucide-svelte/dist/icons/rainbow.svelte
mark_module_start();
Rainbow[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rainbow.svelte";
function Rainbow($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rainbow);
  const iconNode = [
    ["path", { "d": "M22 17a10 10 0 0 0-20 0" }],
    ["path", { "d": "M6 17a6 6 0 0 1 12 0" }],
    ["path", { "d": "M10 17a2 2 0 0 1 4 0" }]
  ];
  Icon($$anchor, spread_props({ name: "rainbow" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rainbow, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rainbow);

// node_modules/lucide-svelte/dist/icons/rat.svelte
mark_module_start();
Rat[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rat.svelte";
function Rat($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rat);
  const iconNode = [
    [
      "path",
      {
        "d": "M17 5c0-1.7-1.3-3-3-3s-3 1.3-3 3c0 .8.3 1.5.8 2H11c-3.9 0-7 3.1-7 7c0 2.2 1.8 4 4 4"
      }
    ],
    [
      "path",
      {
        "d": "M16.8 3.9c.3-.3.6-.5 1-.7 1.5-.6 3.3.1 3.9 1.6.6 1.5-.1 3.3-1.6 3.9l1.6 2.8c.2.3.2.7.2 1-.2.8-.9 1.2-1.7 1.1 0 0-1.6-.3-2.7-.6H17c-1.7 0-3 1.3-3 3"
      }
    ],
    ["path", { "d": "M13.2 18a3 3 0 0 0-2.2-5" }],
    [
      "path",
      { "d": "M13 22H4a2 2 0 0 1 0-4h12" }
    ],
    ["path", { "d": "M16 9h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "rat" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rat, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rat);

// node_modules/lucide-svelte/dist/icons/ratio.svelte
mark_module_start();
Ratio[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ratio.svelte";
function Ratio($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ratio);
  const iconNode = [
    [
      "rect",
      {
        "width": "12",
        "height": "20",
        "x": "6",
        "y": "2",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "20",
        "height": "12",
        "x": "2",
        "y": "6",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ratio" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ratio, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ratio);

// node_modules/lucide-svelte/dist/icons/receipt-cent.svelte
mark_module_start();
Receipt_cent[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/receipt-cent.svelte";
function Receipt_cent($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Receipt_cent);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
      }
    ],
    ["path", { "d": "M12 6.5v11" }],
    ["path", { "d": "M15 9.4a4 4 0 1 0 0 5.2" }]
  ];
  Icon($$anchor, spread_props({ name: "receipt-cent" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Receipt_cent, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Receipt_cent);

// node_modules/lucide-svelte/dist/icons/receipt-euro.svelte
mark_module_start();
Receipt_euro[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/receipt-euro.svelte";
function Receipt_euro($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Receipt_euro);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
      }
    ],
    ["path", { "d": "M8 12h5" }],
    ["path", { "d": "M16 9.5a4 4 0 1 0 0 5.2" }]
  ];
  Icon($$anchor, spread_props({ name: "receipt-euro" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Receipt_euro, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Receipt_euro);

// node_modules/lucide-svelte/dist/icons/receipt-indian-rupee.svelte
mark_module_start();
Receipt_indian_rupee[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/receipt-indian-rupee.svelte";
function Receipt_indian_rupee($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Receipt_indian_rupee);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
      }
    ],
    ["path", { "d": "M8 7h8" }],
    [
      "path",
      { "d": "M12 17.5 8 15h1a4 4 0 0 0 0-8" }
    ],
    ["path", { "d": "M8 11h8" }]
  ];
  Icon($$anchor, spread_props({ name: "receipt-indian-rupee" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Receipt_indian_rupee, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Receipt_indian_rupee);

// node_modules/lucide-svelte/dist/icons/receipt-japanese-yen.svelte
mark_module_start();
Receipt_japanese_yen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/receipt-japanese-yen.svelte";
function Receipt_japanese_yen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Receipt_japanese_yen);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
      }
    ],
    ["path", { "d": "m12 10 3-3" }],
    ["path", { "d": "m9 7 3 3v7.5" }],
    ["path", { "d": "M9 11h6" }],
    ["path", { "d": "M9 15h6" }]
  ];
  Icon($$anchor, spread_props({ name: "receipt-japanese-yen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Receipt_japanese_yen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Receipt_japanese_yen);

// node_modules/lucide-svelte/dist/icons/receipt-pound-sterling.svelte
mark_module_start();
Receipt_pound_sterling[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/receipt-pound-sterling.svelte";
function Receipt_pound_sterling($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Receipt_pound_sterling);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
      }
    ],
    ["path", { "d": "M8 13h5" }],
    [
      "path",
      { "d": "M10 17V9.5a2.5 2.5 0 0 1 5 0" }
    ],
    ["path", { "d": "M8 17h7" }]
  ];
  Icon($$anchor, spread_props({ name: "receipt-pound-sterling" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Receipt_pound_sterling, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Receipt_pound_sterling);

// node_modules/lucide-svelte/dist/icons/receipt-russian-ruble.svelte
mark_module_start();
Receipt_russian_ruble[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/receipt-russian-ruble.svelte";
function Receipt_russian_ruble($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Receipt_russian_ruble);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
      }
    ],
    ["path", { "d": "M8 15h5" }],
    [
      "path",
      { "d": "M8 11h5a2 2 0 1 0 0-4h-3v10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "receipt-russian-ruble" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Receipt_russian_ruble, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Receipt_russian_ruble);

// node_modules/lucide-svelte/dist/icons/receipt-swiss-franc.svelte
mark_module_start();
Receipt_swiss_franc[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/receipt-swiss-franc.svelte";
function Receipt_swiss_franc($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Receipt_swiss_franc);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
      }
    ],
    ["path", { "d": "M10 17V7h5" }],
    ["path", { "d": "M10 11h4" }],
    ["path", { "d": "M8 15h5" }]
  ];
  Icon($$anchor, spread_props({ name: "receipt-swiss-franc" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Receipt_swiss_franc, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Receipt_swiss_franc);

// node_modules/lucide-svelte/dist/icons/receipt-text.svelte
mark_module_start();
Receipt_text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/receipt-text.svelte";
function Receipt_text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Receipt_text);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
      }
    ],
    ["path", { "d": "M14 8H8" }],
    ["path", { "d": "M16 12H8" }],
    ["path", { "d": "M13 16H8" }]
  ];
  Icon($$anchor, spread_props({ name: "receipt-text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Receipt_text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Receipt_text);

// node_modules/lucide-svelte/dist/icons/receipt.svelte
mark_module_start();
Receipt[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/receipt.svelte";
function Receipt($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Receipt);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
      }
    ],
    [
      "path",
      {
        "d": "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8"
      }
    ],
    ["path", { "d": "M12 17.5v-11" }]
  ];
  Icon($$anchor, spread_props({ name: "receipt" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Receipt, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Receipt);

// node_modules/lucide-svelte/dist/icons/rectangle-ellipsis.svelte
mark_module_start();
Rectangle_ellipsis[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rectangle-ellipsis.svelte";
function Rectangle_ellipsis($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rectangle_ellipsis);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "12",
        "x": "2",
        "y": "6",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 12h.01" }],
    ["path", { "d": "M17 12h.01" }],
    ["path", { "d": "M7 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "rectangle-ellipsis" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rectangle_ellipsis, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rectangle_ellipsis);

// node_modules/lucide-svelte/dist/icons/rectangle-horizontal.svelte
mark_module_start();
Rectangle_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rectangle-horizontal.svelte";
function Rectangle_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rectangle_horizontal);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "12",
        "x": "2",
        "y": "6",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "rectangle-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rectangle_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rectangle_horizontal);

// node_modules/lucide-svelte/dist/icons/rectangle-vertical.svelte
mark_module_start();
Rectangle_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rectangle-vertical.svelte";
function Rectangle_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rectangle_vertical);
  const iconNode = [
    [
      "rect",
      {
        "width": "12",
        "height": "20",
        "x": "6",
        "y": "2",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "rectangle-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rectangle_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rectangle_vertical);

// node_modules/lucide-svelte/dist/icons/recycle.svelte
mark_module_start();
Recycle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/recycle.svelte";
function Recycle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Recycle);
  const iconNode = [
    [
      "path",
      {
        "d": "M7 19H4.815a1.83 1.83 0 0 1-1.57-.881 1.785 1.785 0 0 1-.004-1.784L7.196 9.5"
      }
    ],
    [
      "path",
      {
        "d": "M11 19h8.203a1.83 1.83 0 0 0 1.556-.89 1.784 1.784 0 0 0 0-1.775l-1.226-2.12"
      }
    ],
    ["path", { "d": "m14 16-3 3 3 3" }],
    [
      "path",
      { "d": "M8.293 13.596 7.196 9.5 3.1 10.598" }
    ],
    [
      "path",
      {
        "d": "m9.344 5.811 1.093-1.892A1.83 1.83 0 0 1 11.985 3a1.784 1.784 0 0 1 1.546.888l3.943 6.843"
      }
    ],
    [
      "path",
      { "d": "m13.378 9.633 4.096 1.098 1.097-4.096" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "recycle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Recycle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Recycle);

// node_modules/lucide-svelte/dist/icons/redo-2.svelte
mark_module_start();
Redo_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/redo-2.svelte";
function Redo_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Redo_2);
  const iconNode = [
    ["path", { "d": "m15 14 5-5-5-5" }],
    [
      "path",
      {
        "d": "M20 9H9.5A5.5 5.5 0 0 0 4 14.5A5.5 5.5 0 0 0 9.5 20H13"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "redo-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Redo_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Redo_2);

// node_modules/lucide-svelte/dist/icons/redo-dot.svelte
mark_module_start();
Redo_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/redo-dot.svelte";
function Redo_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Redo_dot);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "17", "r": "1" }
    ],
    ["path", { "d": "M21 7v6h-6" }],
    [
      "path",
      {
        "d": "M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "redo-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Redo_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Redo_dot);

// node_modules/lucide-svelte/dist/icons/redo.svelte
mark_module_start();
Redo[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/redo.svelte";
function Redo($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Redo);
  const iconNode = [
    ["path", { "d": "M21 7v6h-6" }],
    [
      "path",
      {
        "d": "M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "redo" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Redo, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Redo);

// node_modules/lucide-svelte/dist/icons/refresh-ccw-dot.svelte
mark_module_start();
Refresh_ccw_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/refresh-ccw-dot.svelte";
function Refresh_ccw_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Refresh_ccw_dot);
  const iconNode = [
    ["path", { "d": "M3 2v6h6" }],
    [
      "path",
      { "d": "M21 12A9 9 0 0 0 6 5.3L3 8" }
    ],
    ["path", { "d": "M21 22v-6h-6" }],
    [
      "path",
      { "d": "M3 12a9 9 0 0 0 15 6.7l3-2.7" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "refresh-ccw-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Refresh_ccw_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Refresh_ccw_dot);

// node_modules/lucide-svelte/dist/icons/refresh-ccw.svelte
mark_module_start();
Refresh_ccw[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/refresh-ccw.svelte";
function Refresh_ccw($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Refresh_ccw);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"
      }
    ],
    ["path", { "d": "M3 3v5h5" }],
    [
      "path",
      {
        "d": "M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16"
      }
    ],
    ["path", { "d": "M16 16h5v5" }]
  ];
  Icon($$anchor, spread_props({ name: "refresh-ccw" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Refresh_ccw, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Refresh_ccw);

// node_modules/lucide-svelte/dist/icons/refresh-cw-off.svelte
mark_module_start();
Refresh_cw_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/refresh-cw-off.svelte";
function Refresh_cw_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Refresh_cw_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 8L18.74 5.74A9.75 9.75 0 0 0 12 3C11 3 10.03 3.16 9.13 3.47"
      }
    ],
    ["path", { "d": "M8 16H3v5" }],
    [
      "path",
      { "d": "M3 12C3 9.51 4 7.26 5.64 5.64" }
    ],
    [
      "path",
      {
        "d": "m3 16 2.26 2.26A9.75 9.75 0 0 0 12 21c2.49 0 4.74-1 6.36-2.64"
      }
    ],
    [
      "path",
      { "d": "M21 12c0 1-.16 1.97-.47 2.87" }
    ],
    ["path", { "d": "M21 3v5h-5" }],
    ["path", { "d": "M22 22 2 2" }]
  ];
  Icon($$anchor, spread_props({ name: "refresh-cw-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Refresh_cw_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Refresh_cw_off);

// node_modules/lucide-svelte/dist/icons/refresh-cw.svelte
mark_module_start();
Refresh_cw[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/refresh-cw.svelte";
function Refresh_cw($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Refresh_cw);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8"
      }
    ],
    ["path", { "d": "M21 3v5h-5" }],
    [
      "path",
      {
        "d": "M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16"
      }
    ],
    ["path", { "d": "M8 16H3v5" }]
  ];
  Icon($$anchor, spread_props({ name: "refresh-cw" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Refresh_cw, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Refresh_cw);

// node_modules/lucide-svelte/dist/icons/refrigerator.svelte
mark_module_start();
Refrigerator[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/refrigerator.svelte";
function Refrigerator($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Refrigerator);
  const iconNode = [
    [
      "path",
      {
        "d": "M5 6a4 4 0 0 1 4-4h6a4 4 0 0 1 4 4v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6Z"
      }
    ],
    ["path", { "d": "M5 10h14" }],
    ["path", { "d": "M15 7v6" }]
  ];
  Icon($$anchor, spread_props({ name: "refrigerator" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Refrigerator, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Refrigerator);

// node_modules/lucide-svelte/dist/icons/regex.svelte
mark_module_start();
Regex[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/regex.svelte";
function Regex($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Regex);
  const iconNode = [
    ["path", { "d": "M17 3v10" }],
    ["path", { "d": "m12.67 5.5 8.66 5" }],
    ["path", { "d": "m12.67 10.5 8.66-5" }],
    [
      "path",
      {
        "d": "M9 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "regex" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Regex, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Regex);

// node_modules/lucide-svelte/dist/icons/remove-formatting.svelte
mark_module_start();
Remove_formatting[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/remove-formatting.svelte";
function Remove_formatting($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Remove_formatting);
  const iconNode = [
    ["path", { "d": "M4 7V4h16v3" }],
    ["path", { "d": "M5 20h6" }],
    ["path", { "d": "M13 4 8 20" }],
    ["path", { "d": "m15 15 5 5" }],
    ["path", { "d": "m20 15-5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "remove-formatting" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Remove_formatting, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Remove_formatting);

// node_modules/lucide-svelte/dist/icons/repeat-1.svelte
mark_module_start();
Repeat_1[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/repeat-1.svelte";
function Repeat_1($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Repeat_1);
  const iconNode = [
    ["path", { "d": "m17 2 4 4-4 4" }],
    [
      "path",
      { "d": "M3 11v-1a4 4 0 0 1 4-4h14" }
    ],
    ["path", { "d": "m7 22-4-4 4-4" }],
    ["path", { "d": "M21 13v1a4 4 0 0 1-4 4H3" }],
    ["path", { "d": "M11 10h1v4" }]
  ];
  Icon($$anchor, spread_props({ name: "repeat-1" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Repeat_1, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Repeat_1);

// node_modules/lucide-svelte/dist/icons/repeat-2.svelte
mark_module_start();
Repeat_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/repeat-2.svelte";
function Repeat_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Repeat_2);
  const iconNode = [
    ["path", { "d": "m2 9 3-3 3 3" }],
    ["path", { "d": "M13 18H7a2 2 0 0 1-2-2V6" }],
    ["path", { "d": "m22 15-3 3-3-3" }],
    ["path", { "d": "M11 6h6a2 2 0 0 1 2 2v10" }]
  ];
  Icon($$anchor, spread_props({ name: "repeat-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Repeat_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Repeat_2);

// node_modules/lucide-svelte/dist/icons/repeat.svelte
mark_module_start();
Repeat[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/repeat.svelte";
function Repeat($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Repeat);
  const iconNode = [
    ["path", { "d": "m17 2 4 4-4 4" }],
    [
      "path",
      { "d": "M3 11v-1a4 4 0 0 1 4-4h14" }
    ],
    ["path", { "d": "m7 22-4-4 4-4" }],
    ["path", { "d": "M21 13v1a4 4 0 0 1-4 4H3" }]
  ];
  Icon($$anchor, spread_props({ name: "repeat" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Repeat, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Repeat);

// node_modules/lucide-svelte/dist/icons/replace-all.svelte
mark_module_start();
Replace_all[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/replace-all.svelte";
function Replace_all($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Replace_all);
  const iconNode = [
    [
      "path",
      { "d": "M14 14a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2" }
    ],
    ["path", { "d": "M14 4a2 2 0 0 1 2-2" }],
    ["path", { "d": "M16 10a2 2 0 0 1-2-2" }],
    [
      "path",
      { "d": "M20 14a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2" }
    ],
    ["path", { "d": "M20 2a2 2 0 0 1 2 2" }],
    ["path", { "d": "M22 8a2 2 0 0 1-2 2" }],
    ["path", { "d": "m3 7 3 3 3-3" }],
    ["path", { "d": "M6 10V5a 3 3 0 0 1 3-3h1" }],
    [
      "rect",
      {
        "x": "2",
        "y": "14",
        "width": "8",
        "height": "8",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "replace-all" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Replace_all, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Replace_all);

// node_modules/lucide-svelte/dist/icons/replace.svelte
mark_module_start();
Replace[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/replace.svelte";
function Replace($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Replace);
  const iconNode = [
    ["path", { "d": "M14 4a2 2 0 0 1 2-2" }],
    ["path", { "d": "M16 10a2 2 0 0 1-2-2" }],
    ["path", { "d": "M20 2a2 2 0 0 1 2 2" }],
    ["path", { "d": "M22 8a2 2 0 0 1-2 2" }],
    ["path", { "d": "m3 7 3 3 3-3" }],
    ["path", { "d": "M6 10V5a3 3 0 0 1 3-3h1" }],
    [
      "rect",
      {
        "x": "2",
        "y": "14",
        "width": "8",
        "height": "8",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "replace" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Replace, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Replace);

// node_modules/lucide-svelte/dist/icons/reply-all.svelte
mark_module_start();
Reply_all[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/reply-all.svelte";
function Reply_all($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Reply_all);
  const iconNode = [
    ["polyline", { "points": "7 17 2 12 7 7" }],
    ["polyline", { "points": "12 17 7 12 12 7" }],
    [
      "path",
      { "d": "M22 18v-2a4 4 0 0 0-4-4H7" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "reply-all" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Reply_all, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Reply_all);

// node_modules/lucide-svelte/dist/icons/reply.svelte
mark_module_start();
Reply[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/reply.svelte";
function Reply($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Reply);
  const iconNode = [
    ["polyline", { "points": "9 17 4 12 9 7" }],
    [
      "path",
      { "d": "M20 18v-2a4 4 0 0 0-4-4H4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "reply" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Reply, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Reply);

// node_modules/lucide-svelte/dist/icons/rewind.svelte
mark_module_start();
Rewind[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rewind.svelte";
function Rewind($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rewind);
  const iconNode = [
    [
      "polygon",
      { "points": "11 19 2 12 11 5 11 19" }
    ],
    [
      "polygon",
      { "points": "22 19 13 12 22 5 22 19" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "rewind" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rewind, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rewind);

// node_modules/lucide-svelte/dist/icons/ribbon.svelte
mark_module_start();
Ribbon[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ribbon.svelte";
function Ribbon($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ribbon);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 11.22C11 9.997 10 9 10 8a2 2 0 0 1 4 0c0 1-.998 2.002-2.01 3.22"
      }
    ],
    ["path", { "d": "m12 18 2.57-3.5" }],
    [
      "path",
      { "d": "M6.243 9.016a7 7 0 0 1 11.507-.009" }
    ],
    ["path", { "d": "M9.35 14.53 12 11.22" }],
    [
      "path",
      {
        "d": "M9.35 14.53C7.728 12.246 6 10.221 6 7a6 5 0 0 1 12 0c-.005 3.22-1.778 5.235-3.43 7.5l3.557 4.527a1 1 0 0 1-.203 1.43l-1.894 1.36a1 1 0 0 1-1.384-.215L12 18l-2.679 3.593a1 1 0 0 1-1.39.213l-1.865-1.353a1 1 0 0 1-.203-1.422z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ribbon" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ribbon, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ribbon);

// node_modules/lucide-svelte/dist/icons/rocket.svelte
mark_module_start();
Rocket[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rocket.svelte";
function Rocket($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rocket);
  const iconNode = [
    [
      "path",
      {
        "d": "M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z"
      }
    ],
    [
      "path",
      {
        "d": "m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z"
      }
    ],
    [
      "path",
      { "d": "M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0" }
    ],
    [
      "path",
      { "d": "M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "rocket" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rocket, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rocket);

// node_modules/lucide-svelte/dist/icons/rocking-chair.svelte
mark_module_start();
Rocking_chair[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rocking-chair.svelte";
function Rocking_chair($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rocking_chair);
  const iconNode = [
    [
      "polyline",
      { "points": "3.5 2 6.5 12.5 18 12.5" }
    ],
    [
      "line",
      {
        "x1": "9.5",
        "x2": "5.5",
        "y1": "12.5",
        "y2": "20"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "18.5",
        "y1": "12.5",
        "y2": "20"
      }
    ],
    [
      "path",
      { "d": "M2.75 18a13 13 0 0 0 18.5 0" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "rocking-chair" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rocking_chair, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rocking_chair);

// node_modules/lucide-svelte/dist/icons/roller-coaster.svelte
mark_module_start();
Roller_coaster[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/roller-coaster.svelte";
function Roller_coaster($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Roller_coaster);
  const iconNode = [
    ["path", { "d": "M6 19V5" }],
    ["path", { "d": "M10 19V6.8" }],
    ["path", { "d": "M14 19v-7.8" }],
    ["path", { "d": "M18 5v4" }],
    ["path", { "d": "M18 19v-6" }],
    ["path", { "d": "M22 19V9" }],
    [
      "path",
      {
        "d": "M2 19V9a4 4 0 0 1 4-4c2 0 4 1.33 6 4s4 4 6 4a4 4 0 1 0-3-6.65"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "roller-coaster" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Roller_coaster, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Roller_coaster);

// node_modules/lucide-svelte/dist/icons/rotate-3d.svelte
mark_module_start();
Rotate_3d[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rotate-3d.svelte";
function Rotate_3d($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rotate_3d);
  const iconNode = [
    [
      "path",
      {
        "d": "M16.466 7.5C15.643 4.237 13.952 2 12 2 9.239 2 7 6.477 7 12s2.239 10 5 10c.342 0 .677-.069 1-.2"
      }
    ],
    [
      "path",
      { "d": "m15.194 13.707 3.814 1.86-1.86 3.814" }
    ],
    [
      "path",
      {
        "d": "M19 15.57c-1.804.885-4.274 1.43-7 1.43-5.523 0-10-2.239-10-5s4.477-5 10-5c4.838 0 8.873 1.718 9.8 4"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "rotate-3d" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rotate_3d, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rotate_3d);

// node_modules/lucide-svelte/dist/icons/rotate-ccw-square.svelte
mark_module_start();
Rotate_ccw_square[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rotate-ccw-square.svelte";
function Rotate_ccw_square($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rotate_ccw_square);
  const iconNode = [
    ["path", { "d": "M20 9V7a2 2 0 0 0-2-2h-6" }],
    ["path", { "d": "m15 2-3 3 3 3" }],
    [
      "path",
      {
        "d": "M20 13v5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "rotate-ccw-square" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rotate_ccw_square, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rotate_ccw_square);

// node_modules/lucide-svelte/dist/icons/rotate-ccw.svelte
mark_module_start();
Rotate_ccw[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rotate-ccw.svelte";
function Rotate_ccw($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rotate_ccw);
  const iconNode = [
    [
      "path",
      {
        "d": "M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"
      }
    ],
    ["path", { "d": "M3 3v5h5" }]
  ];
  Icon($$anchor, spread_props({ name: "rotate-ccw" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rotate_ccw, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rotate_ccw);

// node_modules/lucide-svelte/dist/icons/rotate-cw-square.svelte
mark_module_start();
Rotate_cw_square[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rotate-cw-square.svelte";
function Rotate_cw_square($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rotate_cw_square);
  const iconNode = [
    ["path", { "d": "M12 5H6a2 2 0 0 0-2 2v3" }],
    ["path", { "d": "m9 8 3-3-3-3" }],
    [
      "path",
      {
        "d": "M4 14v4a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "rotate-cw-square" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rotate_cw_square, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rotate_cw_square);

// node_modules/lucide-svelte/dist/icons/rotate-cw.svelte
mark_module_start();
Rotate_cw[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rotate-cw.svelte";
function Rotate_cw($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rotate_cw);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8"
      }
    ],
    ["path", { "d": "M21 3v5h-5" }]
  ];
  Icon($$anchor, spread_props({ name: "rotate-cw" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rotate_cw, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rotate_cw);

// node_modules/lucide-svelte/dist/icons/route-off.svelte
mark_module_start();
Route_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/route-off.svelte";
function Route_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Route_off);
  const iconNode = [
    [
      "circle",
      { "cx": "6", "cy": "19", "r": "3" }
    ],
    [
      "path",
      { "d": "M9 19h8.5c.4 0 .9-.1 1.3-.2" }
    ],
    [
      "path",
      { "d": "M5.2 5.2A3.5 3.53 0 0 0 6.5 12H12" }
    ],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      { "d": "M21 15.3a3.5 3.5 0 0 0-3.3-3.3" }
    ],
    ["path", { "d": "M15 5h-4.3" }],
    [
      "circle",
      { "cx": "18", "cy": "5", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "route-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Route_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Route_off);

// node_modules/lucide-svelte/dist/icons/route.svelte
mark_module_start();
Route[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/route.svelte";
function Route($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Route);
  const iconNode = [
    [
      "circle",
      { "cx": "6", "cy": "19", "r": "3" }
    ],
    [
      "path",
      {
        "d": "M9 19h8.5a3.5 3.5 0 0 0 0-7h-11a3.5 3.5 0 0 1 0-7H15"
      }
    ],
    [
      "circle",
      { "cx": "18", "cy": "5", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "route" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Route, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Route);

// node_modules/lucide-svelte/dist/icons/router.svelte
mark_module_start();
Router[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/router.svelte";
function Router($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Router);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "8",
        "x": "2",
        "y": "14",
        "rx": "2"
      }
    ],
    ["path", { "d": "M6.01 18H6" }],
    ["path", { "d": "M10.01 18H10" }],
    ["path", { "d": "M15 10v4" }],
    [
      "path",
      { "d": "M17.84 7.17a4 4 0 0 0-5.66 0" }
    ],
    [
      "path",
      { "d": "M20.66 4.34a8 8 0 0 0-11.31 0" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "router" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Router, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Router);

// node_modules/lucide-svelte/dist/icons/rows-2.svelte
mark_module_start();
Rows_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rows-2.svelte";
function Rows_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rows_2);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 12h18" }]
  ];
  Icon($$anchor, spread_props({ name: "rows-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rows_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rows_2);

// node_modules/lucide-svelte/dist/icons/rows-3.svelte
mark_module_start();
Rows_3[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rows-3.svelte";
function Rows_3($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rows_3);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M21 9H3" }],
    ["path", { "d": "M21 15H3" }]
  ];
  Icon($$anchor, spread_props({ name: "rows-3" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rows_3, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rows_3);

// node_modules/lucide-svelte/dist/icons/rows-4.svelte
mark_module_start();
Rows_4[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rows-4.svelte";
function Rows_4($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rows_4);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M21 7.5H3" }],
    ["path", { "d": "M21 12H3" }],
    ["path", { "d": "M21 16.5H3" }]
  ];
  Icon($$anchor, spread_props({ name: "rows-4" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rows_4, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rows_4);

// node_modules/lucide-svelte/dist/icons/rss.svelte
mark_module_start();
Rss[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/rss.svelte";
function Rss($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Rss);
  const iconNode = [
    ["path", { "d": "M4 11a9 9 0 0 1 9 9" }],
    ["path", { "d": "M4 4a16 16 0 0 1 16 16" }],
    [
      "circle",
      { "cx": "5", "cy": "19", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "rss" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Rss, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Rss);

// node_modules/lucide-svelte/dist/icons/ruler.svelte
mark_module_start();
Ruler[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ruler.svelte";
function Ruler($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ruler);
  const iconNode = [
    [
      "path",
      {
        "d": "M21.3 15.3a2.4 2.4 0 0 1 0 3.4l-2.6 2.6a2.4 2.4 0 0 1-3.4 0L2.7 8.7a2.41 2.41 0 0 1 0-3.4l2.6-2.6a2.41 2.41 0 0 1 3.4 0Z"
      }
    ],
    ["path", { "d": "m14.5 12.5 2-2" }],
    ["path", { "d": "m11.5 9.5 2-2" }],
    ["path", { "d": "m8.5 6.5 2-2" }],
    ["path", { "d": "m17.5 15.5 2-2" }]
  ];
  Icon($$anchor, spread_props({ name: "ruler" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ruler, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ruler);

// node_modules/lucide-svelte/dist/icons/russian-ruble.svelte
mark_module_start();
Russian_ruble[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/russian-ruble.svelte";
function Russian_ruble($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Russian_ruble);
  const iconNode = [
    [
      "path",
      { "d": "M6 11h8a4 4 0 0 0 0-8H9v18" }
    ],
    ["path", { "d": "M6 15h8" }]
  ];
  Icon($$anchor, spread_props({ name: "russian-ruble" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Russian_ruble, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Russian_ruble);

// node_modules/lucide-svelte/dist/icons/sailboat.svelte
mark_module_start();
Sailboat[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sailboat.svelte";
function Sailboat($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sailboat);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 18H2a4 4 0 0 0 4 4h12a4 4 0 0 0 4-4Z"
      }
    ],
    ["path", { "d": "M21 14 10 2 3 14h18Z" }],
    ["path", { "d": "M10 2v16" }]
  ];
  Icon($$anchor, spread_props({ name: "sailboat" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sailboat, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sailboat);

// node_modules/lucide-svelte/dist/icons/salad.svelte
mark_module_start();
Salad[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/salad.svelte";
function Salad($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Salad);
  const iconNode = [
    ["path", { "d": "M7 21h10" }],
    [
      "path",
      { "d": "M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z" }
    ],
    [
      "path",
      {
        "d": "M11.38 12a2.4 2.4 0 0 1-.4-4.77 2.4 2.4 0 0 1 3.2-2.77 2.4 2.4 0 0 1 3.47-.63 2.4 2.4 0 0 1 3.37 3.37 2.4 2.4 0 0 1-1.1 3.7 2.51 2.51 0 0 1 .03 1.1"
      }
    ],
    ["path", { "d": "m13 12 4-4" }],
    [
      "path",
      {
        "d": "M10.9 7.25A3.99 3.99 0 0 0 4 10c0 .73.2 1.41.54 2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "salad" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Salad, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Salad);

// node_modules/lucide-svelte/dist/icons/sandwich.svelte
mark_module_start();
Sandwich[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sandwich.svelte";
function Sandwich($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sandwich);
  const iconNode = [
    [
      "path",
      {
        "d": "m2.37 11.223 8.372-6.777a2 2 0 0 1 2.516 0l8.371 6.777"
      }
    ],
    [
      "path",
      {
        "d": "M21 15a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-5.25"
      }
    ],
    [
      "path",
      { "d": "M3 15a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h9" }
    ],
    [
      "path",
      {
        "d": "m6.67 15 6.13 4.6a2 2 0 0 0 2.8-.4l3.15-4.2"
      }
    ],
    [
      "rect",
      {
        "width": "20",
        "height": "4",
        "x": "2",
        "y": "11",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "sandwich" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sandwich, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sandwich);

// node_modules/lucide-svelte/dist/icons/satellite-dish.svelte
mark_module_start();
Satellite_dish[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/satellite-dish.svelte";
function Satellite_dish($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Satellite_dish);
  const iconNode = [
    [
      "path",
      { "d": "M4 10a7.31 7.31 0 0 0 10 10Z" }
    ],
    ["path", { "d": "m9 15 3-3" }],
    ["path", { "d": "M17 13a6 6 0 0 0-6-6" }],
    ["path", { "d": "M21 13A10 10 0 0 0 11 3" }]
  ];
  Icon($$anchor, spread_props({ name: "satellite-dish" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Satellite_dish, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Satellite_dish);

// node_modules/lucide-svelte/dist/icons/satellite.svelte
mark_module_start();
Satellite[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/satellite.svelte";
function Satellite($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Satellite);
  const iconNode = [
    ["path", { "d": "M13 7 9 3 5 7l4 4" }],
    ["path", { "d": "m17 11 4 4-4 4-4-4" }],
    ["path", { "d": "m8 12 4 4 6-6-4-4Z" }],
    ["path", { "d": "m16 8 3-3" }],
    ["path", { "d": "M9 21a6 6 0 0 0-6-6" }]
  ];
  Icon($$anchor, spread_props({ name: "satellite" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Satellite, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Satellite);

// node_modules/lucide-svelte/dist/icons/save-all.svelte
mark_module_start();
Save_all[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/save-all.svelte";
function Save_all($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Save_all);
  const iconNode = [
    ["path", { "d": "M10 2v3a1 1 0 0 0 1 1h5" }],
    [
      "path",
      {
        "d": "M18 18v-6a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v6"
      }
    ],
    ["path", { "d": "M18 22H4a2 2 0 0 1-2-2V6" }],
    [
      "path",
      {
        "d": "M8 18a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9.172a2 2 0 0 1 1.414.586l2.828 2.828A2 2 0 0 1 22 6.828V16a2 2 0 0 1-2.01 2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "save-all" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Save_all, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Save_all);

// node_modules/lucide-svelte/dist/icons/save-off.svelte
mark_module_start();
Save_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/save-off.svelte";
function Save_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Save_off);
  const iconNode = [
    ["path", { "d": "M13 13H8a1 1 0 0 0-1 1v7" }],
    ["path", { "d": "M14 8h1" }],
    ["path", { "d": "M17 21v-4" }],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      {
        "d": "M20.41 20.41A2 2 0 0 1 19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 .59-1.41"
      }
    ],
    ["path", { "d": "M29.5 11.5s5 5 4 5" }],
    [
      "path",
      {
        "d": "M9 3h6.2a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "save-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Save_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Save_off);

// node_modules/lucide-svelte/dist/icons/save.svelte
mark_module_start();
Save[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/save.svelte";
function Save($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Save);
  const iconNode = [
    [
      "path",
      {
        "d": "M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z"
      }
    ],
    [
      "path",
      {
        "d": "M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7"
      }
    ],
    ["path", { "d": "M7 3v4a1 1 0 0 0 1 1h7" }]
  ];
  Icon($$anchor, spread_props({ name: "save" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Save, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Save);

// node_modules/lucide-svelte/dist/icons/scale-3d.svelte
mark_module_start();
Scale_3d[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scale-3d.svelte";
function Scale_3d($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scale_3d);
  const iconNode = [
    [
      "circle",
      { "cx": "19", "cy": "19", "r": "2" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "5", "r": "2" }
    ],
    ["path", { "d": "M5 7v12h12" }],
    ["path", { "d": "m5 19 6-6" }]
  ];
  Icon($$anchor, spread_props({ name: "scale-3d" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scale_3d, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scale_3d);

// node_modules/lucide-svelte/dist/icons/scale.svelte
mark_module_start();
Scale[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scale.svelte";
function Scale($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scale);
  const iconNode = [
    [
      "path",
      {
        "d": "m16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z"
      }
    ],
    [
      "path",
      {
        "d": "m2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z"
      }
    ],
    ["path", { "d": "M7 21h10" }],
    ["path", { "d": "M12 3v18" }],
    [
      "path",
      { "d": "M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "scale" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scale, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scale);

// node_modules/lucide-svelte/dist/icons/scaling.svelte
mark_module_start();
Scaling[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scaling.svelte";
function Scaling($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scaling);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"
      }
    ],
    ["path", { "d": "M14 15H9v-5" }],
    ["path", { "d": "M16 3h5v5" }],
    ["path", { "d": "M21 3 9 15" }]
  ];
  Icon($$anchor, spread_props({ name: "scaling" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scaling, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scaling);

// node_modules/lucide-svelte/dist/icons/scan-barcode.svelte
mark_module_start();
Scan_barcode[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scan-barcode.svelte";
function Scan_barcode($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scan_barcode);
  const iconNode = [
    ["path", { "d": "M3 7V5a2 2 0 0 1 2-2h2" }],
    ["path", { "d": "M17 3h2a2 2 0 0 1 2 2v2" }],
    [
      "path",
      { "d": "M21 17v2a2 2 0 0 1-2 2h-2" }
    ],
    ["path", { "d": "M7 21H5a2 2 0 0 1-2-2v-2" }],
    ["path", { "d": "M8 7v10" }],
    ["path", { "d": "M12 7v10" }],
    ["path", { "d": "M17 7v10" }]
  ];
  Icon($$anchor, spread_props({ name: "scan-barcode" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scan_barcode, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scan_barcode);

// node_modules/lucide-svelte/dist/icons/scan-eye.svelte
mark_module_start();
Scan_eye[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scan-eye.svelte";
function Scan_eye($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scan_eye);
  const iconNode = [
    ["path", { "d": "M3 7V5a2 2 0 0 1 2-2h2" }],
    ["path", { "d": "M17 3h2a2 2 0 0 1 2 2v2" }],
    [
      "path",
      { "d": "M21 17v2a2 2 0 0 1-2 2h-2" }
    ],
    ["path", { "d": "M7 21H5a2 2 0 0 1-2-2v-2" }],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "1" }
    ],
    [
      "path",
      {
        "d": "M18.944 12.33a1 1 0 0 0 0-.66 7.5 7.5 0 0 0-13.888 0 1 1 0 0 0 0 .66 7.5 7.5 0 0 0 13.888 0"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "scan-eye" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scan_eye, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scan_eye);

// node_modules/lucide-svelte/dist/icons/scan-face.svelte
mark_module_start();
Scan_face[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scan-face.svelte";
function Scan_face($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scan_face);
  const iconNode = [
    ["path", { "d": "M3 7V5a2 2 0 0 1 2-2h2" }],
    ["path", { "d": "M17 3h2a2 2 0 0 1 2 2v2" }],
    [
      "path",
      { "d": "M21 17v2a2 2 0 0 1-2 2h-2" }
    ],
    ["path", { "d": "M7 21H5a2 2 0 0 1-2-2v-2" }],
    ["path", { "d": "M8 14s1.5 2 4 2 4-2 4-2" }],
    ["path", { "d": "M9 9h.01" }],
    ["path", { "d": "M15 9h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "scan-face" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scan_face, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scan_face);

// node_modules/lucide-svelte/dist/icons/scan-line.svelte
mark_module_start();
Scan_line[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scan-line.svelte";
function Scan_line($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scan_line);
  const iconNode = [
    ["path", { "d": "M3 7V5a2 2 0 0 1 2-2h2" }],
    ["path", { "d": "M17 3h2a2 2 0 0 1 2 2v2" }],
    [
      "path",
      { "d": "M21 17v2a2 2 0 0 1-2 2h-2" }
    ],
    ["path", { "d": "M7 21H5a2 2 0 0 1-2-2v-2" }],
    ["path", { "d": "M7 12h10" }]
  ];
  Icon($$anchor, spread_props({ name: "scan-line" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scan_line, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scan_line);

// node_modules/lucide-svelte/dist/icons/scan-qr-code.svelte
mark_module_start();
Scan_qr_code[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scan-qr-code.svelte";
function Scan_qr_code($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scan_qr_code);
  const iconNode = [
    [
      "path",
      { "d": "M17 12v4a1 1 0 0 1-1 1h-4" }
    ],
    ["path", { "d": "M17 3h2a2 2 0 0 1 2 2v2" }],
    ["path", { "d": "M17 8V7" }],
    [
      "path",
      { "d": "M21 17v2a2 2 0 0 1-2 2h-2" }
    ],
    ["path", { "d": "M3 7V5a2 2 0 0 1 2-2h2" }],
    ["path", { "d": "M7 17h.01" }],
    ["path", { "d": "M7 21H5a2 2 0 0 1-2-2v-2" }],
    [
      "rect",
      {
        "x": "7",
        "y": "7",
        "width": "5",
        "height": "5",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "scan-qr-code" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scan_qr_code, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scan_qr_code);

// node_modules/lucide-svelte/dist/icons/scan-search.svelte
mark_module_start();
Scan_search[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scan-search.svelte";
function Scan_search($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scan_search);
  const iconNode = [
    ["path", { "d": "M3 7V5a2 2 0 0 1 2-2h2" }],
    ["path", { "d": "M17 3h2a2 2 0 0 1 2 2v2" }],
    [
      "path",
      { "d": "M21 17v2a2 2 0 0 1-2 2h-2" }
    ],
    ["path", { "d": "M7 21H5a2 2 0 0 1-2-2v-2" }],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ],
    ["path", { "d": "m16 16-1.9-1.9" }]
  ];
  Icon($$anchor, spread_props({ name: "scan-search" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scan_search, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scan_search);

// node_modules/lucide-svelte/dist/icons/scan-text.svelte
mark_module_start();
Scan_text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scan-text.svelte";
function Scan_text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scan_text);
  const iconNode = [
    ["path", { "d": "M3 7V5a2 2 0 0 1 2-2h2" }],
    ["path", { "d": "M17 3h2a2 2 0 0 1 2 2v2" }],
    [
      "path",
      { "d": "M21 17v2a2 2 0 0 1-2 2h-2" }
    ],
    ["path", { "d": "M7 21H5a2 2 0 0 1-2-2v-2" }],
    ["path", { "d": "M7 8h8" }],
    ["path", { "d": "M7 12h10" }],
    ["path", { "d": "M7 16h6" }]
  ];
  Icon($$anchor, spread_props({ name: "scan-text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scan_text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scan_text);

// node_modules/lucide-svelte/dist/icons/scan.svelte
mark_module_start();
Scan[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scan.svelte";
function Scan($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scan);
  const iconNode = [
    ["path", { "d": "M3 7V5a2 2 0 0 1 2-2h2" }],
    ["path", { "d": "M17 3h2a2 2 0 0 1 2 2v2" }],
    [
      "path",
      { "d": "M21 17v2a2 2 0 0 1-2 2h-2" }
    ],
    ["path", { "d": "M7 21H5a2 2 0 0 1-2-2v-2" }]
  ];
  Icon($$anchor, spread_props({ name: "scan" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scan, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scan);

// node_modules/lucide-svelte/dist/icons/school.svelte
mark_module_start();
School[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/school.svelte";
function School($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, School);
  const iconNode = [
    [
      "path",
      { "d": "M14 22v-4a2 2 0 1 0-4 0v4" }
    ],
    [
      "path",
      {
        "d": "m18 10 4 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-8l4-2"
      }
    ],
    ["path", { "d": "M18 5v17" }],
    ["path", { "d": "m4 6 8-4 8 4" }],
    ["path", { "d": "M6 5v17" }],
    [
      "circle",
      { "cx": "12", "cy": "9", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "school" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(School, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(School);

// node_modules/lucide-svelte/dist/icons/scissors-line-dashed.svelte
mark_module_start();
Scissors_line_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scissors-line-dashed.svelte";
function Scissors_line_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scissors_line_dashed);
  const iconNode = [
    ["path", { "d": "M5.42 9.42 8 12" }],
    [
      "circle",
      { "cx": "4", "cy": "8", "r": "2" }
    ],
    ["path", { "d": "m14 6-8.58 8.58" }],
    [
      "circle",
      { "cx": "4", "cy": "16", "r": "2" }
    ],
    ["path", { "d": "M10.8 14.8 14 18" }],
    ["path", { "d": "M16 12h-2" }],
    ["path", { "d": "M22 12h-2" }]
  ];
  Icon($$anchor, spread_props({ name: "scissors-line-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scissors_line_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scissors_line_dashed);

// node_modules/lucide-svelte/dist/icons/scissors.svelte
mark_module_start();
Scissors[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scissors.svelte";
function Scissors($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scissors);
  const iconNode = [
    [
      "circle",
      { "cx": "6", "cy": "6", "r": "3" }
    ],
    ["path", { "d": "M8.12 8.12 12 12" }],
    ["path", { "d": "M20 4 8.12 15.88" }],
    [
      "circle",
      { "cx": "6", "cy": "18", "r": "3" }
    ],
    ["path", { "d": "M14.8 14.8 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "scissors" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scissors, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scissors);

// node_modules/lucide-svelte/dist/icons/screen-share-off.svelte
mark_module_start();
Screen_share_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/screen-share-off.svelte";
function Screen_share_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Screen_share_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3"
      }
    ],
    ["path", { "d": "M8 21h8" }],
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "m22 3-5 5" }],
    ["path", { "d": "m17 3 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "screen-share-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Screen_share_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Screen_share_off);

// node_modules/lucide-svelte/dist/icons/screen-share.svelte
mark_module_start();
Screen_share[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/screen-share.svelte";
function Screen_share($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Screen_share);
  const iconNode = [
    [
      "path",
      {
        "d": "M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3"
      }
    ],
    ["path", { "d": "M8 21h8" }],
    ["path", { "d": "M12 17v4" }],
    ["path", { "d": "m17 8 5-5" }],
    ["path", { "d": "M17 3h5v5" }]
  ];
  Icon($$anchor, spread_props({ name: "screen-share" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Screen_share, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Screen_share);

// node_modules/lucide-svelte/dist/icons/scroll-text.svelte
mark_module_start();
Scroll_text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scroll-text.svelte";
function Scroll_text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scroll_text);
  const iconNode = [
    ["path", { "d": "M15 12h-5" }],
    ["path", { "d": "M15 8h-5" }],
    ["path", { "d": "M19 17V5a2 2 0 0 0-2-2H4" }],
    [
      "path",
      {
        "d": "M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "scroll-text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scroll_text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scroll_text);

// node_modules/lucide-svelte/dist/icons/scroll.svelte
mark_module_start();
Scroll[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/scroll.svelte";
function Scroll($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Scroll);
  const iconNode = [
    ["path", { "d": "M19 17V5a2 2 0 0 0-2-2H4" }],
    [
      "path",
      {
        "d": "M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "scroll" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Scroll, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Scroll);

// node_modules/lucide-svelte/dist/icons/search-check.svelte
mark_module_start();
Search_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/search-check.svelte";
function Search_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Search_check);
  const iconNode = [
    ["path", { "d": "m8 11 2 2 4-4" }],
    [
      "circle",
      { "cx": "11", "cy": "11", "r": "8" }
    ],
    ["path", { "d": "m21 21-4.3-4.3" }]
  ];
  Icon($$anchor, spread_props({ name: "search-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Search_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Search_check);

// node_modules/lucide-svelte/dist/icons/search-code.svelte
mark_module_start();
Search_code[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/search-code.svelte";
function Search_code($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Search_code);
  const iconNode = [
    ["path", { "d": "m13 13.5 2-2.5-2-2.5" }],
    ["path", { "d": "m21 21-4.3-4.3" }],
    ["path", { "d": "M9 8.5 7 11l2 2.5" }],
    [
      "circle",
      { "cx": "11", "cy": "11", "r": "8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "search-code" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Search_code, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Search_code);

// node_modules/lucide-svelte/dist/icons/search-slash.svelte
mark_module_start();
Search_slash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/search-slash.svelte";
function Search_slash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Search_slash);
  const iconNode = [
    ["path", { "d": "m13.5 8.5-5 5" }],
    [
      "circle",
      { "cx": "11", "cy": "11", "r": "8" }
    ],
    ["path", { "d": "m21 21-4.3-4.3" }]
  ];
  Icon($$anchor, spread_props({ name: "search-slash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Search_slash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Search_slash);

// node_modules/lucide-svelte/dist/icons/search-x.svelte
mark_module_start();
Search_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/search-x.svelte";
function Search_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Search_x);
  const iconNode = [
    ["path", { "d": "m13.5 8.5-5 5" }],
    ["path", { "d": "m8.5 8.5 5 5" }],
    [
      "circle",
      { "cx": "11", "cy": "11", "r": "8" }
    ],
    ["path", { "d": "m21 21-4.3-4.3" }]
  ];
  Icon($$anchor, spread_props({ name: "search-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Search_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Search_x);

// node_modules/lucide-svelte/dist/icons/search.svelte
mark_module_start();
Search[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/search.svelte";
function Search($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Search);
  const iconNode = [
    [
      "circle",
      { "cx": "11", "cy": "11", "r": "8" }
    ],
    ["path", { "d": "m21 21-4.3-4.3" }]
  ];
  Icon($$anchor, spread_props({ name: "search" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Search, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Search);

// node_modules/lucide-svelte/dist/icons/section.svelte
mark_module_start();
Section[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/section.svelte";
function Section($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Section);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 5a4 3 0 0 0-8 0c0 4 8 3 8 7a4 3 0 0 1-8 0"
      }
    ],
    [
      "path",
      {
        "d": "M8 19a4 3 0 0 0 8 0c0-4-8-3-8-7a4 3 0 0 1 8 0"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "section" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Section, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Section);

// node_modules/lucide-svelte/dist/icons/send-horizontal.svelte
mark_module_start();
Send_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/send-horizontal.svelte";
function Send_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Send_horizontal);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.714 3.048a.498.498 0 0 0-.683.627l2.843 7.627a2 2 0 0 1 0 1.396l-2.842 7.627a.498.498 0 0 0 .682.627l18-8.5a.5.5 0 0 0 0-.904z"
      }
    ],
    ["path", { "d": "M6 12h16" }]
  ];
  Icon($$anchor, spread_props({ name: "send-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Send_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Send_horizontal);

// node_modules/lucide-svelte/dist/icons/send-to-back.svelte
mark_module_start();
Send_to_back[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/send-to-back.svelte";
function Send_to_back($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Send_to_back);
  const iconNode = [
    [
      "rect",
      {
        "x": "14",
        "y": "14",
        "width": "8",
        "height": "8",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "x": "2",
        "y": "2",
        "width": "8",
        "height": "8",
        "rx": "2"
      }
    ],
    ["path", { "d": "M7 14v1a2 2 0 0 0 2 2h1" }],
    ["path", { "d": "M14 7h1a2 2 0 0 1 2 2v1" }]
  ];
  Icon($$anchor, spread_props({ name: "send-to-back" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Send_to_back, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Send_to_back);

// node_modules/lucide-svelte/dist/icons/send.svelte
mark_module_start();
Send[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/send.svelte";
function Send($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Send);
  const iconNode = [
    [
      "path",
      {
        "d": "M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z"
      }
    ],
    [
      "path",
      { "d": "m21.854 2.147-10.94 10.939" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "send" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Send, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Send);

// node_modules/lucide-svelte/dist/icons/separator-horizontal.svelte
mark_module_start();
Separator_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/separator-horizontal.svelte";
function Separator_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Separator_horizontal);
  const iconNode = [
    [
      "line",
      {
        "x1": "3",
        "x2": "21",
        "y1": "12",
        "y2": "12"
      }
    ],
    ["polyline", { "points": "8 8 12 4 16 8" }],
    [
      "polyline",
      { "points": "16 16 12 20 8 16" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "separator-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Separator_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Separator_horizontal);

// node_modules/lucide-svelte/dist/icons/separator-vertical.svelte
mark_module_start();
Separator_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/separator-vertical.svelte";
function Separator_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Separator_vertical);
  const iconNode = [
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "3",
        "y2": "21"
      }
    ],
    ["polyline", { "points": "8 8 4 12 8 16" }],
    [
      "polyline",
      { "points": "16 16 20 12 16 8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "separator-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Separator_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Separator_vertical);

// node_modules/lucide-svelte/dist/icons/server-cog.svelte
mark_module_start();
Server_cog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/server-cog.svelte";
function Server_cog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Server_cog);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ],
    [
      "path",
      {
        "d": "M4.5 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-.5"
      }
    ],
    [
      "path",
      {
        "d": "M4.5 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-.5"
      }
    ],
    ["path", { "d": "M6 6h.01" }],
    ["path", { "d": "M6 18h.01" }],
    ["path", { "d": "m15.7 13.4-.9-.3" }],
    ["path", { "d": "m9.2 10.9-.9-.3" }],
    ["path", { "d": "m10.6 15.7.3-.9" }],
    ["path", { "d": "m13.6 15.7-.4-1" }],
    ["path", { "d": "m10.8 9.3-.4-1" }],
    ["path", { "d": "m8.3 13.6 1-.4" }],
    ["path", { "d": "m14.7 10.8 1-.4" }],
    ["path", { "d": "m13.4 8.3-.3.9" }]
  ];
  Icon($$anchor, spread_props({ name: "server-cog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Server_cog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Server_cog);

// node_modules/lucide-svelte/dist/icons/server-crash.svelte
mark_module_start();
Server_crash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/server-crash.svelte";
function Server_crash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Server_crash);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2"
      }
    ],
    [
      "path",
      {
        "d": "M6 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-2"
      }
    ],
    ["path", { "d": "M6 6h.01" }],
    ["path", { "d": "M6 18h.01" }],
    ["path", { "d": "m13 6-4 6h6l-4 6" }]
  ];
  Icon($$anchor, spread_props({ name: "server-crash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Server_crash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Server_crash);

// node_modules/lucide-svelte/dist/icons/server-off.svelte
mark_module_start();
Server_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/server-off.svelte";
function Server_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Server_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M7 2h13a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-5"
      }
    ],
    [
      "path",
      {
        "d": "M10 10 2.5 2.5C2 2 2 2.5 2 5v3a2 2 0 0 0 2 2h6z"
      }
    ],
    [
      "path",
      { "d": "M22 17v-1a2 2 0 0 0-2-2h-1" }
    ],
    [
      "path",
      {
        "d": "M4 14a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16.5l1-.5.5.5-8-8H4z"
      }
    ],
    ["path", { "d": "M6 18h.01" }],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "server-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Server_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Server_off);

// node_modules/lucide-svelte/dist/icons/server.svelte
mark_module_start();
Server[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/server.svelte";
function Server($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Server);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "8",
        "x": "2",
        "y": "2",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "rect",
      {
        "width": "20",
        "height": "8",
        "x": "2",
        "y": "14",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "6.01",
        "y1": "6",
        "y2": "6"
      }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "6.01",
        "y1": "18",
        "y2": "18"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "server" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Server, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Server);

// node_modules/lucide-svelte/dist/icons/settings-2.svelte
mark_module_start();
Settings_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/settings-2.svelte";
function Settings_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Settings_2);
  const iconNode = [
    ["path", { "d": "M20 7h-9" }],
    ["path", { "d": "M14 17H5" }],
    [
      "circle",
      { "cx": "17", "cy": "17", "r": "3" }
    ],
    [
      "circle",
      { "cx": "7", "cy": "7", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "settings-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Settings_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Settings_2);

// node_modules/lucide-svelte/dist/icons/settings.svelte
mark_module_start();
Settings[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/settings.svelte";
function Settings($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Settings);
  const iconNode = [
    [
      "path",
      {
        "d": "M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "settings" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Settings, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Settings);

// node_modules/lucide-svelte/dist/icons/shapes.svelte
mark_module_start();
Shapes[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shapes.svelte";
function Shapes($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shapes);
  const iconNode = [
    [
      "path",
      {
        "d": "M8.3 10a.7.7 0 0 1-.626-1.079L11.4 3a.7.7 0 0 1 1.198-.043L16.3 8.9a.7.7 0 0 1-.572 1.1Z"
      }
    ],
    [
      "rect",
      {
        "x": "3",
        "y": "14",
        "width": "7",
        "height": "7",
        "rx": "1"
      }
    ],
    [
      "circle",
      { "cx": "17.5", "cy": "17.5", "r": "3.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "shapes" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shapes, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shapes);

// node_modules/lucide-svelte/dist/icons/share-2.svelte
mark_module_start();
Share_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/share-2.svelte";
function Share_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Share_2);
  const iconNode = [
    [
      "circle",
      { "cx": "18", "cy": "5", "r": "3" }
    ],
    [
      "circle",
      { "cx": "6", "cy": "12", "r": "3" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "19", "r": "3" }
    ],
    [
      "line",
      {
        "x1": "8.59",
        "x2": "15.42",
        "y1": "13.51",
        "y2": "17.49"
      }
    ],
    [
      "line",
      {
        "x1": "15.41",
        "x2": "8.59",
        "y1": "6.51",
        "y2": "10.49"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "share-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Share_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Share_2);

// node_modules/lucide-svelte/dist/icons/share.svelte
mark_module_start();
Share[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/share.svelte";
function Share($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Share);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"
      }
    ],
    ["polyline", { "points": "16 6 12 2 8 6" }],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "2",
        "y2": "15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "share" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Share, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Share);

// node_modules/lucide-svelte/dist/icons/sheet.svelte
mark_module_start();
Sheet[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sheet.svelte";
function Sheet($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sheet);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "line",
      { "x1": "3", "x2": "21", "y1": "9", "y2": "9" }
    ],
    [
      "line",
      {
        "x1": "3",
        "x2": "21",
        "y1": "15",
        "y2": "15"
      }
    ],
    [
      "line",
      { "x1": "9", "x2": "9", "y1": "9", "y2": "21" }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "15",
        "y1": "9",
        "y2": "21"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "sheet" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sheet, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sheet);

// node_modules/lucide-svelte/dist/icons/shell.svelte
mark_module_start();
Shell[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shell.svelte";
function Shell($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shell);
  const iconNode = [
    [
      "path",
      {
        "d": "M14 11a2 2 0 1 1-4 0 4 4 0 0 1 8 0 6 6 0 0 1-12 0 8 8 0 0 1 16 0 10 10 0 1 1-20 0 11.93 11.93 0 0 1 2.42-7.22 2 2 0 1 1 3.16 2.44"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "shell" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shell, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shell);

// node_modules/lucide-svelte/dist/icons/shield-alert.svelte
mark_module_start();
Shield_alert[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shield-alert.svelte";
function Shield_alert($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shield_alert);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
      }
    ],
    ["path", { "d": "M12 8v4" }],
    ["path", { "d": "M12 16h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "shield-alert" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shield_alert, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shield_alert);

// node_modules/lucide-svelte/dist/icons/shield-ban.svelte
mark_module_start();
Shield_ban[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shield-ban.svelte";
function Shield_ban($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shield_ban);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
      }
    ],
    ["path", { "d": "m4.243 5.21 14.39 12.472" }]
  ];
  Icon($$anchor, spread_props({ name: "shield-ban" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shield_ban, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shield_ban);

// node_modules/lucide-svelte/dist/icons/shield-check.svelte
mark_module_start();
Shield_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shield-check.svelte";
function Shield_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shield_check);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
      }
    ],
    ["path", { "d": "m9 12 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "shield-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shield_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shield_check);

// node_modules/lucide-svelte/dist/icons/shield-ellipsis.svelte
mark_module_start();
Shield_ellipsis[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shield-ellipsis.svelte";
function Shield_ellipsis($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shield_ellipsis);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
      }
    ],
    ["path", { "d": "M8 12h.01" }],
    ["path", { "d": "M12 12h.01" }],
    ["path", { "d": "M16 12h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "shield-ellipsis" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shield_ellipsis, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shield_ellipsis);

// node_modules/lucide-svelte/dist/icons/shield-half.svelte
mark_module_start();
Shield_half[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shield-half.svelte";
function Shield_half($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shield_half);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
      }
    ],
    ["path", { "d": "M12 22V2" }]
  ];
  Icon($$anchor, spread_props({ name: "shield-half" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shield_half, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shield_half);

// node_modules/lucide-svelte/dist/icons/shield-minus.svelte
mark_module_start();
Shield_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shield-minus.svelte";
function Shield_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shield_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
      }
    ],
    ["path", { "d": "M9 12h6" }]
  ];
  Icon($$anchor, spread_props({ name: "shield-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shield_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shield_minus);

// node_modules/lucide-svelte/dist/icons/shield-off.svelte
mark_module_start();
Shield_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shield-off.svelte";
function Shield_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shield_off);
  const iconNode = [
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      {
        "d": "M5 5a1 1 0 0 0-1 1v7c0 5 3.5 7.5 7.67 8.94a1 1 0 0 0 .67.01c2.35-.82 4.48-1.97 5.9-3.71"
      }
    ],
    [
      "path",
      {
        "d": "M9.309 3.652A12.252 12.252 0 0 0 11.24 2.28a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1v7a9.784 9.784 0 0 1-.08 1.264"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "shield-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shield_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shield_off);

// node_modules/lucide-svelte/dist/icons/shield-plus.svelte
mark_module_start();
Shield_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shield-plus.svelte";
function Shield_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shield_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
      }
    ],
    ["path", { "d": "M9 12h6" }],
    ["path", { "d": "M12 9v6" }]
  ];
  Icon($$anchor, spread_props({ name: "shield-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shield_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shield_plus);

// node_modules/lucide-svelte/dist/icons/shield-question.svelte
mark_module_start();
Shield_question[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shield-question.svelte";
function Shield_question($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shield_question);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
      }
    ],
    [
      "path",
      { "d": "M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3" }
    ],
    ["path", { "d": "M12 17h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "shield-question" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shield_question, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shield_question);

// node_modules/lucide-svelte/dist/icons/shield-x.svelte
mark_module_start();
Shield_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shield-x.svelte";
function Shield_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shield_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
      }
    ],
    ["path", { "d": "m14.5 9.5-5 5" }],
    ["path", { "d": "m9.5 9.5 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "shield-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shield_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shield_x);

// node_modules/lucide-svelte/dist/icons/shield.svelte
mark_module_start();
Shield[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shield.svelte";
function Shield($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shield);
  const iconNode = [
    [
      "path",
      {
        "d": "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "shield" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shield, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shield);

// node_modules/lucide-svelte/dist/icons/ship-wheel.svelte
mark_module_start();
Ship_wheel[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ship-wheel.svelte";
function Ship_wheel($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ship_wheel);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "8" }
    ],
    ["path", { "d": "M12 2v7.5" }],
    ["path", { "d": "m19 5-5.23 5.23" }],
    ["path", { "d": "M22 12h-7.5" }],
    ["path", { "d": "m19 19-5.23-5.23" }],
    ["path", { "d": "M12 14.5V22" }],
    ["path", { "d": "M10.23 13.77 5 19" }],
    ["path", { "d": "M9.5 12H2" }],
    ["path", { "d": "M10.23 10.23 5 5" }],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "2.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ship-wheel" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ship_wheel, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ship_wheel);

// node_modules/lucide-svelte/dist/icons/ship.svelte
mark_module_start();
Ship[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ship.svelte";
function Ship($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ship);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 21c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1 .6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
      }
    ],
    [
      "path",
      {
        "d": "M19.38 20A11.6 11.6 0 0 0 21 14l-9-4-9 4c0 2.9.94 5.34 2.81 7.76"
      }
    ],
    [
      "path",
      {
        "d": "M19 13V7a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v6"
      }
    ],
    ["path", { "d": "M12 10v4" }],
    ["path", { "d": "M12 2v3" }]
  ];
  Icon($$anchor, spread_props({ name: "ship" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ship, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ship);

// node_modules/lucide-svelte/dist/icons/shirt.svelte
mark_module_start();
Shirt[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shirt.svelte";
function Shirt($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shirt);
  const iconNode = [
    [
      "path",
      {
        "d": "M20.38 3.46 16 2a4 4 0 0 1-8 0L3.62 3.46a2 2 0 0 0-1.34 2.23l.58 3.47a1 1 0 0 0 .99.84H6v10c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V10h2.15a1 1 0 0 0 .99-.84l.58-3.47a2 2 0 0 0-1.34-2.23z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "shirt" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shirt, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shirt);

// node_modules/lucide-svelte/dist/icons/shopping-bag.svelte
mark_module_start();
Shopping_bag[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shopping-bag.svelte";
function Shopping_bag($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shopping_bag);
  const iconNode = [
    [
      "path",
      {
        "d": "M6 2 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4Z"
      }
    ],
    ["path", { "d": "M3 6h18" }],
    ["path", { "d": "M16 10a4 4 0 0 1-8 0" }]
  ];
  Icon($$anchor, spread_props({ name: "shopping-bag" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shopping_bag, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shopping_bag);

// node_modules/lucide-svelte/dist/icons/shopping-basket.svelte
mark_module_start();
Shopping_basket[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shopping-basket.svelte";
function Shopping_basket($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shopping_basket);
  const iconNode = [
    ["path", { "d": "m15 11-1 9" }],
    ["path", { "d": "m19 11-4-7" }],
    ["path", { "d": "M2 11h20" }],
    [
      "path",
      {
        "d": "m3.5 11 1.6 7.4a2 2 0 0 0 2 1.6h9.8a2 2 0 0 0 2-1.6l1.7-7.4"
      }
    ],
    ["path", { "d": "M4.5 15.5h15" }],
    ["path", { "d": "m5 11 4-7" }],
    ["path", { "d": "m9 11 1 9" }]
  ];
  Icon($$anchor, spread_props({ name: "shopping-basket" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shopping_basket, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shopping_basket);

// node_modules/lucide-svelte/dist/icons/shopping-cart.svelte
mark_module_start();
Shopping_cart[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shopping-cart.svelte";
function Shopping_cart($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shopping_cart);
  const iconNode = [
    [
      "circle",
      { "cx": "8", "cy": "21", "r": "1" }
    ],
    [
      "circle",
      { "cx": "19", "cy": "21", "r": "1" }
    ],
    [
      "path",
      {
        "d": "M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "shopping-cart" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shopping_cart, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shopping_cart);

// node_modules/lucide-svelte/dist/icons/shovel.svelte
mark_module_start();
Shovel[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shovel.svelte";
function Shovel($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shovel);
  const iconNode = [
    ["path", { "d": "M2 22v-5l5-5 5 5-5 5z" }],
    ["path", { "d": "M9.5 14.5 16 8" }],
    [
      "path",
      {
        "d": "m17 2 5 5-.5.5a3.53 3.53 0 0 1-5 0s0 0 0 0a3.53 3.53 0 0 1 0-5L17 2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "shovel" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shovel, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shovel);

// node_modules/lucide-svelte/dist/icons/shower-head.svelte
mark_module_start();
Shower_head[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shower-head.svelte";
function Shower_head($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shower_head);
  const iconNode = [
    ["path", { "d": "m4 4 2.5 2.5" }],
    [
      "path",
      { "d": "M13.5 6.5a4.95 4.95 0 0 0-7 7" }
    ],
    ["path", { "d": "M15 5 5 15" }],
    ["path", { "d": "M14 17v.01" }],
    ["path", { "d": "M10 16v.01" }],
    ["path", { "d": "M13 13v.01" }],
    ["path", { "d": "M16 10v.01" }],
    ["path", { "d": "M11 20v.01" }],
    ["path", { "d": "M17 14v.01" }],
    ["path", { "d": "M20 11v.01" }]
  ];
  Icon($$anchor, spread_props({ name: "shower-head" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shower_head, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shower_head);

// node_modules/lucide-svelte/dist/icons/shrink.svelte
mark_module_start();
Shrink[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shrink.svelte";
function Shrink($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shrink);
  const iconNode = [
    [
      "path",
      { "d": "m15 15 6 6m-6-6v4.8m0-4.8h4.8" }
    ],
    [
      "path",
      { "d": "M9 19.8V15m0 0H4.2M9 15l-6 6" }
    ],
    [
      "path",
      { "d": "M15 4.2V9m0 0h4.8M15 9l6-6" }
    ],
    ["path", { "d": "M9 4.2V9m0 0H4.2M9 9 3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "shrink" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shrink, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shrink);

// node_modules/lucide-svelte/dist/icons/shrub.svelte
mark_module_start();
Shrub[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shrub.svelte";
function Shrub($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shrub);
  const iconNode = [
    ["path", { "d": "M12 22v-7l-2-2" }],
    [
      "path",
      {
        "d": "M17 8v.8A6 6 0 0 1 13.8 20H10A6.5 6.5 0 0 1 7 8a5 5 0 0 1 10 0Z"
      }
    ],
    ["path", { "d": "m14 14-2 2" }]
  ];
  Icon($$anchor, spread_props({ name: "shrub" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shrub, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shrub);

// node_modules/lucide-svelte/dist/icons/shuffle.svelte
mark_module_start();
Shuffle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/shuffle.svelte";
function Shuffle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Shuffle);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 18h1.4c1.3 0 2.5-.6 3.3-1.7l6.1-8.6c.7-1.1 2-1.7 3.3-1.7H22"
      }
    ],
    ["path", { "d": "m18 2 4 4-4 4" }],
    [
      "path",
      { "d": "M2 6h1.9c1.5 0 2.9.9 3.6 2.2" }
    ],
    [
      "path",
      {
        "d": "M22 18h-5.9c-1.3 0-2.6-.7-3.3-1.8l-.5-.8"
      }
    ],
    ["path", { "d": "m18 14 4 4-4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "shuffle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Shuffle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Shuffle);

// node_modules/lucide-svelte/dist/icons/sigma.svelte
mark_module_start();
Sigma[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sigma.svelte";
function Sigma($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sigma);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 7V5a1 1 0 0 0-1-1H6.5a.5.5 0 0 0-.4.8l4.5 6a2 2 0 0 1 0 2.4l-4.5 6a.5.5 0 0 0 .4.8H17a1 1 0 0 0 1-1v-2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "sigma" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sigma, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sigma);

// node_modules/lucide-svelte/dist/icons/signal-high.svelte
mark_module_start();
Signal_high[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/signal-high.svelte";
function Signal_high($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Signal_high);
  const iconNode = [
    ["path", { "d": "M2 20h.01" }],
    ["path", { "d": "M7 20v-4" }],
    ["path", { "d": "M12 20v-8" }],
    ["path", { "d": "M17 20V8" }]
  ];
  Icon($$anchor, spread_props({ name: "signal-high" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Signal_high, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Signal_high);

// node_modules/lucide-svelte/dist/icons/signal-low.svelte
mark_module_start();
Signal_low[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/signal-low.svelte";
function Signal_low($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Signal_low);
  const iconNode = [
    ["path", { "d": "M2 20h.01" }],
    ["path", { "d": "M7 20v-4" }]
  ];
  Icon($$anchor, spread_props({ name: "signal-low" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Signal_low, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Signal_low);

// node_modules/lucide-svelte/dist/icons/signal-medium.svelte
mark_module_start();
Signal_medium[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/signal-medium.svelte";
function Signal_medium($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Signal_medium);
  const iconNode = [
    ["path", { "d": "M2 20h.01" }],
    ["path", { "d": "M7 20v-4" }],
    ["path", { "d": "M12 20v-8" }]
  ];
  Icon($$anchor, spread_props({ name: "signal-medium" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Signal_medium, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Signal_medium);

// node_modules/lucide-svelte/dist/icons/signal-zero.svelte
mark_module_start();
Signal_zero[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/signal-zero.svelte";
function Signal_zero($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Signal_zero);
  const iconNode = [["path", { "d": "M2 20h.01" }]];
  Icon($$anchor, spread_props({ name: "signal-zero" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Signal_zero, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Signal_zero);

// node_modules/lucide-svelte/dist/icons/signal.svelte
mark_module_start();
Signal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/signal.svelte";
function Signal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Signal);
  const iconNode = [
    ["path", { "d": "M2 20h.01" }],
    ["path", { "d": "M7 20v-4" }],
    ["path", { "d": "M12 20v-8" }],
    ["path", { "d": "M17 20V8" }],
    ["path", { "d": "M22 4v16" }]
  ];
  Icon($$anchor, spread_props({ name: "signal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Signal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Signal);

// node_modules/lucide-svelte/dist/icons/signature.svelte
mark_module_start();
Signature[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/signature.svelte";
function Signature($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Signature);
  const iconNode = [
    [
      "path",
      {
        "d": "m21 17-2.156-1.868A.5.5 0 0 0 18 15.5v.5a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1c0-2.545-3.991-3.97-8.5-4a1 1 0 0 0 0 5c4.153 0 4.745-11.295 5.708-13.5a2.5 2.5 0 1 1 3.31 3.284"
      }
    ],
    ["path", { "d": "M3 21h18" }]
  ];
  Icon($$anchor, spread_props({ name: "signature" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Signature, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Signature);

// node_modules/lucide-svelte/dist/icons/signpost-big.svelte
mark_module_start();
Signpost_big[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/signpost-big.svelte";
function Signpost_big($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Signpost_big);
  const iconNode = [
    ["path", { "d": "M10 9H4L2 7l2-2h6" }],
    ["path", { "d": "M14 5h6l2 2-2 2h-6" }],
    [
      "path",
      { "d": "M10 22V4a2 2 0 1 1 4 0v18" }
    ],
    ["path", { "d": "M8 22h8" }]
  ];
  Icon($$anchor, spread_props({ name: "signpost-big" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Signpost_big, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Signpost_big);

// node_modules/lucide-svelte/dist/icons/signpost.svelte
mark_module_start();
Signpost[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/signpost.svelte";
function Signpost($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Signpost);
  const iconNode = [
    ["path", { "d": "M12 13v8" }],
    ["path", { "d": "M12 3v3" }],
    [
      "path",
      {
        "d": "M18 6a2 2 0 0 1 1.387.56l2.307 2.22a1 1 0 0 1 0 1.44l-2.307 2.22A2 2 0 0 1 18 13H6a2 2 0 0 1-1.387-.56l-2.306-2.22a1 1 0 0 1 0-1.44l2.306-2.22A2 2 0 0 1 6 6z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "signpost" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Signpost, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Signpost);

// node_modules/lucide-svelte/dist/icons/siren.svelte
mark_module_start();
Siren[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/siren.svelte";
function Siren($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Siren);
  const iconNode = [
    [
      "path",
      { "d": "M7 18v-6a5 5 0 1 1 10 0v6" }
    ],
    [
      "path",
      {
        "d": "M5 21a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-1a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2z"
      }
    ],
    ["path", { "d": "M21 12h1" }],
    ["path", { "d": "M18.5 4.5 18 5" }],
    ["path", { "d": "M2 12h1" }],
    ["path", { "d": "M12 2v1" }],
    ["path", { "d": "m4.929 4.929.707.707" }],
    ["path", { "d": "M12 12v6" }]
  ];
  Icon($$anchor, spread_props({ name: "siren" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Siren, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Siren);

// node_modules/lucide-svelte/dist/icons/skip-back.svelte
mark_module_start();
Skip_back[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/skip-back.svelte";
function Skip_back($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Skip_back);
  const iconNode = [
    [
      "polygon",
      { "points": "19 20 9 12 19 4 19 20" }
    ],
    [
      "line",
      { "x1": "5", "x2": "5", "y1": "19", "y2": "5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "skip-back" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Skip_back, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Skip_back);

// node_modules/lucide-svelte/dist/icons/skip-forward.svelte
mark_module_start();
Skip_forward[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/skip-forward.svelte";
function Skip_forward($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Skip_forward);
  const iconNode = [
    [
      "polygon",
      { "points": "5 4 15 12 5 20 5 4" }
    ],
    [
      "line",
      {
        "x1": "19",
        "x2": "19",
        "y1": "5",
        "y2": "19"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "skip-forward" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Skip_forward, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Skip_forward);

// node_modules/lucide-svelte/dist/icons/skull.svelte
mark_module_start();
Skull[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/skull.svelte";
function Skull($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Skull);
  const iconNode = [
    ["path", { "d": "m12.5 17-.5-1-.5 1h1z" }],
    [
      "path",
      {
        "d": "M15 22a1 1 0 0 0 1-1v-1a2 2 0 0 0 1.56-3.25 8 8 0 1 0-11.12 0A2 2 0 0 0 8 20v1a1 1 0 0 0 1 1z"
      }
    ],
    [
      "circle",
      { "cx": "15", "cy": "12", "r": "1" }
    ],
    [
      "circle",
      { "cx": "9", "cy": "12", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "skull" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Skull, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Skull);

// node_modules/lucide-svelte/dist/icons/slack.svelte
mark_module_start();
Slack[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/slack.svelte";
function Slack($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Slack);
  const iconNode = [
    [
      "rect",
      {
        "width": "3",
        "height": "8",
        "x": "13",
        "y": "2",
        "rx": "1.5"
      }
    ],
    [
      "path",
      { "d": "M19 8.5V10h1.5A1.5 1.5 0 1 0 19 8.5" }
    ],
    [
      "rect",
      {
        "width": "3",
        "height": "8",
        "x": "8",
        "y": "14",
        "rx": "1.5"
      }
    ],
    [
      "path",
      { "d": "M5 15.5V14H3.5A1.5 1.5 0 1 0 5 15.5" }
    ],
    [
      "rect",
      {
        "width": "8",
        "height": "3",
        "x": "14",
        "y": "13",
        "rx": "1.5"
      }
    ],
    [
      "path",
      { "d": "M15.5 19H14v1.5a1.5 1.5 0 1 0 1.5-1.5" }
    ],
    [
      "rect",
      {
        "width": "8",
        "height": "3",
        "x": "2",
        "y": "8",
        "rx": "1.5"
      }
    ],
    [
      "path",
      { "d": "M8.5 5H10V3.5A1.5 1.5 0 1 0 8.5 5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "slack" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Slack, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Slack);

// node_modules/lucide-svelte/dist/icons/slash.svelte
mark_module_start();
Slash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/slash.svelte";
function Slash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Slash);
  const iconNode = [["path", { "d": "M22 2 2 22" }]];
  Icon($$anchor, spread_props({ name: "slash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Slash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Slash);

// node_modules/lucide-svelte/dist/icons/slice.svelte
mark_module_start();
Slice[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/slice.svelte";
function Slice($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Slice);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 16.586V19a1 1 0 0 1-1 1H2L18.37 3.63a1 1 0 1 1 3 3l-9.663 9.663a1 1 0 0 1-1.414 0L8 14"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "slice" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Slice, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Slice);

// node_modules/lucide-svelte/dist/icons/sliders-horizontal.svelte
mark_module_start();
Sliders_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sliders-horizontal.svelte";
function Sliders_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sliders_horizontal);
  const iconNode = [
    [
      "line",
      {
        "x1": "21",
        "x2": "14",
        "y1": "4",
        "y2": "4"
      }
    ],
    [
      "line",
      { "x1": "10", "x2": "3", "y1": "4", "y2": "4" }
    ],
    [
      "line",
      {
        "x1": "21",
        "x2": "12",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "3",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "21",
        "x2": "16",
        "y1": "20",
        "y2": "20"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "3",
        "y1": "20",
        "y2": "20"
      }
    ],
    [
      "line",
      {
        "x1": "14",
        "x2": "14",
        "y1": "2",
        "y2": "6"
      }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "8",
        "y1": "10",
        "y2": "14"
      }
    ],
    [
      "line",
      {
        "x1": "16",
        "x2": "16",
        "y1": "18",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "sliders-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sliders_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sliders_horizontal);

// node_modules/lucide-svelte/dist/icons/sliders-vertical.svelte
mark_module_start();
Sliders_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sliders-vertical.svelte";
function Sliders_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sliders_vertical);
  const iconNode = [
    [
      "line",
      {
        "x1": "4",
        "x2": "4",
        "y1": "21",
        "y2": "14"
      }
    ],
    [
      "line",
      { "x1": "4", "x2": "4", "y1": "10", "y2": "3" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "21",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "8",
        "y2": "3"
      }
    ],
    [
      "line",
      {
        "x1": "20",
        "x2": "20",
        "y1": "21",
        "y2": "16"
      }
    ],
    [
      "line",
      {
        "x1": "20",
        "x2": "20",
        "y1": "12",
        "y2": "3"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "6",
        "y1": "14",
        "y2": "14"
      }
    ],
    [
      "line",
      {
        "x1": "10",
        "x2": "14",
        "y1": "8",
        "y2": "8"
      }
    ],
    [
      "line",
      {
        "x1": "18",
        "x2": "22",
        "y1": "16",
        "y2": "16"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "sliders-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sliders_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sliders_vertical);

// node_modules/lucide-svelte/dist/icons/smartphone-charging.svelte
mark_module_start();
Smartphone_charging[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/smartphone-charging.svelte";
function Smartphone_charging($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Smartphone_charging);
  const iconNode = [
    [
      "rect",
      {
        "width": "14",
        "height": "20",
        "x": "5",
        "y": "2",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "path",
      { "d": "M12.667 8 10 12h4l-2.667 4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "smartphone-charging" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Smartphone_charging, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Smartphone_charging);

// node_modules/lucide-svelte/dist/icons/smartphone-nfc.svelte
mark_module_start();
Smartphone_nfc[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/smartphone-nfc.svelte";
function Smartphone_nfc($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Smartphone_nfc);
  const iconNode = [
    [
      "rect",
      {
        "width": "7",
        "height": "12",
        "x": "2",
        "y": "6",
        "rx": "1"
      }
    ],
    [
      "path",
      { "d": "M13 8.32a7.43 7.43 0 0 1 0 7.36" }
    ],
    [
      "path",
      { "d": "M16.46 6.21a11.76 11.76 0 0 1 0 11.58" }
    ],
    [
      "path",
      { "d": "M19.91 4.1a15.91 15.91 0 0 1 .01 15.8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "smartphone-nfc" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Smartphone_nfc, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Smartphone_nfc);

// node_modules/lucide-svelte/dist/icons/smartphone.svelte
mark_module_start();
Smartphone[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/smartphone.svelte";
function Smartphone($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Smartphone);
  const iconNode = [
    [
      "rect",
      {
        "width": "14",
        "height": "20",
        "x": "5",
        "y": "2",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["path", { "d": "M12 18h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "smartphone" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Smartphone, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Smartphone);

// node_modules/lucide-svelte/dist/icons/smile-plus.svelte
mark_module_start();
Smile_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/smile-plus.svelte";
function Smile_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Smile_plus);
  const iconNode = [
    [
      "path",
      { "d": "M22 11v1a10 10 0 1 1-9-10" }
    ],
    ["path", { "d": "M8 14s1.5 2 4 2 4-2 4-2" }],
    [
      "line",
      {
        "x1": "9",
        "x2": "9.01",
        "y1": "9",
        "y2": "9"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "15.01",
        "y1": "9",
        "y2": "9"
      }
    ],
    ["path", { "d": "M16 5h6" }],
    ["path", { "d": "M19 2v6" }]
  ];
  Icon($$anchor, spread_props({ name: "smile-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Smile_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Smile_plus);

// node_modules/lucide-svelte/dist/icons/smile.svelte
mark_module_start();
Smile[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/smile.svelte";
function Smile($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Smile);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    ["path", { "d": "M8 14s1.5 2 4 2 4-2 4-2" }],
    [
      "line",
      {
        "x1": "9",
        "x2": "9.01",
        "y1": "9",
        "y2": "9"
      }
    ],
    [
      "line",
      {
        "x1": "15",
        "x2": "15.01",
        "y1": "9",
        "y2": "9"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "smile" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Smile, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Smile);

// node_modules/lucide-svelte/dist/icons/snail.svelte
mark_module_start();
Snail[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/snail.svelte";
function Snail($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Snail);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 13a6 6 0 1 0 12 0 4 4 0 1 0-8 0 2 2 0 0 0 4 0"
      }
    ],
    [
      "circle",
      { "cx": "10", "cy": "13", "r": "8" }
    ],
    [
      "path",
      {
        "d": "M2 21h12c4.4 0 8-3.6 8-8V7a2 2 0 1 0-4 0v6"
      }
    ],
    ["path", { "d": "M18 3 19.1 5.2" }],
    ["path", { "d": "M22 3 20.9 5.2" }]
  ];
  Icon($$anchor, spread_props({ name: "snail" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Snail, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Snail);

// node_modules/lucide-svelte/dist/icons/snowflake.svelte
mark_module_start();
Snowflake[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/snowflake.svelte";
function Snowflake($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Snowflake);
  const iconNode = [
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "2",
        "y2": "22"
      }
    ],
    ["path", { "d": "m20 16-4-4 4-4" }],
    ["path", { "d": "m4 8 4 4-4 4" }],
    ["path", { "d": "m16 4-4 4-4-4" }],
    ["path", { "d": "m8 20 4-4 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "snowflake" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Snowflake, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Snowflake);

// node_modules/lucide-svelte/dist/icons/sofa.svelte
mark_module_start();
Sofa[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sofa.svelte";
function Sofa($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sofa);
  const iconNode = [
    [
      "path",
      { "d": "M20 9V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v3" }
    ],
    [
      "path",
      {
        "d": "M2 16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v1.5a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5V11a2 2 0 0 0-4 0z"
      }
    ],
    ["path", { "d": "M4 18v2" }],
    ["path", { "d": "M20 18v2" }],
    ["path", { "d": "M12 4v9" }]
  ];
  Icon($$anchor, spread_props({ name: "sofa" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sofa, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sofa);

// node_modules/lucide-svelte/dist/icons/soup.svelte
mark_module_start();
Soup[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/soup.svelte";
function Soup($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Soup);
  const iconNode = [
    [
      "path",
      { "d": "M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z" }
    ],
    ["path", { "d": "M7 21h10" }],
    ["path", { "d": "M19.5 12 22 6" }],
    [
      "path",
      {
        "d": "M16.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.73 1.62"
      }
    ],
    [
      "path",
      {
        "d": "M11.25 3c.27.1.8.53.74 1.36-.05.83-.93 1.2-.98 2.02-.06.78.33 1.24.72 1.62"
      }
    ],
    [
      "path",
      {
        "d": "M6.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.74 1.62"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "soup" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Soup, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Soup);

// node_modules/lucide-svelte/dist/icons/space.svelte
mark_module_start();
Space[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/space.svelte";
function Space($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Space);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "space" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Space, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Space);

// node_modules/lucide-svelte/dist/icons/spade.svelte
mark_module_start();
Spade[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/spade.svelte";
function Spade($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Spade);
  const iconNode = [
    [
      "path",
      {
        "d": "M5 9c-1.5 1.5-3 3.2-3 5.5A5.5 5.5 0 0 0 7.5 20c1.8 0 3-.5 4.5-2 1.5 1.5 2.7 2 4.5 2a5.5 5.5 0 0 0 5.5-5.5c0-2.3-1.5-4-3-5.5l-7-7-7 7Z"
      }
    ],
    ["path", { "d": "M12 18v4" }]
  ];
  Icon($$anchor, spread_props({ name: "spade" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Spade, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Spade);

// node_modules/lucide-svelte/dist/icons/sparkle.svelte
mark_module_start();
Sparkle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sparkle.svelte";
function Sparkle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sparkle);
  const iconNode = [
    [
      "path",
      {
        "d": "M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "sparkle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sparkle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sparkle);

// node_modules/lucide-svelte/dist/icons/sparkles.svelte
mark_module_start();
Sparkles[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sparkles.svelte";
function Sparkles($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sparkles);
  const iconNode = [
    [
      "path",
      {
        "d": "M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z"
      }
    ],
    ["path", { "d": "M20 3v4" }],
    ["path", { "d": "M22 5h-4" }],
    ["path", { "d": "M4 17v2" }],
    ["path", { "d": "M5 18H3" }]
  ];
  Icon($$anchor, spread_props({ name: "sparkles" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sparkles, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sparkles);

// node_modules/lucide-svelte/dist/icons/speaker.svelte
mark_module_start();
Speaker[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/speaker.svelte";
function Speaker($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Speaker);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "20",
        "x": "4",
        "y": "2",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 6h.01" }],
    [
      "circle",
      { "cx": "12", "cy": "14", "r": "4" }
    ],
    ["path", { "d": "M12 14h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "speaker" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Speaker, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Speaker);

// node_modules/lucide-svelte/dist/icons/speech.svelte
mark_module_start();
Speech[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/speech.svelte";
function Speech($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Speech);
  const iconNode = [
    [
      "path",
      {
        "d": "M8.8 20v-4.1l1.9.2a2.3 2.3 0 0 0 2.164-2.1V8.3A5.37 5.37 0 0 0 2 8.25c0 2.8.656 3.054 1 4.55a5.77 5.77 0 0 1 .029 2.758L2 20"
      }
    ],
    [
      "path",
      { "d": "M19.8 17.8a7.5 7.5 0 0 0 .003-10.603" }
    ],
    [
      "path",
      { "d": "M17 15a3.5 3.5 0 0 0-.025-4.975" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "speech" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Speech, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Speech);

// node_modules/lucide-svelte/dist/icons/spell-check-2.svelte
mark_module_start();
Spell_check_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/spell-check-2.svelte";
function Spell_check_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Spell_check_2);
  const iconNode = [
    ["path", { "d": "m6 16 6-12 6 12" }],
    ["path", { "d": "M8 12h8" }],
    [
      "path",
      {
        "d": "M4 21c1.1 0 1.1-1 2.3-1s1.1 1 2.3 1c1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "spell-check-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Spell_check_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Spell_check_2);

// node_modules/lucide-svelte/dist/icons/spell-check.svelte
mark_module_start();
Spell_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/spell-check.svelte";
function Spell_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Spell_check);
  const iconNode = [
    ["path", { "d": "m6 16 6-12 6 12" }],
    ["path", { "d": "M8 12h8" }],
    ["path", { "d": "m16 20 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "spell-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Spell_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Spell_check);

// node_modules/lucide-svelte/dist/icons/spline.svelte
mark_module_start();
Spline[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/spline.svelte";
function Spline($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Spline);
  const iconNode = [
    [
      "circle",
      { "cx": "19", "cy": "5", "r": "2" }
    ],
    [
      "circle",
      { "cx": "5", "cy": "19", "r": "2" }
    ],
    ["path", { "d": "M5 17A12 12 0 0 1 17 5" }]
  ];
  Icon($$anchor, spread_props({ name: "spline" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Spline, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Spline);

// node_modules/lucide-svelte/dist/icons/split.svelte
mark_module_start();
Split[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/split.svelte";
function Split($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Split);
  const iconNode = [
    ["path", { "d": "M16 3h5v5" }],
    ["path", { "d": "M8 3H3v5" }],
    [
      "path",
      { "d": "M12 22v-8.3a4 4 0 0 0-1.172-2.872L3 3" }
    ],
    ["path", { "d": "m15 9 6-6" }]
  ];
  Icon($$anchor, spread_props({ name: "split" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Split, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Split);

// node_modules/lucide-svelte/dist/icons/spray-can.svelte
mark_module_start();
Spray_can[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/spray-can.svelte";
function Spray_can($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Spray_can);
  const iconNode = [
    ["path", { "d": "M3 3h.01" }],
    ["path", { "d": "M7 5h.01" }],
    ["path", { "d": "M11 7h.01" }],
    ["path", { "d": "M3 7h.01" }],
    ["path", { "d": "M7 9h.01" }],
    ["path", { "d": "M3 11h.01" }],
    [
      "rect",
      {
        "width": "4",
        "height": "4",
        "x": "15",
        "y": "5"
      }
    ],
    [
      "path",
      {
        "d": "m19 9 2 2v10c0 .6-.4 1-1 1h-6c-.6 0-1-.4-1-1V11l2-2"
      }
    ],
    ["path", { "d": "m13 14 8-2" }],
    ["path", { "d": "m13 19 8-2" }]
  ];
  Icon($$anchor, spread_props({ name: "spray-can" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Spray_can, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Spray_can);

// node_modules/lucide-svelte/dist/icons/sprout.svelte
mark_module_start();
Sprout[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sprout.svelte";
function Sprout($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sprout);
  const iconNode = [
    ["path", { "d": "M7 20h10" }],
    [
      "path",
      { "d": "M10 20c5.5-2.5.8-6.4 3-10" }
    ],
    [
      "path",
      {
        "d": "M9.5 9.4c1.1.8 1.8 2.2 2.3 3.7-2 .4-3.5.4-4.8-.3-1.2-.6-2.3-1.9-3-4.2 2.8-.5 4.4 0 5.5.8z"
      }
    ],
    [
      "path",
      {
        "d": "M14.1 6a7 7 0 0 0-1.1 4c1.9-.1 3.3-.6 4.3-1.4 1-1 1.6-2.3 1.7-4.6-2.7.1-4 1-4.9 2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "sprout" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sprout, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sprout);

// node_modules/lucide-svelte/dist/icons/square-activity.svelte
mark_module_start();
Square_activity[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-activity.svelte";
function Square_activity($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_activity);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    [
      "path",
      { "d": "M17 12h-2l-2 5-2-10-2 5H7" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-activity" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_activity, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_activity);

// node_modules/lucide-svelte/dist/icons/square-arrow-down-left.svelte
mark_module_start();
Square_arrow_down_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-down-left.svelte";
function Square_arrow_down_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_down_left);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "m16 8-8 8" }],
    ["path", { "d": "M16 16H8V8" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-down-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_down_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_down_left);

// node_modules/lucide-svelte/dist/icons/square-arrow-down-right.svelte
mark_module_start();
Square_arrow_down_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-down-right.svelte";
function Square_arrow_down_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_down_right);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "m8 8 8 8" }],
    ["path", { "d": "M16 8v8H8" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-down-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_down_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_down_right);

// node_modules/lucide-svelte/dist/icons/square-arrow-down.svelte
mark_module_start();
Square_arrow_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-down.svelte";
function Square_arrow_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_down);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 8v8" }],
    ["path", { "d": "m8 12 4 4 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_down);

// node_modules/lucide-svelte/dist/icons/square-arrow-left.svelte
mark_module_start();
Square_arrow_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-left.svelte";
function Square_arrow_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_left);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "m12 8-4 4 4 4" }],
    ["path", { "d": "M16 12H8" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_left);

// node_modules/lucide-svelte/dist/icons/square-arrow-out-down-left.svelte
mark_module_start();
Square_arrow_out_down_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-out-down-left.svelte";
function Square_arrow_out_down_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_out_down_left);
  const iconNode = [
    [
      "path",
      {
        "d": "M13 21h6a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v6"
      }
    ],
    ["path", { "d": "m3 21 9-9" }],
    ["path", { "d": "M9 21H3v-6" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-out-down-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_out_down_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_out_down_left);

// node_modules/lucide-svelte/dist/icons/square-arrow-out-down-right.svelte
mark_module_start();
Square_arrow_out_down_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-out-down-right.svelte";
function Square_arrow_out_down_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_out_down_right);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6"
      }
    ],
    ["path", { "d": "m21 21-9-9" }],
    ["path", { "d": "M21 15v6h-6" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-out-down-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_out_down_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_out_down_right);

// node_modules/lucide-svelte/dist/icons/square-arrow-out-up-left.svelte
mark_module_start();
Square_arrow_out_up_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-out-up-left.svelte";
function Square_arrow_out_up_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_out_up_left);
  const iconNode = [
    [
      "path",
      {
        "d": "M13 3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-6"
      }
    ],
    ["path", { "d": "m3 3 9 9" }],
    ["path", { "d": "M3 9V3h6" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-out-up-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_out_up_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_out_up_left);

// node_modules/lucide-svelte/dist/icons/square-arrow-out-up-right.svelte
mark_module_start();
Square_arrow_out_up_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-out-up-right.svelte";
function Square_arrow_out_up_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_out_up_right);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h6"
      }
    ],
    ["path", { "d": "m21 3-9 9" }],
    ["path", { "d": "M15 3h6v6" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-out-up-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_out_up_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_out_up_right);

// node_modules/lucide-svelte/dist/icons/square-arrow-right.svelte
mark_module_start();
Square_arrow_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-right.svelte";
function Square_arrow_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_right);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M8 12h8" }],
    ["path", { "d": "m12 16 4-4-4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_right);

// node_modules/lucide-svelte/dist/icons/square-arrow-up-left.svelte
mark_module_start();
Square_arrow_up_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-up-left.svelte";
function Square_arrow_up_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_up_left);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M8 16V8h8" }],
    ["path", { "d": "M16 16 8 8" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-up-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_up_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_up_left);

// node_modules/lucide-svelte/dist/icons/square-arrow-up-right.svelte
mark_module_start();
Square_arrow_up_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-up-right.svelte";
function Square_arrow_up_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_up_right);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M8 8h8v8" }],
    ["path", { "d": "m8 16 8-8" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-up-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_up_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_up_right);

// node_modules/lucide-svelte/dist/icons/square-arrow-up.svelte
mark_module_start();
Square_arrow_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-arrow-up.svelte";
function Square_arrow_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_arrow_up);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "m16 12-4-4-4 4" }],
    ["path", { "d": "M12 16V8" }]
  ];
  Icon($$anchor, spread_props({ name: "square-arrow-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_arrow_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_arrow_up);

// node_modules/lucide-svelte/dist/icons/square-asterisk.svelte
mark_module_start();
Square_asterisk[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-asterisk.svelte";
function Square_asterisk($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_asterisk);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M12 8v8" }],
    ["path", { "d": "m8.5 14 7-4" }],
    ["path", { "d": "m8.5 10 7 4" }]
  ];
  Icon($$anchor, spread_props({ name: "square-asterisk" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_asterisk, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_asterisk);

// node_modules/lucide-svelte/dist/icons/square-bottom-dashed-scissors.svelte
mark_module_start();
Square_bottom_dashed_scissors[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-bottom-dashed-scissors.svelte";
function Square_bottom_dashed_scissors($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_bottom_dashed_scissors);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 22a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2"
      }
    ],
    ["path", { "d": "M10 22H8" }],
    ["path", { "d": "M16 22h-2" }],
    [
      "circle",
      { "cx": "8", "cy": "8", "r": "2" }
    ],
    ["path", { "d": "M9.414 9.414 12 12" }],
    ["path", { "d": "M14.8 14.8 18 18" }],
    [
      "circle",
      { "cx": "8", "cy": "16", "r": "2" }
    ],
    ["path", { "d": "m18 6-8.586 8.586" }]
  ];
  Icon($$anchor, spread_props({ name: "square-bottom-dashed-scissors" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_bottom_dashed_scissors, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_bottom_dashed_scissors);

// node_modules/lucide-svelte/dist/icons/square-chart-gantt.svelte
mark_module_start();
Square_chart_gantt[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-chart-gantt.svelte";
function Square_chart_gantt($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_chart_gantt);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M9 8h7" }],
    ["path", { "d": "M8 12h6" }],
    ["path", { "d": "M11 16h5" }]
  ];
  Icon($$anchor, spread_props({ name: "square-chart-gantt" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_chart_gantt, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_chart_gantt);

// node_modules/lucide-svelte/dist/icons/square-check-big.svelte
mark_module_start();
Square_check_big[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-check-big.svelte";
function Square_check_big($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_check_big);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 10.5V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h12.5"
      }
    ],
    ["path", { "d": "m9 11 3 3L22 4" }]
  ];
  Icon($$anchor, spread_props({ name: "square-check-big" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_check_big, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_check_big);

// node_modules/lucide-svelte/dist/icons/square-check.svelte
mark_module_start();
Square_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-check.svelte";
function Square_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_check);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "m9 12 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "square-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_check);

// node_modules/lucide-svelte/dist/icons/square-chevron-down.svelte
mark_module_start();
Square_chevron_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-chevron-down.svelte";
function Square_chevron_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_chevron_down);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "m16 10-4 4-4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "square-chevron-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_chevron_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_chevron_down);

// node_modules/lucide-svelte/dist/icons/square-chevron-left.svelte
mark_module_start();
Square_chevron_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-chevron-left.svelte";
function Square_chevron_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_chevron_left);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "m14 16-4-4 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "square-chevron-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_chevron_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_chevron_left);

// node_modules/lucide-svelte/dist/icons/square-chevron-right.svelte
mark_module_start();
Square_chevron_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-chevron-right.svelte";
function Square_chevron_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_chevron_right);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "m10 8 4 4-4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "square-chevron-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_chevron_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_chevron_right);

// node_modules/lucide-svelte/dist/icons/square-chevron-up.svelte
mark_module_start();
Square_chevron_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-chevron-up.svelte";
function Square_chevron_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_chevron_up);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "m8 14 4-4 4 4" }]
  ];
  Icon($$anchor, spread_props({ name: "square-chevron-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_chevron_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_chevron_up);

// node_modules/lucide-svelte/dist/icons/square-code.svelte
mark_module_start();
Square_code[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-code.svelte";
function Square_code($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_code);
  const iconNode = [
    ["path", { "d": "M10 9.5 8 12l2 2.5" }],
    ["path", { "d": "m14 9.5 2 2.5-2 2.5" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-code" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_code, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_code);

// node_modules/lucide-svelte/dist/icons/square-dashed-bottom-code.svelte
mark_module_start();
Square_dashed_bottom_code[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-dashed-bottom-code.svelte";
function Square_dashed_bottom_code($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_dashed_bottom_code);
  const iconNode = [
    ["path", { "d": "M10 9.5 8 12l2 2.5" }],
    ["path", { "d": "M14 21h1" }],
    ["path", { "d": "m14 9.5 2 2.5-2 2.5" }],
    [
      "path",
      {
        "d": "M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2"
      }
    ],
    ["path", { "d": "M9 21h1" }]
  ];
  Icon($$anchor, spread_props({ name: "square-dashed-bottom-code" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_dashed_bottom_code, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_dashed_bottom_code);

// node_modules/lucide-svelte/dist/icons/square-dashed-bottom.svelte
mark_module_start();
Square_dashed_bottom[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-dashed-bottom.svelte";
function Square_dashed_bottom($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_dashed_bottom);
  const iconNode = [
    [
      "path",
      {
        "d": "M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2"
      }
    ],
    ["path", { "d": "M9 21h1" }],
    ["path", { "d": "M14 21h1" }]
  ];
  Icon($$anchor, spread_props({ name: "square-dashed-bottom" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_dashed_bottom, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_dashed_bottom);

// node_modules/lucide-svelte/dist/icons/square-dashed-kanban.svelte
mark_module_start();
Square_dashed_kanban[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-dashed-kanban.svelte";
function Square_dashed_kanban($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_dashed_kanban);
  const iconNode = [
    ["path", { "d": "M8 7v7" }],
    ["path", { "d": "M12 7v4" }],
    ["path", { "d": "M16 7v9" }],
    ["path", { "d": "M5 3a2 2 0 0 0-2 2" }],
    ["path", { "d": "M9 3h1" }],
    ["path", { "d": "M14 3h1" }],
    ["path", { "d": "M19 3a2 2 0 0 1 2 2" }],
    ["path", { "d": "M21 9v1" }],
    ["path", { "d": "M21 14v1" }],
    ["path", { "d": "M21 19a2 2 0 0 1-2 2" }],
    ["path", { "d": "M14 21h1" }],
    ["path", { "d": "M9 21h1" }],
    ["path", { "d": "M5 21a2 2 0 0 1-2-2" }],
    ["path", { "d": "M3 14v1" }],
    ["path", { "d": "M3 9v1" }]
  ];
  Icon($$anchor, spread_props({ name: "square-dashed-kanban" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_dashed_kanban, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_dashed_kanban);

// node_modules/lucide-svelte/dist/icons/square-dashed-mouse-pointer.svelte
mark_module_start();
Square_dashed_mouse_pointer[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-dashed-mouse-pointer.svelte";
function Square_dashed_mouse_pointer($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_dashed_mouse_pointer);
  const iconNode = [
    [
      "path",
      {
        "d": "M12.034 12.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.943l-3.444 1.068a1 1 0 0 0-.66.66l-1.067 3.443a.5.5 0 0 1-.943.033z"
      }
    ],
    ["path", { "d": "M5 3a2 2 0 0 0-2 2" }],
    ["path", { "d": "M19 3a2 2 0 0 1 2 2" }],
    ["path", { "d": "M5 21a2 2 0 0 1-2-2" }],
    ["path", { "d": "M9 3h1" }],
    ["path", { "d": "M9 21h2" }],
    ["path", { "d": "M14 3h1" }],
    ["path", { "d": "M3 9v1" }],
    ["path", { "d": "M21 9v2" }],
    ["path", { "d": "M3 14v1" }]
  ];
  Icon($$anchor, spread_props({ name: "square-dashed-mouse-pointer" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_dashed_mouse_pointer, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_dashed_mouse_pointer);

// node_modules/lucide-svelte/dist/icons/square-dashed.svelte
mark_module_start();
Square_dashed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-dashed.svelte";
function Square_dashed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_dashed);
  const iconNode = [
    ["path", { "d": "M5 3a2 2 0 0 0-2 2" }],
    ["path", { "d": "M19 3a2 2 0 0 1 2 2" }],
    ["path", { "d": "M21 19a2 2 0 0 1-2 2" }],
    ["path", { "d": "M5 21a2 2 0 0 1-2-2" }],
    ["path", { "d": "M9 3h1" }],
    ["path", { "d": "M9 21h1" }],
    ["path", { "d": "M14 3h1" }],
    ["path", { "d": "M14 21h1" }],
    ["path", { "d": "M3 9v1" }],
    ["path", { "d": "M21 9v1" }],
    ["path", { "d": "M3 14v1" }],
    ["path", { "d": "M21 14v1" }]
  ];
  Icon($$anchor, spread_props({ name: "square-dashed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_dashed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_dashed);

// node_modules/lucide-svelte/dist/icons/square-divide.svelte
mark_module_start();
Square_divide[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-divide.svelte";
function Square_divide($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_divide);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "16",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "16",
        "y2": "16"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "8",
        "y2": "8"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-divide" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_divide, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_divide);

// node_modules/lucide-svelte/dist/icons/square-dot.svelte
mark_module_start();
Square_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-dot.svelte";
function Square_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_dot);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_dot);

// node_modules/lucide-svelte/dist/icons/square-equal.svelte
mark_module_start();
Square_equal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-equal.svelte";
function Square_equal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_equal);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M7 10h10" }],
    ["path", { "d": "M7 14h10" }]
  ];
  Icon($$anchor, spread_props({ name: "square-equal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_equal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_equal);

// node_modules/lucide-svelte/dist/icons/square-function.svelte
mark_module_start();
Square_function[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-function.svelte";
function Square_function($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_function);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "path",
      {
        "d": "M9 17c2 0 2.8-1 2.8-2.8V10c0-2 1-3.3 3.2-3"
      }
    ],
    ["path", { "d": "M9 11.2h5.7" }]
  ];
  Icon($$anchor, spread_props({ name: "square-function" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_function, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_function);

// node_modules/lucide-svelte/dist/icons/square-kanban.svelte
mark_module_start();
Square_kanban[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-kanban.svelte";
function Square_kanban($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_kanban);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M8 7v7" }],
    ["path", { "d": "M12 7v4" }],
    ["path", { "d": "M16 7v9" }]
  ];
  Icon($$anchor, spread_props({ name: "square-kanban" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_kanban, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_kanban);

// node_modules/lucide-svelte/dist/icons/square-library.svelte
mark_module_start();
Square_library[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-library.svelte";
function Square_library($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_library);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M7 7v10" }],
    ["path", { "d": "M11 7v10" }],
    ["path", { "d": "m15 7 2 10" }]
  ];
  Icon($$anchor, spread_props({ name: "square-library" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_library, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_library);

// node_modules/lucide-svelte/dist/icons/square-m.svelte
mark_module_start();
Square_m[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-m.svelte";
function Square_m($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_m);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M8 16V8l4 4 4-4v8" }]
  ];
  Icon($$anchor, spread_props({ name: "square-m" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_m, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_m);

// node_modules/lucide-svelte/dist/icons/square-menu.svelte
mark_module_start();
Square_menu[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-menu.svelte";
function Square_menu($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_menu);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M7 8h10" }],
    ["path", { "d": "M7 12h10" }],
    ["path", { "d": "M7 16h10" }]
  ];
  Icon($$anchor, spread_props({ name: "square-menu" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_menu, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_menu);

// node_modules/lucide-svelte/dist/icons/square-minus.svelte
mark_module_start();
Square_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-minus.svelte";
function Square_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_minus);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M8 12h8" }]
  ];
  Icon($$anchor, spread_props({ name: "square-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_minus);

// node_modules/lucide-svelte/dist/icons/square-mouse-pointer.svelte
mark_module_start();
Square_mouse_pointer[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-mouse-pointer.svelte";
function Square_mouse_pointer($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_mouse_pointer);
  const iconNode = [
    [
      "path",
      {
        "d": "M12.034 12.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.943l-3.444 1.068a1 1 0 0 0-.66.66l-1.067 3.443a.5.5 0 0 1-.943.033z"
      }
    ],
    [
      "path",
      {
        "d": "M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-mouse-pointer" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_mouse_pointer, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_mouse_pointer);

// node_modules/lucide-svelte/dist/icons/square-parking-off.svelte
mark_module_start();
Square_parking_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-parking-off.svelte";
function Square_parking_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_parking_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M3.6 3.6A2 2 0 0 1 5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-.59 1.41"
      }
    ],
    [
      "path",
      { "d": "M3 8.7V19a2 2 0 0 0 2 2h10.3" }
    ],
    ["path", { "d": "m2 2 20 20" }],
    ["path", { "d": "M13 13a3 3 0 1 0 0-6H9v2" }],
    ["path", { "d": "M9 17v-2.3" }]
  ];
  Icon($$anchor, spread_props({ name: "square-parking-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_parking_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_parking_off);

// node_modules/lucide-svelte/dist/icons/square-parking.svelte
mark_module_start();
Square_parking[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-parking.svelte";
function Square_parking($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_parking);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    [
      "path",
      { "d": "M9 17V7h4a3 3 0 0 1 0 6H9" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-parking" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_parking, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_parking);

// node_modules/lucide-svelte/dist/icons/square-pen.svelte
mark_module_start();
Square_pen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-pen.svelte";
function Square_pen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_pen);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"
      }
    ],
    [
      "path",
      {
        "d": "M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-pen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_pen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_pen);

// node_modules/lucide-svelte/dist/icons/square-percent.svelte
mark_module_start();
Square_percent[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-percent.svelte";
function Square_percent($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_percent);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "m15 9-6 6" }],
    ["path", { "d": "M9 9h.01" }],
    ["path", { "d": "M15 15h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "square-percent" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_percent, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_percent);

// node_modules/lucide-svelte/dist/icons/square-pi.svelte
mark_module_start();
Square_pi[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-pi.svelte";
function Square_pi($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_pi);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M7 7h10" }],
    ["path", { "d": "M10 7v10" }],
    ["path", { "d": "M16 17a2 2 0 0 1-2-2V7" }]
  ];
  Icon($$anchor, spread_props({ name: "square-pi" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_pi, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_pi);

// node_modules/lucide-svelte/dist/icons/square-pilcrow.svelte
mark_module_start();
Square_pilcrow[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-pilcrow.svelte";
function Square_pilcrow($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_pilcrow);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    [
      "path",
      { "d": "M12 12H9.5a2.5 2.5 0 0 1 0-5H17" }
    ],
    ["path", { "d": "M12 7v10" }],
    ["path", { "d": "M16 7v10" }]
  ];
  Icon($$anchor, spread_props({ name: "square-pilcrow" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_pilcrow, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_pilcrow);

// node_modules/lucide-svelte/dist/icons/square-play.svelte
mark_module_start();
Square_play[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-play.svelte";
function Square_play($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_play);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "m9 8 6 4-6 4Z" }]
  ];
  Icon($$anchor, spread_props({ name: "square-play" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_play, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_play);

// node_modules/lucide-svelte/dist/icons/square-plus.svelte
mark_module_start();
Square_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-plus.svelte";
function Square_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_plus);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M8 12h8" }],
    ["path", { "d": "M12 8v8" }]
  ];
  Icon($$anchor, spread_props({ name: "square-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_plus);

// node_modules/lucide-svelte/dist/icons/square-power.svelte
mark_module_start();
Square_power[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-power.svelte";
function Square_power($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_power);
  const iconNode = [
    ["path", { "d": "M12 7v4" }],
    [
      "path",
      { "d": "M7.998 9.003a5 5 0 1 0 8-.005" }
    ],
    [
      "rect",
      {
        "x": "3",
        "y": "3",
        "width": "18",
        "height": "18",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-power" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_power, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_power);

// node_modules/lucide-svelte/dist/icons/square-radical.svelte
mark_module_start();
Square_radical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-radical.svelte";
function Square_radical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_radical);
  const iconNode = [
    ["path", { "d": "M7 12h2l2 5 2-10h4" }],
    [
      "rect",
      {
        "x": "3",
        "y": "3",
        "width": "18",
        "height": "18",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-radical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_radical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_radical);

// node_modules/lucide-svelte/dist/icons/square-scissors.svelte
mark_module_start();
Square_scissors[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-scissors.svelte";
function Square_scissors($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_scissors);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "20",
        "x": "2",
        "y": "2",
        "rx": "2"
      }
    ],
    [
      "circle",
      { "cx": "8", "cy": "8", "r": "2" }
    ],
    ["path", { "d": "M9.414 9.414 12 12" }],
    ["path", { "d": "M14.8 14.8 18 18" }],
    [
      "circle",
      { "cx": "8", "cy": "16", "r": "2" }
    ],
    ["path", { "d": "m18 6-8.586 8.586" }]
  ];
  Icon($$anchor, spread_props({ name: "square-scissors" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_scissors, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_scissors);

// node_modules/lucide-svelte/dist/icons/square-sigma.svelte
mark_module_start();
Square_sigma[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-sigma.svelte";
function Square_sigma($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_sigma);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    [
      "path",
      { "d": "M16 8.9V7H8l4 5-4 5h8v-1.9" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-sigma" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_sigma, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_sigma);

// node_modules/lucide-svelte/dist/icons/square-slash.svelte
mark_module_start();
Square_slash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-slash.svelte";
function Square_slash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_slash);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    [
      "line",
      {
        "x1": "9",
        "x2": "15",
        "y1": "15",
        "y2": "9"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-slash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_slash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_slash);

// node_modules/lucide-svelte/dist/icons/square-split-horizontal.svelte
mark_module_start();
Square_split_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-split-horizontal.svelte";
function Square_split_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_split_horizontal);
  const iconNode = [
    [
      "path",
      { "d": "M8 19H5c-1 0-2-1-2-2V7c0-1 1-2 2-2h3" }
    ],
    [
      "path",
      { "d": "M16 5h3c1 0 2 1 2 2v10c0 1-1 2-2 2h-3" }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "4",
        "y2": "20"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-split-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_split_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_split_horizontal);

// node_modules/lucide-svelte/dist/icons/square-split-vertical.svelte
mark_module_start();
Square_split_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-split-vertical.svelte";
function Square_split_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_split_vertical);
  const iconNode = [
    [
      "path",
      { "d": "M5 8V5c0-1 1-2 2-2h10c1 0 2 1 2 2v3" }
    ],
    [
      "path",
      { "d": "M19 16v3c0 1-1 2-2 2H7c-1 0-2-1-2-2v-3" }
    ],
    [
      "line",
      {
        "x1": "4",
        "x2": "20",
        "y1": "12",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-split-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_split_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_split_vertical);

// node_modules/lucide-svelte/dist/icons/square-square.svelte
mark_module_start();
Square_square[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-square.svelte";
function Square_square($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_square);
  const iconNode = [
    [
      "rect",
      {
        "x": "3",
        "y": "3",
        "width": "18",
        "height": "18",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "x": "8",
        "y": "8",
        "width": "8",
        "height": "8",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-square" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_square, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_square);

// node_modules/lucide-svelte/dist/icons/square-stack.svelte
mark_module_start();
Square_stack[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-stack.svelte";
function Square_stack($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_stack);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 10c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2"
      }
    ],
    [
      "path",
      {
        "d": "M10 16c-1.1 0-2-.9-2-2v-4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2"
      }
    ],
    [
      "rect",
      {
        "width": "8",
        "height": "8",
        "x": "14",
        "y": "14",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-stack" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_stack, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_stack);

// node_modules/lucide-svelte/dist/icons/square-terminal.svelte
mark_module_start();
Square_terminal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-terminal.svelte";
function Square_terminal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_terminal);
  const iconNode = [
    ["path", { "d": "m7 11 2-2-2-2" }],
    ["path", { "d": "M11 13h4" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-terminal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_terminal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_terminal);

// node_modules/lucide-svelte/dist/icons/square-user-round.svelte
mark_module_start();
Square_user_round[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-user-round.svelte";
function Square_user_round($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_user_round);
  const iconNode = [
    ["path", { "d": "M18 21a6 6 0 0 0-12 0" }],
    [
      "circle",
      { "cx": "12", "cy": "11", "r": "4" }
    ],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-user-round" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_user_round, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_user_round);

// node_modules/lucide-svelte/dist/icons/square-user.svelte
mark_module_start();
Square_user[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-user.svelte";
function Square_user($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_user);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "3" }
    ],
    [
      "path",
      {
        "d": "M7 21v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square-user" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_user, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_user);

// node_modules/lucide-svelte/dist/icons/square-x.svelte
mark_module_start();
Square_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square-x.svelte";
function Square_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square_x);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["path", { "d": "m15 9-6 6" }],
    ["path", { "d": "m9 9 6 6" }]
  ];
  Icon($$anchor, spread_props({ name: "square-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square_x);

// node_modules/lucide-svelte/dist/icons/square.svelte
mark_module_start();
Square[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/square.svelte";
function Square($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Square);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "square" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Square, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Square);

// node_modules/lucide-svelte/dist/icons/squircle.svelte
mark_module_start();
Squircle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/squircle.svelte";
function Squircle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Squircle);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 3c7.2 0 9 1.8 9 9s-1.8 9-9 9-9-1.8-9-9 1.8-9 9-9"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "squircle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Squircle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Squircle);

// node_modules/lucide-svelte/dist/icons/squirrel.svelte
mark_module_start();
Squirrel[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/squirrel.svelte";
function Squirrel($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Squirrel);
  const iconNode = [
    [
      "path",
      { "d": "M15.236 22a3 3 0 0 0-2.2-5" }
    ],
    [
      "path",
      {
        "d": "M16 20a3 3 0 0 1 3-3h1a2 2 0 0 0 2-2v-2a4 4 0 0 0-4-4V4"
      }
    ],
    ["path", { "d": "M18 13h.01" }],
    [
      "path",
      {
        "d": "M18 6a4 4 0 0 0-4 4 7 7 0 0 0-7 7c0-5 4-5 4-10.5a4.5 4.5 0 1 0-9 0 2.5 2.5 0 0 0 5 0C7 10 3 11 3 17c0 2.8 2.2 5 5 5h10"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "squirrel" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Squirrel, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Squirrel);

// node_modules/lucide-svelte/dist/icons/stamp.svelte
mark_module_start();
Stamp[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/stamp.svelte";
function Stamp($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Stamp);
  const iconNode = [
    ["path", { "d": "M5 22h14" }],
    [
      "path",
      {
        "d": "M19.27 13.73A2.5 2.5 0 0 0 17.5 13h-11A2.5 2.5 0 0 0 4 15.5V17a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1v-1.5c0-.66-.26-1.3-.73-1.77Z"
      }
    ],
    [
      "path",
      {
        "d": "M14 13V8.5C14 7 15 7 15 5a3 3 0 0 0-3-3c-1.66 0-3 1-3 3s1 2 1 3.5V13"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "stamp" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Stamp, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Stamp);

// node_modules/lucide-svelte/dist/icons/star-half.svelte
mark_module_start();
Star_half[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/star-half.svelte";
function Star_half($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Star_half);
  const iconNode = [
    [
      "path",
      {
        "d": "M12 18.338a2.1 2.1 0 0 0-.987.244L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.12 2.12 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.12 2.12 0 0 0 1.597-1.16l2.309-4.679A.53.53 0 0 1 12 2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "star-half" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Star_half, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Star_half);

// node_modules/lucide-svelte/dist/icons/star-off.svelte
mark_module_start();
Star_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/star-off.svelte";
function Star_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Star_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M8.34 8.34 2 9.27l5 4.87L5.82 21 12 17.77 18.18 21l-.59-3.43"
      }
    ],
    [
      "path",
      {
        "d": "M18.42 12.76 22 9.27l-6.91-1L12 2l-1.44 2.91"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "star-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Star_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Star_off);

// node_modules/lucide-svelte/dist/icons/star.svelte
mark_module_start();
Star[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/star.svelte";
function Star($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Star);
  const iconNode = [
    [
      "path",
      {
        "d": "M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "star" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Star, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Star);

// node_modules/lucide-svelte/dist/icons/step-back.svelte
mark_module_start();
Step_back[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/step-back.svelte";
function Step_back($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Step_back);
  const iconNode = [
    [
      "line",
      {
        "x1": "18",
        "x2": "18",
        "y1": "20",
        "y2": "4"
      }
    ],
    ["polygon", { "points": "14,20 4,12 14,4" }]
  ];
  Icon($$anchor, spread_props({ name: "step-back" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Step_back, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Step_back);

// node_modules/lucide-svelte/dist/icons/step-forward.svelte
mark_module_start();
Step_forward[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/step-forward.svelte";
function Step_forward($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Step_forward);
  const iconNode = [
    [
      "line",
      { "x1": "6", "x2": "6", "y1": "4", "y2": "20" }
    ],
    ["polygon", { "points": "10,4 20,12 10,20" }]
  ];
  Icon($$anchor, spread_props({ name: "step-forward" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Step_forward, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Step_forward);

// node_modules/lucide-svelte/dist/icons/stethoscope.svelte
mark_module_start();
Stethoscope[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/stethoscope.svelte";
function Stethoscope($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Stethoscope);
  const iconNode = [
    ["path", { "d": "M11 2v2" }],
    ["path", { "d": "M5 2v2" }],
    [
      "path",
      {
        "d": "M5 3H4a2 2 0 0 0-2 2v4a6 6 0 0 0 12 0V5a2 2 0 0 0-2-2h-1"
      }
    ],
    ["path", { "d": "M8 15a6 6 0 0 0 12 0v-3" }],
    [
      "circle",
      { "cx": "20", "cy": "10", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "stethoscope" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Stethoscope, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Stethoscope);

// node_modules/lucide-svelte/dist/icons/sticker.svelte
mark_module_start();
Sticker[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sticker.svelte";
function Sticker($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sticker);
  const iconNode = [
    [
      "path",
      {
        "d": "M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z"
      }
    ],
    ["path", { "d": "M14 3v4a2 2 0 0 0 2 2h4" }],
    ["path", { "d": "M8 13h.01" }],
    ["path", { "d": "M16 13h.01" }],
    [
      "path",
      { "d": "M10 16s.8 1 2 1c1.3 0 2-1 2-1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "sticker" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sticker, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sticker);

// node_modules/lucide-svelte/dist/icons/sticky-note.svelte
mark_module_start();
Sticky_note[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sticky-note.svelte";
function Sticky_note($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sticky_note);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V8Z"
      }
    ],
    ["path", { "d": "M15 3v4a2 2 0 0 0 2 2h4" }]
  ];
  Icon($$anchor, spread_props({ name: "sticky-note" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sticky_note, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sticky_note);

// node_modules/lucide-svelte/dist/icons/store.svelte
mark_module_start();
Store[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/store.svelte";
function Store($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Store);
  const iconNode = [
    [
      "path",
      {
        "d": "m2 7 4.41-4.41A2 2 0 0 1 7.83 2h8.34a2 2 0 0 1 1.42.59L22 7"
      }
    ],
    [
      "path",
      {
        "d": "M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"
      }
    ],
    [
      "path",
      {
        "d": "M15 22v-4a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4"
      }
    ],
    ["path", { "d": "M2 7h20" }],
    [
      "path",
      {
        "d": "M22 7v3a2 2 0 0 1-2 2a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 16 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 12 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 8 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 4 12a2 2 0 0 1-2-2V7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "store" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Store, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Store);

// node_modules/lucide-svelte/dist/icons/stretch-horizontal.svelte
mark_module_start();
Stretch_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/stretch-horizontal.svelte";
function Stretch_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Stretch_horizontal);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "6",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "20",
        "height": "6",
        "x": "2",
        "y": "14",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "stretch-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Stretch_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Stretch_horizontal);

// node_modules/lucide-svelte/dist/icons/stretch-vertical.svelte
mark_module_start();
Stretch_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/stretch-vertical.svelte";
function Stretch_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Stretch_vertical);
  const iconNode = [
    [
      "rect",
      {
        "width": "6",
        "height": "20",
        "x": "4",
        "y": "2",
        "rx": "2"
      }
    ],
    [
      "rect",
      {
        "width": "6",
        "height": "20",
        "x": "14",
        "y": "2",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "stretch-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Stretch_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Stretch_vertical);

// node_modules/lucide-svelte/dist/icons/strikethrough.svelte
mark_module_start();
Strikethrough[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/strikethrough.svelte";
function Strikethrough($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Strikethrough);
  const iconNode = [
    ["path", { "d": "M16 4H9a3 3 0 0 0-2.83 4" }],
    ["path", { "d": "M14 12a4 4 0 0 1 0 8H6" }],
    [
      "line",
      {
        "x1": "4",
        "x2": "20",
        "y1": "12",
        "y2": "12"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "strikethrough" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Strikethrough, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Strikethrough);

// node_modules/lucide-svelte/dist/icons/subscript.svelte
mark_module_start();
Subscript[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/subscript.svelte";
function Subscript($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Subscript);
  const iconNode = [
    ["path", { "d": "m4 5 8 8" }],
    ["path", { "d": "m12 5-8 8" }],
    [
      "path",
      {
        "d": "M20 19h-4c0-1.5.44-2 1.5-2.5S20 15.33 20 14c0-.47-.17-.93-.48-1.29a2.11 2.11 0 0 0-2.62-.44c-.42.24-.74.62-.9 1.07"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "subscript" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Subscript, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Subscript);

// node_modules/lucide-svelte/dist/icons/sun-dim.svelte
mark_module_start();
Sun_dim[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sun-dim.svelte";
function Sun_dim($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sun_dim);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "4" }
    ],
    ["path", { "d": "M12 4h.01" }],
    ["path", { "d": "M20 12h.01" }],
    ["path", { "d": "M12 20h.01" }],
    ["path", { "d": "M4 12h.01" }],
    ["path", { "d": "M17.657 6.343h.01" }],
    ["path", { "d": "M17.657 17.657h.01" }],
    ["path", { "d": "M6.343 17.657h.01" }],
    ["path", { "d": "M6.343 6.343h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "sun-dim" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sun_dim, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sun_dim);

// node_modules/lucide-svelte/dist/icons/sun-medium.svelte
mark_module_start();
Sun_medium[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sun-medium.svelte";
function Sun_medium($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sun_medium);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "4" }
    ],
    ["path", { "d": "M12 3v1" }],
    ["path", { "d": "M12 20v1" }],
    ["path", { "d": "M3 12h1" }],
    ["path", { "d": "M20 12h1" }],
    ["path", { "d": "m18.364 5.636-.707.707" }],
    ["path", { "d": "m6.343 17.657-.707.707" }],
    ["path", { "d": "m5.636 5.636.707.707" }],
    ["path", { "d": "m17.657 17.657.707.707" }]
  ];
  Icon($$anchor, spread_props({ name: "sun-medium" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sun_medium, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sun_medium);

// node_modules/lucide-svelte/dist/icons/sun-moon.svelte
mark_module_start();
Sun_moon[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sun-moon.svelte";
function Sun_moon($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sun_moon);
  const iconNode = [
    [
      "path",
      { "d": "M12 8a2.83 2.83 0 0 0 4 4 4 4 0 1 1-4-4" }
    ],
    ["path", { "d": "M12 2v2" }],
    ["path", { "d": "M12 20v2" }],
    ["path", { "d": "m4.9 4.9 1.4 1.4" }],
    ["path", { "d": "m17.7 17.7 1.4 1.4" }],
    ["path", { "d": "M2 12h2" }],
    ["path", { "d": "M20 12h2" }],
    ["path", { "d": "m6.3 17.7-1.4 1.4" }],
    ["path", { "d": "m19.1 4.9-1.4 1.4" }]
  ];
  Icon($$anchor, spread_props({ name: "sun-moon" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sun_moon, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sun_moon);

// node_modules/lucide-svelte/dist/icons/sun-snow.svelte
mark_module_start();
Sun_snow[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sun-snow.svelte";
function Sun_snow($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sun_snow);
  const iconNode = [
    ["path", { "d": "M10 9a3 3 0 1 0 0 6" }],
    ["path", { "d": "M2 12h1" }],
    ["path", { "d": "M14 21V3" }],
    ["path", { "d": "M10 4V3" }],
    ["path", { "d": "M10 21v-1" }],
    ["path", { "d": "m3.64 18.36.7-.7" }],
    ["path", { "d": "m4.34 6.34-.7-.7" }],
    ["path", { "d": "M14 12h8" }],
    ["path", { "d": "m17 4-3 3" }],
    ["path", { "d": "m14 17 3 3" }],
    ["path", { "d": "m21 15-3-3 3-3" }]
  ];
  Icon($$anchor, spread_props({ name: "sun-snow" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sun_snow, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sun_snow);

// node_modules/lucide-svelte/dist/icons/sun.svelte
mark_module_start();
Sun[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sun.svelte";
function Sun($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sun);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "4" }
    ],
    ["path", { "d": "M12 2v2" }],
    ["path", { "d": "M12 20v2" }],
    ["path", { "d": "m4.93 4.93 1.41 1.41" }],
    ["path", { "d": "m17.66 17.66 1.41 1.41" }],
    ["path", { "d": "M2 12h2" }],
    ["path", { "d": "M20 12h2" }],
    ["path", { "d": "m6.34 17.66-1.41 1.41" }],
    ["path", { "d": "m19.07 4.93-1.41 1.41" }]
  ];
  Icon($$anchor, spread_props({ name: "sun" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sun, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sun);

// node_modules/lucide-svelte/dist/icons/sunrise.svelte
mark_module_start();
Sunrise[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sunrise.svelte";
function Sunrise($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sunrise);
  const iconNode = [
    ["path", { "d": "M12 2v8" }],
    ["path", { "d": "m4.93 10.93 1.41 1.41" }],
    ["path", { "d": "M2 18h2" }],
    ["path", { "d": "M20 18h2" }],
    ["path", { "d": "m19.07 10.93-1.41 1.41" }],
    ["path", { "d": "M22 22H2" }],
    ["path", { "d": "m8 6 4-4 4 4" }],
    ["path", { "d": "M16 18a4 4 0 0 0-8 0" }]
  ];
  Icon($$anchor, spread_props({ name: "sunrise" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sunrise, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sunrise);

// node_modules/lucide-svelte/dist/icons/sunset.svelte
mark_module_start();
Sunset[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sunset.svelte";
function Sunset($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sunset);
  const iconNode = [
    ["path", { "d": "M12 10V2" }],
    ["path", { "d": "m4.93 10.93 1.41 1.41" }],
    ["path", { "d": "M2 18h2" }],
    ["path", { "d": "M20 18h2" }],
    ["path", { "d": "m19.07 10.93-1.41 1.41" }],
    ["path", { "d": "M22 22H2" }],
    ["path", { "d": "m16 6-4 4-4-4" }],
    ["path", { "d": "M16 18a4 4 0 0 0-8 0" }]
  ];
  Icon($$anchor, spread_props({ name: "sunset" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sunset, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sunset);

// node_modules/lucide-svelte/dist/icons/superscript.svelte
mark_module_start();
Superscript[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/superscript.svelte";
function Superscript($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Superscript);
  const iconNode = [
    ["path", { "d": "m4 19 8-8" }],
    ["path", { "d": "m12 19-8-8" }],
    [
      "path",
      {
        "d": "M20 12h-4c0-1.5.442-2 1.5-2.5S20 8.334 20 7.002c0-.472-.17-.93-.484-1.29a2.105 2.105 0 0 0-2.617-.436c-.42.239-.738.614-.899 1.06"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "superscript" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Superscript, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Superscript);

// node_modules/lucide-svelte/dist/icons/swatch-book.svelte
mark_module_start();
Swatch_book[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/swatch-book.svelte";
function Swatch_book($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Swatch_book);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 17a4 4 0 0 1-8 0V5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2Z"
      }
    ],
    [
      "path",
      {
        "d": "M16.7 13H19a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H7"
      }
    ],
    ["path", { "d": "M 7 17h.01" }],
    [
      "path",
      {
        "d": "m11 8 2.3-2.3a2.4 2.4 0 0 1 3.404.004L18.6 7.6a2.4 2.4 0 0 1 .026 3.434L9.9 19.8"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "swatch-book" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Swatch_book, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Swatch_book);

// node_modules/lucide-svelte/dist/icons/swiss-franc.svelte
mark_module_start();
Swiss_franc[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/swiss-franc.svelte";
function Swiss_franc($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Swiss_franc);
  const iconNode = [
    ["path", { "d": "M10 21V3h8" }],
    ["path", { "d": "M6 16h9" }],
    ["path", { "d": "M10 9.5h7" }]
  ];
  Icon($$anchor, spread_props({ name: "swiss-franc" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Swiss_franc, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Swiss_franc);

// node_modules/lucide-svelte/dist/icons/switch-camera.svelte
mark_module_start();
Switch_camera[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/switch-camera.svelte";
function Switch_camera($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Switch_camera);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 19H4a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h5"
      }
    ],
    [
      "path",
      {
        "d": "M13 5h7a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-5"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "3" }
    ],
    ["path", { "d": "m18 22-3-3 3-3" }],
    ["path", { "d": "m6 2 3 3-3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "switch-camera" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Switch_camera, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Switch_camera);

// node_modules/lucide-svelte/dist/icons/sword.svelte
mark_module_start();
Sword[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/sword.svelte";
function Sword($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Sword);
  const iconNode = [
    [
      "polyline",
      { "points": "14.5 17.5 3 6 3 3 6 3 17.5 14.5" }
    ],
    [
      "line",
      {
        "x1": "13",
        "x2": "19",
        "y1": "19",
        "y2": "13"
      }
    ],
    [
      "line",
      {
        "x1": "16",
        "x2": "20",
        "y1": "16",
        "y2": "20"
      }
    ],
    [
      "line",
      {
        "x1": "19",
        "x2": "21",
        "y1": "21",
        "y2": "19"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "sword" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Sword, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Sword);

// node_modules/lucide-svelte/dist/icons/swords.svelte
mark_module_start();
Swords[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/swords.svelte";
function Swords($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Swords);
  const iconNode = [
    [
      "polyline",
      { "points": "14.5 17.5 3 6 3 3 6 3 17.5 14.5" }
    ],
    [
      "line",
      {
        "x1": "13",
        "x2": "19",
        "y1": "19",
        "y2": "13"
      }
    ],
    [
      "line",
      {
        "x1": "16",
        "x2": "20",
        "y1": "16",
        "y2": "20"
      }
    ],
    [
      "line",
      {
        "x1": "19",
        "x2": "21",
        "y1": "21",
        "y2": "19"
      }
    ],
    [
      "polyline",
      { "points": "14.5 6.5 18 3 21 3 21 6 17.5 9.5" }
    ],
    [
      "line",
      {
        "x1": "5",
        "x2": "9",
        "y1": "14",
        "y2": "18"
      }
    ],
    [
      "line",
      {
        "x1": "7",
        "x2": "4",
        "y1": "17",
        "y2": "20"
      }
    ],
    [
      "line",
      {
        "x1": "3",
        "x2": "5",
        "y1": "19",
        "y2": "21"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "swords" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Swords, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Swords);

// node_modules/lucide-svelte/dist/icons/syringe.svelte
mark_module_start();
Syringe[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/syringe.svelte";
function Syringe($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Syringe);
  const iconNode = [
    ["path", { "d": "m18 2 4 4" }],
    ["path", { "d": "m17 7 3-3" }],
    [
      "path",
      {
        "d": "M19 9 8.7 19.3c-1 1-2.5 1-3.4 0l-.6-.6c-1-1-1-2.5 0-3.4L15 5"
      }
    ],
    ["path", { "d": "m9 11 4 4" }],
    ["path", { "d": "m5 19-3 3" }],
    ["path", { "d": "m14 4 6 6" }]
  ];
  Icon($$anchor, spread_props({ name: "syringe" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Syringe, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Syringe);

// node_modules/lucide-svelte/dist/icons/table-2.svelte
mark_module_start();
Table_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/table-2.svelte";
function Table_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Table_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "table-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Table_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Table_2);

// node_modules/lucide-svelte/dist/icons/table-cells-merge.svelte
mark_module_start();
Table_cells_merge[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/table-cells-merge.svelte";
function Table_cells_merge($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Table_cells_merge);
  const iconNode = [
    ["path", { "d": "M12 21v-6" }],
    ["path", { "d": "M12 9V3" }],
    ["path", { "d": "M3 15h18" }],
    ["path", { "d": "M3 9h18" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "table-cells-merge" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Table_cells_merge, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Table_cells_merge);

// node_modules/lucide-svelte/dist/icons/table-cells-split.svelte
mark_module_start();
Table_cells_split[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/table-cells-split.svelte";
function Table_cells_split($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Table_cells_split);
  const iconNode = [
    ["path", { "d": "M12 15V9" }],
    ["path", { "d": "M3 15h18" }],
    ["path", { "d": "M3 9h18" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "table-cells-split" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Table_cells_split, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Table_cells_split);

// node_modules/lucide-svelte/dist/icons/table-columns-split.svelte
mark_module_start();
Table_columns_split[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/table-columns-split.svelte";
function Table_columns_split($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Table_columns_split);
  const iconNode = [
    ["path", { "d": "M14 14v2" }],
    ["path", { "d": "M14 20v2" }],
    ["path", { "d": "M14 2v2" }],
    ["path", { "d": "M14 8v2" }],
    ["path", { "d": "M2 15h8" }],
    [
      "path",
      { "d": "M2 3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2" }
    ],
    ["path", { "d": "M2 9h8" }],
    ["path", { "d": "M22 15h-4" }],
    [
      "path",
      {
        "d": "M22 3h-2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h2"
      }
    ],
    ["path", { "d": "M22 9h-4" }],
    ["path", { "d": "M5 3v18" }]
  ];
  Icon($$anchor, spread_props({ name: "table-columns-split" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Table_columns_split, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Table_columns_split);

// node_modules/lucide-svelte/dist/icons/table-of-contents.svelte
mark_module_start();
Table_of_contents[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/table-of-contents.svelte";
function Table_of_contents($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Table_of_contents);
  const iconNode = [
    ["path", { "d": "M16 12H3" }],
    ["path", { "d": "M16 18H3" }],
    ["path", { "d": "M16 6H3" }],
    ["path", { "d": "M21 12h.01" }],
    ["path", { "d": "M21 18h.01" }],
    ["path", { "d": "M21 6h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "table-of-contents" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Table_of_contents, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Table_of_contents);

// node_modules/lucide-svelte/dist/icons/table-properties.svelte
mark_module_start();
Table_properties[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/table-properties.svelte";
function Table_properties($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Table_properties);
  const iconNode = [
    ["path", { "d": "M15 3v18" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M21 9H3" }],
    ["path", { "d": "M21 15H3" }]
  ];
  Icon($$anchor, spread_props({ name: "table-properties" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Table_properties, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Table_properties);

// node_modules/lucide-svelte/dist/icons/table-rows-split.svelte
mark_module_start();
Table_rows_split[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/table-rows-split.svelte";
function Table_rows_split($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Table_rows_split);
  const iconNode = [
    ["path", { "d": "M14 10h2" }],
    ["path", { "d": "M15 22v-8" }],
    ["path", { "d": "M15 2v4" }],
    ["path", { "d": "M2 10h2" }],
    ["path", { "d": "M20 10h2" }],
    ["path", { "d": "M3 19h18" }],
    [
      "path",
      {
        "d": "M3 22v-6a2 2 135 0 1 2-2h14a2 2 45 0 1 2 2v6"
      }
    ],
    [
      "path",
      {
        "d": "M3 2v2a2 2 45 0 0 2 2h14a2 2 135 0 0 2-2V2"
      }
    ],
    ["path", { "d": "M8 10h2" }],
    ["path", { "d": "M9 22v-8" }],
    ["path", { "d": "M9 2v4" }]
  ];
  Icon($$anchor, spread_props({ name: "table-rows-split" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Table_rows_split, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Table_rows_split);

// node_modules/lucide-svelte/dist/icons/table.svelte
mark_module_start();
Table[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/table.svelte";
function Table($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Table);
  const iconNode = [
    ["path", { "d": "M12 3v18" }],
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M3 9h18" }],
    ["path", { "d": "M3 15h18" }]
  ];
  Icon($$anchor, spread_props({ name: "table" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Table, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Table);

// node_modules/lucide-svelte/dist/icons/tablet-smartphone.svelte
mark_module_start();
Tablet_smartphone[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tablet-smartphone.svelte";
function Tablet_smartphone($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tablet_smartphone);
  const iconNode = [
    [
      "rect",
      {
        "width": "10",
        "height": "14",
        "x": "3",
        "y": "8",
        "rx": "2"
      }
    ],
    [
      "path",
      {
        "d": "M5 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-2.4"
      }
    ],
    ["path", { "d": "M8 18h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "tablet-smartphone" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tablet_smartphone, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tablet_smartphone);

// node_modules/lucide-svelte/dist/icons/tablet.svelte
mark_module_start();
Tablet[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tablet.svelte";
function Tablet($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tablet);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "20",
        "x": "4",
        "y": "2",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12.01",
        "y1": "18",
        "y2": "18"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "tablet" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tablet, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tablet);

// node_modules/lucide-svelte/dist/icons/tablets.svelte
mark_module_start();
Tablets[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tablets.svelte";
function Tablets($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tablets);
  const iconNode = [
    [
      "circle",
      { "cx": "7", "cy": "7", "r": "5" }
    ],
    [
      "circle",
      { "cx": "17", "cy": "17", "r": "5" }
    ],
    ["path", { "d": "M12 17h10" }],
    ["path", { "d": "m3.46 10.54 7.08-7.08" }]
  ];
  Icon($$anchor, spread_props({ name: "tablets" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tablets, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tablets);

// node_modules/lucide-svelte/dist/icons/tag.svelte
mark_module_start();
Tag[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tag.svelte";
function Tag($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tag);
  const iconNode = [
    [
      "path",
      {
        "d": "M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z"
      }
    ],
    [
      "circle",
      {
        "cx": "7.5",
        "cy": "7.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "tag" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tag, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tag);

// node_modules/lucide-svelte/dist/icons/tags.svelte
mark_module_start();
Tags[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tags.svelte";
function Tags($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tags);
  const iconNode = [
    [
      "path",
      { "d": "m15 5 6.3 6.3a2.4 2.4 0 0 1 0 3.4L17 19" }
    ],
    [
      "path",
      {
        "d": "M9.586 5.586A2 2 0 0 0 8.172 5H3a1 1 0 0 0-1 1v5.172a2 2 0 0 0 .586 1.414L8.29 18.29a2.426 2.426 0 0 0 3.42 0l3.58-3.58a2.426 2.426 0 0 0 0-3.42z"
      }
    ],
    [
      "circle",
      {
        "cx": "6.5",
        "cy": "9.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "tags" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tags, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tags);

// node_modules/lucide-svelte/dist/icons/tally-1.svelte
mark_module_start();
Tally_1[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tally-1.svelte";
function Tally_1($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tally_1);
  const iconNode = [["path", { "d": "M4 4v16" }]];
  Icon($$anchor, spread_props({ name: "tally-1" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tally_1, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tally_1);

// node_modules/lucide-svelte/dist/icons/tally-2.svelte
mark_module_start();
Tally_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tally-2.svelte";
function Tally_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tally_2);
  const iconNode = [
    ["path", { "d": "M4 4v16" }],
    ["path", { "d": "M9 4v16" }]
  ];
  Icon($$anchor, spread_props({ name: "tally-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tally_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tally_2);

// node_modules/lucide-svelte/dist/icons/tally-3.svelte
mark_module_start();
Tally_3[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tally-3.svelte";
function Tally_3($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tally_3);
  const iconNode = [
    ["path", { "d": "M4 4v16" }],
    ["path", { "d": "M9 4v16" }],
    ["path", { "d": "M14 4v16" }]
  ];
  Icon($$anchor, spread_props({ name: "tally-3" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tally_3, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tally_3);

// node_modules/lucide-svelte/dist/icons/tally-4.svelte
mark_module_start();
Tally_4[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tally-4.svelte";
function Tally_4($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tally_4);
  const iconNode = [
    ["path", { "d": "M4 4v16" }],
    ["path", { "d": "M9 4v16" }],
    ["path", { "d": "M14 4v16" }],
    ["path", { "d": "M19 4v16" }]
  ];
  Icon($$anchor, spread_props({ name: "tally-4" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tally_4, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tally_4);

// node_modules/lucide-svelte/dist/icons/tally-5.svelte
mark_module_start();
Tally_5[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tally-5.svelte";
function Tally_5($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tally_5);
  const iconNode = [
    ["path", { "d": "M4 4v16" }],
    ["path", { "d": "M9 4v16" }],
    ["path", { "d": "M14 4v16" }],
    ["path", { "d": "M19 4v16" }],
    ["path", { "d": "M22 6 2 18" }]
  ];
  Icon($$anchor, spread_props({ name: "tally-5" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tally_5, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tally_5);

// node_modules/lucide-svelte/dist/icons/tangent.svelte
mark_module_start();
Tangent[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tangent.svelte";
function Tangent($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tangent);
  const iconNode = [
    [
      "circle",
      { "cx": "17", "cy": "4", "r": "2" }
    ],
    ["path", { "d": "M15.59 5.41 5.41 15.59" }],
    [
      "circle",
      { "cx": "4", "cy": "17", "r": "2" }
    ],
    [
      "path",
      { "d": "M12 22s-4-9-1.5-11.5S22 12 22 12" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "tangent" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tangent, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tangent);

// node_modules/lucide-svelte/dist/icons/target.svelte
mark_module_start();
Target[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/target.svelte";
function Target($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Target);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "6" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "target" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Target, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Target);

// node_modules/lucide-svelte/dist/icons/telescope.svelte
mark_module_start();
Telescope[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/telescope.svelte";
function Telescope($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Telescope);
  const iconNode = [
    [
      "path",
      {
        "d": "m10.065 12.493-6.18 1.318a.934.934 0 0 1-1.108-.702l-.537-2.15a1.07 1.07 0 0 1 .691-1.265l13.504-4.44"
      }
    ],
    ["path", { "d": "m13.56 11.747 4.332-.924" }],
    ["path", { "d": "m16 21-3.105-6.21" }],
    [
      "path",
      {
        "d": "M16.485 5.94a2 2 0 0 1 1.455-2.425l1.09-.272a1 1 0 0 1 1.212.727l1.515 6.06a1 1 0 0 1-.727 1.213l-1.09.272a2 2 0 0 1-2.425-1.455z"
      }
    ],
    ["path", { "d": "m6.158 8.633 1.114 4.456" }],
    ["path", { "d": "m8 21 3.105-6.21" }],
    [
      "circle",
      { "cx": "12", "cy": "13", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "telescope" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Telescope, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Telescope);

// node_modules/lucide-svelte/dist/icons/tent-tree.svelte
mark_module_start();
Tent_tree[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tent-tree.svelte";
function Tent_tree($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tent_tree);
  const iconNode = [
    [
      "circle",
      { "cx": "4", "cy": "4", "r": "2" }
    ],
    ["path", { "d": "m14 5 3-3 3 3" }],
    ["path", { "d": "m14 10 3-3 3 3" }],
    ["path", { "d": "M17 14V2" }],
    ["path", { "d": "M17 14H7l-5 8h20Z" }],
    ["path", { "d": "M8 14v8" }],
    ["path", { "d": "m9 14 5 8" }]
  ];
  Icon($$anchor, spread_props({ name: "tent-tree" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tent_tree, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tent_tree);

// node_modules/lucide-svelte/dist/icons/tent.svelte
mark_module_start();
Tent[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tent.svelte";
function Tent($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tent);
  const iconNode = [
    ["path", { "d": "M3.5 21 14 3" }],
    ["path", { "d": "M20.5 21 10 3" }],
    ["path", { "d": "M15.5 21 12 15l-3.5 6" }],
    ["path", { "d": "M2 21h20" }]
  ];
  Icon($$anchor, spread_props({ name: "tent" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tent, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tent);

// node_modules/lucide-svelte/dist/icons/terminal.svelte
mark_module_start();
Terminal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/terminal.svelte";
function Terminal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Terminal);
  const iconNode = [
    ["polyline", { "points": "4 17 10 11 4 5" }],
    [
      "line",
      {
        "x1": "12",
        "x2": "20",
        "y1": "19",
        "y2": "19"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "terminal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Terminal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Terminal);

// node_modules/lucide-svelte/dist/icons/test-tube-diagonal.svelte
mark_module_start();
Test_tube_diagonal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/test-tube-diagonal.svelte";
function Test_tube_diagonal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Test_tube_diagonal);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 7 6.82 21.18a2.83 2.83 0 0 1-3.99-.01a2.83 2.83 0 0 1 0-4L17 3"
      }
    ],
    ["path", { "d": "m16 2 6 6" }],
    ["path", { "d": "M12 16H4" }]
  ];
  Icon($$anchor, spread_props({ name: "test-tube-diagonal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Test_tube_diagonal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Test_tube_diagonal);

// node_modules/lucide-svelte/dist/icons/test-tube.svelte
mark_module_start();
Test_tube[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/test-tube.svelte";
function Test_tube($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Test_tube);
  const iconNode = [
    [
      "path",
      {
        "d": "M14.5 2v17.5c0 1.4-1.1 2.5-2.5 2.5c-1.4 0-2.5-1.1-2.5-2.5V2"
      }
    ],
    ["path", { "d": "M8.5 2h7" }],
    ["path", { "d": "M14.5 16h-5" }]
  ];
  Icon($$anchor, spread_props({ name: "test-tube" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Test_tube, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Test_tube);

// node_modules/lucide-svelte/dist/icons/test-tubes.svelte
mark_module_start();
Test_tubes[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/test-tubes.svelte";
function Test_tubes($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Test_tubes);
  const iconNode = [
    [
      "path",
      {
        "d": "M9 2v17.5A2.5 2.5 0 0 1 6.5 22A2.5 2.5 0 0 1 4 19.5V2"
      }
    ],
    [
      "path",
      {
        "d": "M20 2v17.5a2.5 2.5 0 0 1-2.5 2.5a2.5 2.5 0 0 1-2.5-2.5V2"
      }
    ],
    ["path", { "d": "M3 2h7" }],
    ["path", { "d": "M14 2h7" }],
    ["path", { "d": "M9 16H4" }],
    ["path", { "d": "M20 16h-5" }]
  ];
  Icon($$anchor, spread_props({ name: "test-tubes" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Test_tubes, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Test_tubes);

// node_modules/lucide-svelte/dist/icons/text-cursor-input.svelte
mark_module_start();
Text_cursor_input[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/text-cursor-input.svelte";
function Text_cursor_input($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Text_cursor_input);
  const iconNode = [
    [
      "path",
      { "d": "M5 4h1a3 3 0 0 1 3 3 3 3 0 0 1 3-3h1" }
    ],
    [
      "path",
      { "d": "M13 20h-1a3 3 0 0 1-3-3 3 3 0 0 1-3 3H5" }
    ],
    [
      "path",
      {
        "d": "M5 16H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h1"
      }
    ],
    [
      "path",
      {
        "d": "M13 8h7a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-7"
      }
    ],
    ["path", { "d": "M9 7v10" }]
  ];
  Icon($$anchor, spread_props({ name: "text-cursor-input" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Text_cursor_input, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Text_cursor_input);

// node_modules/lucide-svelte/dist/icons/text-cursor.svelte
mark_module_start();
Text_cursor[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/text-cursor.svelte";
function Text_cursor($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Text_cursor);
  const iconNode = [
    [
      "path",
      {
        "d": "M17 22h-1a4 4 0 0 1-4-4V6a4 4 0 0 1 4-4h1"
      }
    ],
    ["path", { "d": "M7 22h1a4 4 0 0 0 4-4v-1" }],
    ["path", { "d": "M7 2h1a4 4 0 0 1 4 4v1" }]
  ];
  Icon($$anchor, spread_props({ name: "text-cursor" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Text_cursor, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Text_cursor);

// node_modules/lucide-svelte/dist/icons/text-quote.svelte
mark_module_start();
Text_quote[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/text-quote.svelte";
function Text_quote($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Text_quote);
  const iconNode = [
    ["path", { "d": "M17 6H3" }],
    ["path", { "d": "M21 12H8" }],
    ["path", { "d": "M21 18H8" }],
    ["path", { "d": "M3 12v6" }]
  ];
  Icon($$anchor, spread_props({ name: "text-quote" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Text_quote, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Text_quote);

// node_modules/lucide-svelte/dist/icons/text-search.svelte
mark_module_start();
Text_search[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/text-search.svelte";
function Text_search($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Text_search);
  const iconNode = [
    ["path", { "d": "M21 6H3" }],
    ["path", { "d": "M10 12H3" }],
    ["path", { "d": "M10 18H3" }],
    [
      "circle",
      { "cx": "17", "cy": "15", "r": "3" }
    ],
    ["path", { "d": "m21 19-1.9-1.9" }]
  ];
  Icon($$anchor, spread_props({ name: "text-search" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Text_search, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Text_search);

// node_modules/lucide-svelte/dist/icons/text-select.svelte
mark_module_start();
Text_select[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/text-select.svelte";
function Text_select($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Text_select);
  const iconNode = [
    ["path", { "d": "M5 3a2 2 0 0 0-2 2" }],
    ["path", { "d": "M19 3a2 2 0 0 1 2 2" }],
    ["path", { "d": "M21 19a2 2 0 0 1-2 2" }],
    ["path", { "d": "M5 21a2 2 0 0 1-2-2" }],
    ["path", { "d": "M9 3h1" }],
    ["path", { "d": "M9 21h1" }],
    ["path", { "d": "M14 3h1" }],
    ["path", { "d": "M14 21h1" }],
    ["path", { "d": "M3 9v1" }],
    ["path", { "d": "M21 9v1" }],
    ["path", { "d": "M3 14v1" }],
    ["path", { "d": "M21 14v1" }],
    [
      "line",
      { "x1": "7", "x2": "15", "y1": "8", "y2": "8" }
    ],
    [
      "line",
      {
        "x1": "7",
        "x2": "17",
        "y1": "12",
        "y2": "12"
      }
    ],
    [
      "line",
      {
        "x1": "7",
        "x2": "13",
        "y1": "16",
        "y2": "16"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "text-select" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Text_select, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Text_select);

// node_modules/lucide-svelte/dist/icons/text.svelte
mark_module_start();
Text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/text.svelte";
function Text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Text);
  const iconNode = [
    ["path", { "d": "M17 6.1H3" }],
    ["path", { "d": "M21 12.1H3" }],
    ["path", { "d": "M15.1 18H3" }]
  ];
  Icon($$anchor, spread_props({ name: "text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Text);

// node_modules/lucide-svelte/dist/icons/theater.svelte
mark_module_start();
Theater[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/theater.svelte";
function Theater($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Theater);
  const iconNode = [
    ["path", { "d": "M2 10s3-3 3-8" }],
    ["path", { "d": "M22 10s-3-3-3-8" }],
    ["path", { "d": "M10 2c0 4.4-3.6 8-8 8" }],
    ["path", { "d": "M14 2c0 4.4 3.6 8 8 8" }],
    ["path", { "d": "M2 10s2 2 2 5" }],
    ["path", { "d": "M22 10s-2 2-2 5" }],
    ["path", { "d": "M8 15h8" }],
    [
      "path",
      {
        "d": "M2 22v-1a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1"
      }
    ],
    [
      "path",
      {
        "d": "M14 22v-1a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "theater" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Theater, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Theater);

// node_modules/lucide-svelte/dist/icons/thermometer-snowflake.svelte
mark_module_start();
Thermometer_snowflake[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/thermometer-snowflake.svelte";
function Thermometer_snowflake($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Thermometer_snowflake);
  const iconNode = [
    ["path", { "d": "M2 12h10" }],
    ["path", { "d": "M9 4v16" }],
    ["path", { "d": "m3 9 3 3-3 3" }],
    ["path", { "d": "M12 6 9 9 6 6" }],
    ["path", { "d": "m6 18 3-3 1.5 1.5" }],
    [
      "path",
      {
        "d": "M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "thermometer-snowflake" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Thermometer_snowflake, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Thermometer_snowflake);

// node_modules/lucide-svelte/dist/icons/thermometer-sun.svelte
mark_module_start();
Thermometer_sun[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/thermometer-sun.svelte";
function Thermometer_sun($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Thermometer_sun);
  const iconNode = [
    ["path", { "d": "M12 9a4 4 0 0 0-2 7.5" }],
    ["path", { "d": "M12 3v2" }],
    ["path", { "d": "m6.6 18.4-1.4 1.4" }],
    [
      "path",
      {
        "d": "M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z"
      }
    ],
    ["path", { "d": "M4 13H2" }],
    ["path", { "d": "M6.34 7.34 4.93 5.93" }]
  ];
  Icon($$anchor, spread_props({ name: "thermometer-sun" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Thermometer_sun, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Thermometer_sun);

// node_modules/lucide-svelte/dist/icons/thermometer.svelte
mark_module_start();
Thermometer[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/thermometer.svelte";
function Thermometer($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Thermometer);
  const iconNode = [
    [
      "path",
      {
        "d": "M14 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "thermometer" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Thermometer, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Thermometer);

// node_modules/lucide-svelte/dist/icons/thumbs-down.svelte
mark_module_start();
Thumbs_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/thumbs-down.svelte";
function Thumbs_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Thumbs_down);
  const iconNode = [
    ["path", { "d": "M17 14V2" }],
    [
      "path",
      {
        "d": "M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22a3.13 3.13 0 0 1-3-3.88Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "thumbs-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Thumbs_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Thumbs_down);

// node_modules/lucide-svelte/dist/icons/thumbs-up.svelte
mark_module_start();
Thumbs_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/thumbs-up.svelte";
function Thumbs_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Thumbs_up);
  const iconNode = [
    ["path", { "d": "M7 10v12" }],
    [
      "path",
      {
        "d": "M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "thumbs-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Thumbs_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Thumbs_up);

// node_modules/lucide-svelte/dist/icons/ticket-check.svelte
mark_module_start();
Ticket_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ticket-check.svelte";
function Ticket_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ticket_check);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
      }
    ],
    ["path", { "d": "m9 12 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "ticket-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ticket_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ticket_check);

// node_modules/lucide-svelte/dist/icons/ticket-minus.svelte
mark_module_start();
Ticket_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ticket-minus.svelte";
function Ticket_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ticket_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
      }
    ],
    ["path", { "d": "M9 12h6" }]
  ];
  Icon($$anchor, spread_props({ name: "ticket-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ticket_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ticket_minus);

// node_modules/lucide-svelte/dist/icons/ticket-percent.svelte
mark_module_start();
Ticket_percent[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ticket-percent.svelte";
function Ticket_percent($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ticket_percent);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 9a3 3 0 1 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 1 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
      }
    ],
    ["path", { "d": "M9 9h.01" }],
    ["path", { "d": "m15 9-6 6" }],
    ["path", { "d": "M15 15h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "ticket-percent" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ticket_percent, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ticket_percent);

// node_modules/lucide-svelte/dist/icons/ticket-plus.svelte
mark_module_start();
Ticket_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ticket-plus.svelte";
function Ticket_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ticket_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
      }
    ],
    ["path", { "d": "M9 12h6" }],
    ["path", { "d": "M12 9v6" }]
  ];
  Icon($$anchor, spread_props({ name: "ticket-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ticket_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ticket_plus);

// node_modules/lucide-svelte/dist/icons/ticket-slash.svelte
mark_module_start();
Ticket_slash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ticket-slash.svelte";
function Ticket_slash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ticket_slash);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
      }
    ],
    ["path", { "d": "m9.5 14.5 5-5" }]
  ];
  Icon($$anchor, spread_props({ name: "ticket-slash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ticket_slash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ticket_slash);

// node_modules/lucide-svelte/dist/icons/ticket-x.svelte
mark_module_start();
Ticket_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ticket-x.svelte";
function Ticket_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ticket_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
      }
    ],
    ["path", { "d": "m9.5 14.5 5-5" }],
    ["path", { "d": "m9.5 9.5 5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "ticket-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ticket_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ticket_x);

// node_modules/lucide-svelte/dist/icons/ticket.svelte
mark_module_start();
Ticket[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ticket.svelte";
function Ticket($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ticket);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
      }
    ],
    ["path", { "d": "M13 5v2" }],
    ["path", { "d": "M13 17v2" }],
    ["path", { "d": "M13 11v2" }]
  ];
  Icon($$anchor, spread_props({ name: "ticket" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ticket, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ticket);

// node_modules/lucide-svelte/dist/icons/tickets-plane.svelte
mark_module_start();
Tickets_plane[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tickets-plane.svelte";
function Tickets_plane($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tickets_plane);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.5 17h1.227a2 2 0 0 0 1.345-.52L18 12"
      }
    ],
    ["path", { "d": "m12 13.5 3.75.5" }],
    [
      "path",
      {
        "d": "m4.5 8 10.58-5.06a1 1 0 0 1 1.342.488L18.5 8"
      }
    ],
    ["path", { "d": "M6 10V8" }],
    ["path", { "d": "M6 14v1" }],
    ["path", { "d": "M6 19v2" }],
    [
      "rect",
      {
        "x": "2",
        "y": "8",
        "width": "20",
        "height": "13",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "tickets-plane" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tickets_plane, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tickets_plane);

// node_modules/lucide-svelte/dist/icons/tickets.svelte
mark_module_start();
Tickets[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tickets.svelte";
function Tickets($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tickets);
  const iconNode = [
    [
      "path",
      {
        "d": "m4.5 8 10.58-5.06a1 1 0 0 1 1.342.488L18.5 8"
      }
    ],
    ["path", { "d": "M6 10V8" }],
    ["path", { "d": "M6 14v1" }],
    ["path", { "d": "M6 19v2" }],
    [
      "rect",
      {
        "x": "2",
        "y": "8",
        "width": "20",
        "height": "13",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "tickets" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tickets, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tickets);

// node_modules/lucide-svelte/dist/icons/timer-off.svelte
mark_module_start();
Timer_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/timer-off.svelte";
function Timer_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Timer_off);
  const iconNode = [
    ["path", { "d": "M10 2h4" }],
    [
      "path",
      {
        "d": "M4.6 11a8 8 0 0 0 1.7 8.7 8 8 0 0 0 8.7 1.7"
      }
    ],
    [
      "path",
      {
        "d": "M7.4 7.4a8 8 0 0 1 10.3 1 8 8 0 0 1 .9 10.2"
      }
    ],
    ["path", { "d": "m2 2 20 20" }],
    ["path", { "d": "M12 12v-2" }]
  ];
  Icon($$anchor, spread_props({ name: "timer-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Timer_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Timer_off);

// node_modules/lucide-svelte/dist/icons/timer-reset.svelte
mark_module_start();
Timer_reset[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/timer-reset.svelte";
function Timer_reset($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Timer_reset);
  const iconNode = [
    ["path", { "d": "M10 2h4" }],
    ["path", { "d": "M12 14v-4" }],
    [
      "path",
      {
        "d": "M4 13a8 8 0 0 1 8-7 8 8 0 1 1-5.3 14L4 17.6"
      }
    ],
    ["path", { "d": "M9 17H4v5" }]
  ];
  Icon($$anchor, spread_props({ name: "timer-reset" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Timer_reset, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Timer_reset);

// node_modules/lucide-svelte/dist/icons/timer.svelte
mark_module_start();
Timer[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/timer.svelte";
function Timer($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Timer);
  const iconNode = [
    [
      "line",
      {
        "x1": "10",
        "x2": "14",
        "y1": "2",
        "y2": "2"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "15",
        "y1": "14",
        "y2": "11"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "14", "r": "8" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "timer" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Timer, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Timer);

// node_modules/lucide-svelte/dist/icons/toggle-left.svelte
mark_module_start();
Toggle_left[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/toggle-left.svelte";
function Toggle_left($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Toggle_left);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "12",
        "x": "2",
        "y": "6",
        "rx": "6",
        "ry": "6"
      }
    ],
    [
      "circle",
      { "cx": "8", "cy": "12", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "toggle-left" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Toggle_left, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Toggle_left);

// node_modules/lucide-svelte/dist/icons/toggle-right.svelte
mark_module_start();
Toggle_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/toggle-right.svelte";
function Toggle_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Toggle_right);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "12",
        "x": "2",
        "y": "6",
        "rx": "6",
        "ry": "6"
      }
    ],
    [
      "circle",
      { "cx": "16", "cy": "12", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "toggle-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Toggle_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Toggle_right);

// node_modules/lucide-svelte/dist/icons/tornado.svelte
mark_module_start();
Tornado[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tornado.svelte";
function Tornado($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tornado);
  const iconNode = [
    ["path", { "d": "M21 4H3" }],
    ["path", { "d": "M18 8H6" }],
    ["path", { "d": "M19 12H9" }],
    ["path", { "d": "M16 16h-6" }],
    ["path", { "d": "M11 20H9" }]
  ];
  Icon($$anchor, spread_props({ name: "tornado" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tornado, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tornado);

// node_modules/lucide-svelte/dist/icons/torus.svelte
mark_module_start();
Torus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/torus.svelte";
function Torus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Torus);
  const iconNode = [
    [
      "ellipse",
      {
        "cx": "12",
        "cy": "11",
        "rx": "3",
        "ry": "2"
      }
    ],
    [
      "ellipse",
      {
        "cx": "12",
        "cy": "12.5",
        "rx": "10",
        "ry": "8.5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "torus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Torus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Torus);

// node_modules/lucide-svelte/dist/icons/touchpad-off.svelte
mark_module_start();
Touchpad_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/touchpad-off.svelte";
function Touchpad_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Touchpad_off);
  const iconNode = [
    [
      "path",
      { "d": "M4 4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16" }
    ],
    ["path", { "d": "M2 14h12" }],
    ["path", { "d": "M22 14h-2" }],
    ["path", { "d": "M12 20v-6" }],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      { "d": "M22 16V6a2 2 0 0 0-2-2H10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "touchpad-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Touchpad_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Touchpad_off);

// node_modules/lucide-svelte/dist/icons/touchpad.svelte
mark_module_start();
Touchpad[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/touchpad.svelte";
function Touchpad($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Touchpad);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "16",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M2 14h20" }],
    ["path", { "d": "M12 20v-6" }]
  ];
  Icon($$anchor, spread_props({ name: "touchpad" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Touchpad, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Touchpad);

// node_modules/lucide-svelte/dist/icons/tower-control.svelte
mark_module_start();
Tower_control[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tower-control.svelte";
function Tower_control($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tower_control);
  const iconNode = [
    [
      "path",
      {
        "d": "M18.2 12.27 20 6H4l1.8 6.27a1 1 0 0 0 .95.73h10.5a1 1 0 0 0 .96-.73Z"
      }
    ],
    ["path", { "d": "M8 13v9" }],
    ["path", { "d": "M16 22v-9" }],
    ["path", { "d": "m9 6 1 7" }],
    ["path", { "d": "m15 6-1 7" }],
    ["path", { "d": "M12 6V2" }],
    ["path", { "d": "M13 2h-2" }]
  ];
  Icon($$anchor, spread_props({ name: "tower-control" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tower_control, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tower_control);

// node_modules/lucide-svelte/dist/icons/toy-brick.svelte
mark_module_start();
Toy_brick[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/toy-brick.svelte";
function Toy_brick($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Toy_brick);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "12",
        "x": "3",
        "y": "8",
        "rx": "1"
      }
    ],
    [
      "path",
      { "d": "M10 8V5c0-.6-.4-1-1-1H6a1 1 0 0 0-1 1v3" }
    ],
    [
      "path",
      {
        "d": "M19 8V5c0-.6-.4-1-1-1h-3a1 1 0 0 0-1 1v3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "toy-brick" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Toy_brick, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Toy_brick);

// node_modules/lucide-svelte/dist/icons/tractor.svelte
mark_module_start();
Tractor[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tractor.svelte";
function Tractor($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tractor);
  const iconNode = [
    [
      "path",
      {
        "d": "m10 11 11 .9a1 1 0 0 1 .8 1.1l-.665 4.158a1 1 0 0 1-.988.842H20"
      }
    ],
    ["path", { "d": "M16 18h-5" }],
    [
      "path",
      { "d": "M18 5a1 1 0 0 0-1 1v5.573" }
    ],
    [
      "path",
      { "d": "M3 4h8.129a1 1 0 0 1 .99.863L13 11.246" }
    ],
    ["path", { "d": "M4 11V4" }],
    ["path", { "d": "M7 15h.01" }],
    ["path", { "d": "M8 10.1V4" }],
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "2" }
    ],
    [
      "circle",
      { "cx": "7", "cy": "15", "r": "5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "tractor" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tractor, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tractor);

// node_modules/lucide-svelte/dist/icons/traffic-cone.svelte
mark_module_start();
Traffic_cone[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/traffic-cone.svelte";
function Traffic_cone($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Traffic_cone);
  const iconNode = [
    [
      "path",
      { "d": "M9.3 6.2a4.55 4.55 0 0 0 5.4 0" }
    ],
    [
      "path",
      {
        "d": "M7.9 10.7c.9.8 2.4 1.3 4.1 1.3s3.2-.5 4.1-1.3"
      }
    ],
    [
      "path",
      {
        "d": "M13.9 3.5a1.93 1.93 0 0 0-3.8-.1l-3 10c-.1.2-.1.4-.1.6 0 1.7 2.2 3 5 3s5-1.3 5-3c0-.2 0-.4-.1-.5Z"
      }
    ],
    [
      "path",
      {
        "d": "m7.5 12.2-4.7 2.7c-.5.3-.8.7-.8 1.1s.3.8.8 1.1l7.6 4.5c.9.5 2.1.5 3 0l7.6-4.5c.7-.3 1-.7 1-1.1s-.3-.8-.8-1.1l-4.7-2.8"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "traffic-cone" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Traffic_cone, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Traffic_cone);

// node_modules/lucide-svelte/dist/icons/train-front-tunnel.svelte
mark_module_start();
Train_front_tunnel[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/train-front-tunnel.svelte";
function Train_front_tunnel($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Train_front_tunnel);
  const iconNode = [
    [
      "path",
      { "d": "M2 22V12a10 10 0 1 1 20 0v10" }
    ],
    [
      "path",
      { "d": "M15 6.8v1.4a3 2.8 0 1 1-6 0V6.8" }
    ],
    ["path", { "d": "M10 15h.01" }],
    ["path", { "d": "M14 15h.01" }],
    [
      "path",
      {
        "d": "M10 19a4 4 0 0 1-4-4v-3a6 6 0 1 1 12 0v3a4 4 0 0 1-4 4Z"
      }
    ],
    ["path", { "d": "m9 19-2 3" }],
    ["path", { "d": "m15 19 2 3" }]
  ];
  Icon($$anchor, spread_props({ name: "train-front-tunnel" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Train_front_tunnel, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Train_front_tunnel);

// node_modules/lucide-svelte/dist/icons/train-front.svelte
mark_module_start();
Train_front[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/train-front.svelte";
function Train_front($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Train_front);
  const iconNode = [
    [
      "path",
      { "d": "M8 3.1V7a4 4 0 0 0 8 0V3.1" }
    ],
    ["path", { "d": "m9 15-1-1" }],
    ["path", { "d": "m15 15 1-1" }],
    [
      "path",
      {
        "d": "M9 19c-2.8 0-5-2.2-5-5v-4a8 8 0 0 1 16 0v4c0 2.8-2.2 5-5 5Z"
      }
    ],
    ["path", { "d": "m8 19-2 3" }],
    ["path", { "d": "m16 19 2 3" }]
  ];
  Icon($$anchor, spread_props({ name: "train-front" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Train_front, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Train_front);

// node_modules/lucide-svelte/dist/icons/train-track.svelte
mark_module_start();
Train_track[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/train-track.svelte";
function Train_track($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Train_track);
  const iconNode = [
    ["path", { "d": "M2 17 17 2" }],
    ["path", { "d": "m2 14 8 8" }],
    ["path", { "d": "m5 11 8 8" }],
    ["path", { "d": "m8 8 8 8" }],
    ["path", { "d": "m11 5 8 8" }],
    ["path", { "d": "m14 2 8 8" }],
    ["path", { "d": "M7 22 22 7" }]
  ];
  Icon($$anchor, spread_props({ name: "train-track" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Train_track, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Train_track);

// node_modules/lucide-svelte/dist/icons/tram-front.svelte
mark_module_start();
Tram_front[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tram-front.svelte";
function Tram_front($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tram_front);
  const iconNode = [
    [
      "rect",
      {
        "width": "16",
        "height": "16",
        "x": "4",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M4 11h16" }],
    ["path", { "d": "M12 3v8" }],
    ["path", { "d": "m8 19-2 3" }],
    ["path", { "d": "m18 22-2-3" }],
    ["path", { "d": "M8 15h.01" }],
    ["path", { "d": "M16 15h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "tram-front" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tram_front, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tram_front);

// node_modules/lucide-svelte/dist/icons/trash-2.svelte
mark_module_start();
Trash_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/trash-2.svelte";
function Trash_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Trash_2);
  const iconNode = [
    ["path", { "d": "M3 6h18" }],
    [
      "path",
      { "d": "M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" }
    ],
    [
      "path",
      { "d": "M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" }
    ],
    [
      "line",
      {
        "x1": "10",
        "x2": "10",
        "y1": "11",
        "y2": "17"
      }
    ],
    [
      "line",
      {
        "x1": "14",
        "x2": "14",
        "y1": "11",
        "y2": "17"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "trash-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Trash_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Trash_2);

// node_modules/lucide-svelte/dist/icons/trash.svelte
mark_module_start();
Trash[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/trash.svelte";
function Trash($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Trash);
  const iconNode = [
    ["path", { "d": "M3 6h18" }],
    [
      "path",
      { "d": "M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" }
    ],
    [
      "path",
      { "d": "M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "trash" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Trash, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Trash);

// node_modules/lucide-svelte/dist/icons/tree-deciduous.svelte
mark_module_start();
Tree_deciduous[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tree-deciduous.svelte";
function Tree_deciduous($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tree_deciduous);
  const iconNode = [
    [
      "path",
      {
        "d": "M8 19a4 4 0 0 1-2.24-7.32A3.5 3.5 0 0 1 9 6.03V6a3 3 0 1 1 6 0v.04a3.5 3.5 0 0 1 3.24 5.65A4 4 0 0 1 16 19Z"
      }
    ],
    ["path", { "d": "M12 19v3" }]
  ];
  Icon($$anchor, spread_props({ name: "tree-deciduous" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tree_deciduous, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tree_deciduous);

// node_modules/lucide-svelte/dist/icons/tree-palm.svelte
mark_module_start();
Tree_palm[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tree-palm.svelte";
function Tree_palm($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tree_palm);
  const iconNode = [
    [
      "path",
      {
        "d": "M13 8c0-2.76-2.46-5-5.5-5S2 5.24 2 8h2l1-1 1 1h4"
      }
    ],
    [
      "path",
      {
        "d": "M13 7.14A5.82 5.82 0 0 1 16.5 6c3.04 0 5.5 2.24 5.5 5h-3l-1-1-1 1h-3"
      }
    ],
    [
      "path",
      {
        "d": "M5.89 9.71c-2.15 2.15-2.3 5.47-.35 7.43l4.24-4.25.7-.7.71-.71 2.12-2.12c-1.95-1.96-5.27-1.8-7.42.35"
      }
    ],
    [
      "path",
      {
        "d": "M11 15.5c.5 2.5-.17 4.5-1 6.5h4c2-5.5-.5-12-1-14"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "tree-palm" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tree_palm, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tree_palm);

// node_modules/lucide-svelte/dist/icons/tree-pine.svelte
mark_module_start();
Tree_pine[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tree-pine.svelte";
function Tree_pine($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tree_pine);
  const iconNode = [
    [
      "path",
      {
        "d": "m17 14 3 3.3a1 1 0 0 1-.7 1.7H4.7a1 1 0 0 1-.7-1.7L7 14h-.3a1 1 0 0 1-.7-1.7L9 9h-.2A1 1 0 0 1 8 7.3L12 3l4 4.3a1 1 0 0 1-.8 1.7H15l3 3.3a1 1 0 0 1-.7 1.7H17Z"
      }
    ],
    ["path", { "d": "M12 22v-3" }]
  ];
  Icon($$anchor, spread_props({ name: "tree-pine" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tree_pine, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tree_pine);

// node_modules/lucide-svelte/dist/icons/trees.svelte
mark_module_start();
Trees[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/trees.svelte";
function Trees($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Trees);
  const iconNode = [
    [
      "path",
      {
        "d": "M10 10v.2A3 3 0 0 1 8.9 16H5a3 3 0 0 1-1-5.8V10a3 3 0 0 1 6 0Z"
      }
    ],
    ["path", { "d": "M7 16v6" }],
    ["path", { "d": "M13 19v3" }],
    [
      "path",
      {
        "d": "M12 19h8.3a1 1 0 0 0 .7-1.7L18 14h.3a1 1 0 0 0 .7-1.7L16 9h.2a1 1 0 0 0 .8-1.7L13 3l-1.4 1.5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "trees" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Trees, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Trees);

// node_modules/lucide-svelte/dist/icons/trello.svelte
mark_module_start();
Trello[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/trello.svelte";
function Trello($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Trello);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2",
        "ry": "2"
      }
    ],
    [
      "rect",
      {
        "width": "3",
        "height": "9",
        "x": "7",
        "y": "7"
      }
    ],
    [
      "rect",
      {
        "width": "3",
        "height": "5",
        "x": "14",
        "y": "7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "trello" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Trello, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Trello);

// node_modules/lucide-svelte/dist/icons/trending-down.svelte
mark_module_start();
Trending_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/trending-down.svelte";
function Trending_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Trending_down);
  const iconNode = [
    [
      "polyline",
      { "points": "22 17 13.5 8.5 8.5 13.5 2 7" }
    ],
    [
      "polyline",
      { "points": "16 17 22 17 22 11" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "trending-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Trending_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Trending_down);

// node_modules/lucide-svelte/dist/icons/trending-up-down.svelte
mark_module_start();
Trending_up_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/trending-up-down.svelte";
function Trending_up_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Trending_up_down);
  const iconNode = [
    ["path", { "d": "M14.828 14.828 21 21" }],
    ["path", { "d": "M21 16v5h-5" }],
    ["path", { "d": "m21 3-9 9-4-4-6 6" }],
    ["path", { "d": "M21 8V3h-5" }]
  ];
  Icon($$anchor, spread_props({ name: "trending-up-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Trending_up_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Trending_up_down);

// node_modules/lucide-svelte/dist/icons/trending-up.svelte
mark_module_start();
Trending_up[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/trending-up.svelte";
function Trending_up($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Trending_up);
  const iconNode = [
    [
      "polyline",
      { "points": "22 7 13.5 15.5 8.5 10.5 2 17" }
    ],
    ["polyline", { "points": "16 7 22 7 22 13" }]
  ];
  Icon($$anchor, spread_props({ name: "trending-up" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Trending_up, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Trending_up);

// node_modules/lucide-svelte/dist/icons/triangle-alert.svelte
mark_module_start();
Triangle_alert[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/triangle-alert.svelte";
function Triangle_alert($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Triangle_alert);
  const iconNode = [
    [
      "path",
      {
        "d": "m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3"
      }
    ],
    ["path", { "d": "M12 9v4" }],
    ["path", { "d": "M12 17h.01" }]
  ];
  Icon($$anchor, spread_props({ name: "triangle-alert" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Triangle_alert, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Triangle_alert);

// node_modules/lucide-svelte/dist/icons/triangle-right.svelte
mark_module_start();
Triangle_right[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/triangle-right.svelte";
function Triangle_right($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Triangle_right);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 18a2 2 0 0 1-2 2H3c-1.1 0-1.3-.6-.4-1.3L20.4 4.3c.9-.7 1.6-.4 1.6.7Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "triangle-right" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Triangle_right, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Triangle_right);

// node_modules/lucide-svelte/dist/icons/triangle.svelte
mark_module_start();
Triangle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/triangle.svelte";
function Triangle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Triangle);
  const iconNode = [
    [
      "path",
      {
        "d": "M13.73 4a2 2 0 0 0-3.46 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "triangle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Triangle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Triangle);

// node_modules/lucide-svelte/dist/icons/trophy.svelte
mark_module_start();
Trophy[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/trophy.svelte";
function Trophy($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Trophy);
  const iconNode = [
    [
      "path",
      { "d": "M6 9H4.5a2.5 2.5 0 0 1 0-5H6" }
    ],
    [
      "path",
      { "d": "M18 9h1.5a2.5 2.5 0 0 0 0-5H18" }
    ],
    ["path", { "d": "M4 22h16" }],
    [
      "path",
      {
        "d": "M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22"
      }
    ],
    [
      "path",
      {
        "d": "M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22"
      }
    ],
    [
      "path",
      { "d": "M18 2H6v7a6 6 0 0 0 12 0V2Z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "trophy" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Trophy, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Trophy);

// node_modules/lucide-svelte/dist/icons/truck.svelte
mark_module_start();
Truck[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/truck.svelte";
function Truck($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Truck);
  const iconNode = [
    [
      "path",
      {
        "d": "M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2"
      }
    ],
    ["path", { "d": "M15 18H9" }],
    [
      "path",
      {
        "d": "M19 18h2a1 1 0 0 0 1-1v-3.65a1 1 0 0 0-.22-.624l-3.48-4.35A1 1 0 0 0 17.52 8H14"
      }
    ],
    [
      "circle",
      { "cx": "17", "cy": "18", "r": "2" }
    ],
    [
      "circle",
      { "cx": "7", "cy": "18", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "truck" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Truck, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Truck);

// node_modules/lucide-svelte/dist/icons/turtle.svelte
mark_module_start();
Turtle[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/turtle.svelte";
function Turtle($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Turtle);
  const iconNode = [
    [
      "path",
      {
        "d": "m12 10 2 4v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3a8 8 0 1 0-16 0v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3l2-4h4Z"
      }
    ],
    ["path", { "d": "M4.82 7.9 8 10" }],
    ["path", { "d": "M15.18 7.9 12 10" }],
    [
      "path",
      { "d": "M16.93 10H20a2 2 0 0 1 0 4H2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "turtle" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Turtle, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Turtle);

// node_modules/lucide-svelte/dist/icons/tv-minimal-play.svelte
mark_module_start();
Tv_minimal_play[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tv-minimal-play.svelte";
function Tv_minimal_play($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tv_minimal_play);
  const iconNode = [
    [
      "path",
      {
        "d": "M10 7.75a.75.75 0 0 1 1.142-.638l3.664 2.249a.75.75 0 0 1 0 1.278l-3.664 2.25a.75.75 0 0 1-1.142-.64z"
      }
    ],
    ["path", { "d": "M7 21h10" }],
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "3",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "tv-minimal-play" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tv_minimal_play, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tv_minimal_play);

// node_modules/lucide-svelte/dist/icons/tv-minimal.svelte
mark_module_start();
Tv_minimal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tv-minimal.svelte";
function Tv_minimal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tv_minimal);
  const iconNode = [
    ["path", { "d": "M7 21h10" }],
    [
      "rect",
      {
        "width": "20",
        "height": "14",
        "x": "2",
        "y": "3",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "tv-minimal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tv_minimal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tv_minimal);

// node_modules/lucide-svelte/dist/icons/tv.svelte
mark_module_start();
Tv[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/tv.svelte";
function Tv($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Tv);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "15",
        "x": "2",
        "y": "7",
        "rx": "2",
        "ry": "2"
      }
    ],
    ["polyline", { "points": "17 2 12 7 7 2" }]
  ];
  Icon($$anchor, spread_props({ name: "tv" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Tv, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Tv);

// node_modules/lucide-svelte/dist/icons/twitch.svelte
mark_module_start();
Twitch[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/twitch.svelte";
function Twitch($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Twitch);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "twitch" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Twitch, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Twitch);

// node_modules/lucide-svelte/dist/icons/twitter.svelte
mark_module_start();
Twitter[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/twitter.svelte";
function Twitter($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Twitter);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "twitter" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Twitter, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Twitter);

// node_modules/lucide-svelte/dist/icons/type-outline.svelte
mark_module_start();
Type_outline[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/type-outline.svelte";
function Type_outline($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Type_outline);
  const iconNode = [
    [
      "path",
      {
        "d": "M14 16.5a.5.5 0 0 0 .5.5h.5a2 2 0 0 1 0 4H9a2 2 0 0 1 0-4h.5a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V8a2 2 0 0 1-4 0V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v3a2 2 0 0 1-4 0v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "type-outline" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Type_outline, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Type_outline);

// node_modules/lucide-svelte/dist/icons/type.svelte
mark_module_start();
Type[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/type.svelte";
function Type($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Type);
  const iconNode = [
    [
      "polyline",
      { "points": "4 7 4 4 20 4 20 7" }
    ],
    [
      "line",
      {
        "x1": "9",
        "x2": "15",
        "y1": "20",
        "y2": "20"
      }
    ],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "4",
        "y2": "20"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "type" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Type, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Type);

// node_modules/lucide-svelte/dist/icons/umbrella-off.svelte
mark_module_start();
Umbrella_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/umbrella-off.svelte";
function Umbrella_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Umbrella_off);
  const iconNode = [
    ["path", { "d": "M12 2v1" }],
    [
      "path",
      {
        "d": "M15.5 21a1.85 1.85 0 0 1-3.5-1v-8H2a10 10 0 0 1 3.428-6.575"
      }
    ],
    [
      "path",
      { "d": "M17.5 12H22A10 10 0 0 0 9.004 3.455" }
    ],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "umbrella-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Umbrella_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Umbrella_off);

// node_modules/lucide-svelte/dist/icons/umbrella.svelte
mark_module_start();
Umbrella[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/umbrella.svelte";
function Umbrella($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Umbrella);
  const iconNode = [
    [
      "path",
      { "d": "M22 12a10.06 10.06 1 0 0-20 0Z" }
    ],
    ["path", { "d": "M12 12v8a2 2 0 0 0 4 0" }],
    ["path", { "d": "M12 2v1" }]
  ];
  Icon($$anchor, spread_props({ name: "umbrella" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Umbrella, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Umbrella);

// node_modules/lucide-svelte/dist/icons/underline.svelte
mark_module_start();
Underline[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/underline.svelte";
function Underline($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Underline);
  const iconNode = [
    ["path", { "d": "M6 4v6a6 6 0 0 0 12 0V4" }],
    [
      "line",
      {
        "x1": "4",
        "x2": "20",
        "y1": "20",
        "y2": "20"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "underline" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Underline, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Underline);

// node_modules/lucide-svelte/dist/icons/undo-2.svelte
mark_module_start();
Undo_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/undo-2.svelte";
function Undo_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Undo_2);
  const iconNode = [
    ["path", { "d": "M9 14 4 9l5-5" }],
    [
      "path",
      {
        "d": "M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5a5.5 5.5 0 0 1-5.5 5.5H11"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "undo-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Undo_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Undo_2);

// node_modules/lucide-svelte/dist/icons/undo-dot.svelte
mark_module_start();
Undo_dot[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/undo-dot.svelte";
function Undo_dot($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Undo_dot);
  const iconNode = [
    [
      "path",
      { "d": "M21 17a9 9 0 0 0-15-6.7L3 13" }
    ],
    ["path", { "d": "M3 7v6h6" }],
    [
      "circle",
      { "cx": "12", "cy": "17", "r": "1" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "undo-dot" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Undo_dot, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Undo_dot);

// node_modules/lucide-svelte/dist/icons/undo.svelte
mark_module_start();
Undo[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/undo.svelte";
function Undo($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Undo);
  const iconNode = [
    ["path", { "d": "M3 7v6h6" }],
    [
      "path",
      {
        "d": "M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "undo" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Undo, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Undo);

// node_modules/lucide-svelte/dist/icons/unfold-horizontal.svelte
mark_module_start();
Unfold_horizontal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/unfold-horizontal.svelte";
function Unfold_horizontal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Unfold_horizontal);
  const iconNode = [
    ["path", { "d": "M16 12h6" }],
    ["path", { "d": "M8 12H2" }],
    ["path", { "d": "M12 2v2" }],
    ["path", { "d": "M12 8v2" }],
    ["path", { "d": "M12 14v2" }],
    ["path", { "d": "M12 20v2" }],
    ["path", { "d": "m19 15 3-3-3-3" }],
    ["path", { "d": "m5 9-3 3 3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "unfold-horizontal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Unfold_horizontal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Unfold_horizontal);

// node_modules/lucide-svelte/dist/icons/unfold-vertical.svelte
mark_module_start();
Unfold_vertical[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/unfold-vertical.svelte";
function Unfold_vertical($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Unfold_vertical);
  const iconNode = [
    ["path", { "d": "M12 22v-6" }],
    ["path", { "d": "M12 8V2" }],
    ["path", { "d": "M4 12H2" }],
    ["path", { "d": "M10 12H8" }],
    ["path", { "d": "M16 12h-2" }],
    ["path", { "d": "M22 12h-2" }],
    ["path", { "d": "m15 19-3 3-3-3" }],
    ["path", { "d": "m15 5-3-3-3 3" }]
  ];
  Icon($$anchor, spread_props({ name: "unfold-vertical" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Unfold_vertical, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Unfold_vertical);

// node_modules/lucide-svelte/dist/icons/ungroup.svelte
mark_module_start();
Ungroup[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/ungroup.svelte";
function Ungroup($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Ungroup);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "6",
        "x": "5",
        "y": "4",
        "rx": "1"
      }
    ],
    [
      "rect",
      {
        "width": "8",
        "height": "6",
        "x": "11",
        "y": "14",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "ungroup" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Ungroup, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Ungroup);

// node_modules/lucide-svelte/dist/icons/university.svelte
mark_module_start();
University[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/university.svelte";
function University($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, University);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "1" }
    ],
    [
      "path",
      {
        "d": "M22 20V8h-4l-6-4-6 4H2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2"
      }
    ],
    ["path", { "d": "M6 17v.01" }],
    ["path", { "d": "M6 13v.01" }],
    ["path", { "d": "M18 17v.01" }],
    ["path", { "d": "M18 13v.01" }],
    [
      "path",
      { "d": "M14 22v-5a2 2 0 0 0-2-2a2 2 0 0 0-2 2v5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "university" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(University, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(University);

// node_modules/lucide-svelte/dist/icons/unlink-2.svelte
mark_module_start();
Unlink_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/unlink-2.svelte";
function Unlink_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Unlink_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M15 7h2a5 5 0 0 1 0 10h-2m-6 0H7A5 5 0 0 1 7 7h2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "unlink-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Unlink_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Unlink_2);

// node_modules/lucide-svelte/dist/icons/unlink.svelte
mark_module_start();
Unlink[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/unlink.svelte";
function Unlink($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Unlink);
  const iconNode = [
    [
      "path",
      {
        "d": "m18.84 12.25 1.72-1.71h-.02a5.004 5.004 0 0 0-.12-7.07 5.006 5.006 0 0 0-6.95 0l-1.72 1.71"
      }
    ],
    [
      "path",
      {
        "d": "m5.17 11.75-1.71 1.71a5.004 5.004 0 0 0 .12 7.07 5.006 5.006 0 0 0 6.95 0l1.71-1.71"
      }
    ],
    [
      "line",
      { "x1": "8", "x2": "8", "y1": "2", "y2": "5" }
    ],
    [
      "line",
      { "x1": "2", "x2": "5", "y1": "8", "y2": "8" }
    ],
    [
      "line",
      {
        "x1": "16",
        "x2": "16",
        "y1": "19",
        "y2": "22"
      }
    ],
    [
      "line",
      {
        "x1": "19",
        "x2": "22",
        "y1": "16",
        "y2": "16"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "unlink" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Unlink, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Unlink);

// node_modules/lucide-svelte/dist/icons/unplug.svelte
mark_module_start();
Unplug[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/unplug.svelte";
function Unplug($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Unplug);
  const iconNode = [
    ["path", { "d": "m19 5 3-3" }],
    ["path", { "d": "m2 22 3-3" }],
    [
      "path",
      {
        "d": "M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z"
      }
    ],
    ["path", { "d": "M7.5 13.5 10 11" }],
    ["path", { "d": "M10.5 16.5 13 14" }],
    [
      "path",
      {
        "d": "m12 6 6 6 2.3-2.3a2.4 2.4 0 0 0 0-3.4l-2.6-2.6a2.4 2.4 0 0 0-3.4 0Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "unplug" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Unplug, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Unplug);

// node_modules/lucide-svelte/dist/icons/upload.svelte
mark_module_start();
Upload[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/upload.svelte";
function Upload($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Upload);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
      }
    ],
    ["polyline", { "points": "17 8 12 3 7 8" }],
    [
      "line",
      {
        "x1": "12",
        "x2": "12",
        "y1": "3",
        "y2": "15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "upload" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Upload, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Upload);

// node_modules/lucide-svelte/dist/icons/usb.svelte
mark_module_start();
Usb[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/usb.svelte";
function Usb($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Usb);
  const iconNode = [
    [
      "circle",
      { "cx": "10", "cy": "7", "r": "1" }
    ],
    [
      "circle",
      { "cx": "4", "cy": "20", "r": "1" }
    ],
    ["path", { "d": "M4.7 19.3 19 5" }],
    ["path", { "d": "m21 3-3 1 2 2Z" }],
    ["path", { "d": "M9.26 7.68 5 12l2 5" }],
    ["path", { "d": "m10 14 5 2 3.5-3.5" }],
    ["path", { "d": "m18 12 1-1 1 1-1 1Z" }]
  ];
  Icon($$anchor, spread_props({ name: "usb" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Usb, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Usb);

// node_modules/lucide-svelte/dist/icons/user-check.svelte
mark_module_start();
User_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-check.svelte";
function User_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_check);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"
      }
    ],
    [
      "circle",
      { "cx": "9", "cy": "7", "r": "4" }
    ],
    [
      "polyline",
      { "points": "16 11 18 13 22 9" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "user-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_check);

// node_modules/lucide-svelte/dist/icons/user-cog.svelte
mark_module_start();
User_cog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-cog.svelte";
function User_cog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_cog);
  const iconNode = [
    [
      "circle",
      { "cx": "18", "cy": "15", "r": "3" }
    ],
    [
      "circle",
      { "cx": "9", "cy": "7", "r": "4" }
    ],
    ["path", { "d": "M10 15H6a4 4 0 0 0-4 4v2" }],
    ["path", { "d": "m21.7 16.4-.9-.3" }],
    ["path", { "d": "m15.2 13.9-.9-.3" }],
    ["path", { "d": "m16.6 18.7.3-.9" }],
    ["path", { "d": "m19.1 12.2.3-.9" }],
    ["path", { "d": "m19.6 18.7-.4-1" }],
    ["path", { "d": "m16.8 12.3-.4-1" }],
    ["path", { "d": "m14.3 16.6 1-.4" }],
    ["path", { "d": "m20.7 13.8 1-.4" }]
  ];
  Icon($$anchor, spread_props({ name: "user-cog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_cog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_cog);

// node_modules/lucide-svelte/dist/icons/user-minus.svelte
mark_module_start();
User_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-minus.svelte";
function User_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_minus);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"
      }
    ],
    [
      "circle",
      { "cx": "9", "cy": "7", "r": "4" }
    ],
    [
      "line",
      {
        "x1": "22",
        "x2": "16",
        "y1": "11",
        "y2": "11"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "user-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_minus);

// node_modules/lucide-svelte/dist/icons/user-pen.svelte
mark_module_start();
User_pen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-pen.svelte";
function User_pen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_pen);
  const iconNode = [
    [
      "path",
      { "d": "M11.5 15H7a4 4 0 0 0-4 4v2" }
    ],
    [
      "path",
      {
        "d": "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
      }
    ],
    [
      "circle",
      { "cx": "10", "cy": "7", "r": "4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "user-pen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_pen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_pen);

// node_modules/lucide-svelte/dist/icons/user-plus.svelte
mark_module_start();
User_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-plus.svelte";
function User_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_plus);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"
      }
    ],
    [
      "circle",
      { "cx": "9", "cy": "7", "r": "4" }
    ],
    [
      "line",
      {
        "x1": "19",
        "x2": "19",
        "y1": "8",
        "y2": "14"
      }
    ],
    [
      "line",
      {
        "x1": "22",
        "x2": "16",
        "y1": "11",
        "y2": "11"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "user-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_plus);

// node_modules/lucide-svelte/dist/icons/user-round-check.svelte
mark_module_start();
User_round_check[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-round-check.svelte";
function User_round_check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_round_check);
  const iconNode = [
    ["path", { "d": "M2 21a8 8 0 0 1 13.292-6" }],
    [
      "circle",
      { "cx": "10", "cy": "8", "r": "5" }
    ],
    ["path", { "d": "m16 19 2 2 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "user-round-check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_round_check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_round_check);

// node_modules/lucide-svelte/dist/icons/user-round-cog.svelte
mark_module_start();
User_round_cog[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-round-cog.svelte";
function User_round_cog($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_round_cog);
  const iconNode = [
    [
      "path",
      { "d": "M2 21a8 8 0 0 1 10.434-7.62" }
    ],
    [
      "circle",
      { "cx": "10", "cy": "8", "r": "5" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "3" }
    ],
    ["path", { "d": "m19.5 14.3-.4.9" }],
    ["path", { "d": "m16.9 20.8-.4.9" }],
    ["path", { "d": "m21.7 19.5-.9-.4" }],
    ["path", { "d": "m15.2 16.9-.9-.4" }],
    ["path", { "d": "m21.7 16.5-.9.4" }],
    ["path", { "d": "m15.2 19.1-.9.4" }],
    ["path", { "d": "m19.5 21.7-.4-.9" }],
    ["path", { "d": "m16.9 15.2-.4-.9" }]
  ];
  Icon($$anchor, spread_props({ name: "user-round-cog" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_round_cog, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_round_cog);

// node_modules/lucide-svelte/dist/icons/user-round-minus.svelte
mark_module_start();
User_round_minus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-round-minus.svelte";
function User_round_minus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_round_minus);
  const iconNode = [
    ["path", { "d": "M2 21a8 8 0 0 1 13.292-6" }],
    [
      "circle",
      { "cx": "10", "cy": "8", "r": "5" }
    ],
    ["path", { "d": "M22 19h-6" }]
  ];
  Icon($$anchor, spread_props({ name: "user-round-minus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_round_minus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_round_minus);

// node_modules/lucide-svelte/dist/icons/user-round-pen.svelte
mark_module_start();
User_round_pen[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-round-pen.svelte";
function User_round_pen($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_round_pen);
  const iconNode = [
    [
      "path",
      { "d": "M2 21a8 8 0 0 1 10.821-7.487" }
    ],
    [
      "path",
      {
        "d": "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
      }
    ],
    [
      "circle",
      { "cx": "10", "cy": "8", "r": "5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "user-round-pen" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_round_pen, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_round_pen);

// node_modules/lucide-svelte/dist/icons/user-round-plus.svelte
mark_module_start();
User_round_plus[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-round-plus.svelte";
function User_round_plus($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_round_plus);
  const iconNode = [
    ["path", { "d": "M2 21a8 8 0 0 1 13.292-6" }],
    [
      "circle",
      { "cx": "10", "cy": "8", "r": "5" }
    ],
    ["path", { "d": "M19 16v6" }],
    ["path", { "d": "M22 19h-6" }]
  ];
  Icon($$anchor, spread_props({ name: "user-round-plus" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_round_plus, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_round_plus);

// node_modules/lucide-svelte/dist/icons/user-round-search.svelte
mark_module_start();
User_round_search[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-round-search.svelte";
function User_round_search($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_round_search);
  const iconNode = [
    [
      "circle",
      { "cx": "10", "cy": "8", "r": "5" }
    ],
    [
      "path",
      { "d": "M2 21a8 8 0 0 1 10.434-7.62" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "18", "r": "3" }
    ],
    ["path", { "d": "m22 22-1.9-1.9" }]
  ];
  Icon($$anchor, spread_props({ name: "user-round-search" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_round_search, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_round_search);

// node_modules/lucide-svelte/dist/icons/user-round-x.svelte
mark_module_start();
User_round_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-round-x.svelte";
function User_round_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_round_x);
  const iconNode = [
    ["path", { "d": "M2 21a8 8 0 0 1 11.873-7" }],
    [
      "circle",
      { "cx": "10", "cy": "8", "r": "5" }
    ],
    ["path", { "d": "m17 17 5 5" }],
    ["path", { "d": "m22 17-5 5" }]
  ];
  Icon($$anchor, spread_props({ name: "user-round-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_round_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_round_x);

// node_modules/lucide-svelte/dist/icons/user-round.svelte
mark_module_start();
User_round[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-round.svelte";
function User_round($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_round);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "8", "r": "5" }
    ],
    ["path", { "d": "M20 21a8 8 0 0 0-16 0" }]
  ];
  Icon($$anchor, spread_props({ name: "user-round" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_round, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_round);

// node_modules/lucide-svelte/dist/icons/user-search.svelte
mark_module_start();
User_search[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-search.svelte";
function User_search($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_search);
  const iconNode = [
    [
      "circle",
      { "cx": "10", "cy": "7", "r": "4" }
    ],
    [
      "path",
      { "d": "M10.3 15H7a4 4 0 0 0-4 4v2" }
    ],
    [
      "circle",
      { "cx": "17", "cy": "17", "r": "3" }
    ],
    ["path", { "d": "m21 21-1.9-1.9" }]
  ];
  Icon($$anchor, spread_props({ name: "user-search" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_search, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_search);

// node_modules/lucide-svelte/dist/icons/user-x.svelte
mark_module_start();
User_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user-x.svelte";
function User_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"
      }
    ],
    [
      "circle",
      { "cx": "9", "cy": "7", "r": "4" }
    ],
    [
      "line",
      {
        "x1": "17",
        "x2": "22",
        "y1": "8",
        "y2": "13"
      }
    ],
    [
      "line",
      {
        "x1": "22",
        "x2": "17",
        "y1": "8",
        "y2": "13"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "user-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User_x);

// node_modules/lucide-svelte/dist/icons/user.svelte
mark_module_start();
User[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/user.svelte";
function User($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, User);
  const iconNode = [
    [
      "path",
      {
        "d": "M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "7", "r": "4" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "user" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(User, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(User);

// node_modules/lucide-svelte/dist/icons/users-round.svelte
mark_module_start();
Users_round[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/users-round.svelte";
function Users_round($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Users_round);
  const iconNode = [
    ["path", { "d": "M18 21a8 8 0 0 0-16 0" }],
    [
      "circle",
      { "cx": "10", "cy": "8", "r": "5" }
    ],
    [
      "path",
      {
        "d": "M22 20c0-3.37-2-6.5-4-8a5 5 0 0 0-.45-8.3"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "users-round" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Users_round, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Users_round);

// node_modules/lucide-svelte/dist/icons/users.svelte
mark_module_start();
Users[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/users.svelte";
function Users($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Users);
  const iconNode = [
    [
      "path",
      {
        "d": "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"
      }
    ],
    [
      "circle",
      { "cx": "9", "cy": "7", "r": "4" }
    ],
    [
      "path",
      { "d": "M22 21v-2a4 4 0 0 0-3-3.87" }
    ],
    [
      "path",
      { "d": "M16 3.13a4 4 0 0 1 0 7.75" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "users" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Users, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Users);

// node_modules/lucide-svelte/dist/icons/utensils-crossed.svelte
mark_module_start();
Utensils_crossed[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/utensils-crossed.svelte";
function Utensils_crossed($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Utensils_crossed);
  const iconNode = [
    [
      "path",
      {
        "d": "m16 2-2.3 2.3a3 3 0 0 0 0 4.2l1.8 1.8a3 3 0 0 0 4.2 0L22 8"
      }
    ],
    [
      "path",
      {
        "d": "M15 15 3.3 3.3a4.2 4.2 0 0 0 0 6l7.3 7.3c.7.7 2 .7 2.8 0L15 15Zm0 0 7 7"
      }
    ],
    ["path", { "d": "m2.1 21.8 6.4-6.3" }],
    ["path", { "d": "m19 5-7 7" }]
  ];
  Icon($$anchor, spread_props({ name: "utensils-crossed" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Utensils_crossed, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Utensils_crossed);

// node_modules/lucide-svelte/dist/icons/utensils.svelte
mark_module_start();
Utensils[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/utensils.svelte";
function Utensils($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Utensils);
  const iconNode = [
    [
      "path",
      { "d": "M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2" }
    ],
    ["path", { "d": "M7 2v20" }],
    [
      "path",
      {
        "d": "M21 15V2a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "utensils" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Utensils, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Utensils);

// node_modules/lucide-svelte/dist/icons/utility-pole.svelte
mark_module_start();
Utility_pole[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/utility-pole.svelte";
function Utility_pole($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Utility_pole);
  const iconNode = [
    ["path", { "d": "M12 2v20" }],
    ["path", { "d": "M2 5h20" }],
    ["path", { "d": "M3 3v2" }],
    ["path", { "d": "M7 3v2" }],
    ["path", { "d": "M17 3v2" }],
    ["path", { "d": "M21 3v2" }],
    ["path", { "d": "m19 5-7 7-7-7" }]
  ];
  Icon($$anchor, spread_props({ name: "utility-pole" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Utility_pole, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Utility_pole);

// node_modules/lucide-svelte/dist/icons/variable.svelte
mark_module_start();
Variable[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/variable.svelte";
function Variable($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Variable);
  const iconNode = [
    ["path", { "d": "M8 21s-4-3-4-9 4-9 4-9" }],
    ["path", { "d": "M16 3s4 3 4 9-4 9-4 9" }],
    [
      "line",
      {
        "x1": "15",
        "x2": "9",
        "y1": "9",
        "y2": "15"
      }
    ],
    [
      "line",
      {
        "x1": "9",
        "x2": "15",
        "y1": "9",
        "y2": "15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "variable" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Variable, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Variable);

// node_modules/lucide-svelte/dist/icons/vault.svelte
mark_module_start();
Vault[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/vault.svelte";
function Vault($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Vault);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    [
      "circle",
      {
        "cx": "7.5",
        "cy": "7.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    ["path", { "d": "m7.9 7.9 2.7 2.7" }],
    [
      "circle",
      {
        "cx": "16.5",
        "cy": "7.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    ["path", { "d": "m13.4 10.6 2.7-2.7" }],
    [
      "circle",
      {
        "cx": "7.5",
        "cy": "16.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    ["path", { "d": "m7.9 16.1 2.7-2.7" }],
    [
      "circle",
      {
        "cx": "16.5",
        "cy": "16.5",
        "r": ".5",
        "fill": "currentColor"
      }
    ],
    ["path", { "d": "m13.4 13.4 2.7 2.7" }],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "vault" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Vault, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Vault);

// node_modules/lucide-svelte/dist/icons/vegan.svelte
mark_module_start();
Vegan[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/vegan.svelte";
function Vegan($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Vegan);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 2a26.6 26.6 0 0 1 10 20c.9-6.82 1.5-9.5 4-14"
      }
    ],
    [
      "path",
      { "d": "M16 8c4 0 6-2 6-6-4 0-6 2-6 6" }
    ],
    [
      "path",
      { "d": "M17.41 3.6a10 10 0 1 0 3 3" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "vegan" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Vegan, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Vegan);

// node_modules/lucide-svelte/dist/icons/venetian-mask.svelte
mark_module_start();
Venetian_mask[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/venetian-mask.svelte";
function Venetian_mask($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Venetian_mask);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 12a5 5 0 0 0 5 5 8 8 0 0 1 5 2 8 8 0 0 1 5-2 5 5 0 0 0 5-5V7h-5a8 8 0 0 0-5 2 8 8 0 0 0-5-2H2Z"
      }
    ],
    [
      "path",
      { "d": "M6 11c1.5 0 3 .5 3 2-2 0-3 0-3-2Z" }
    ],
    [
      "path",
      { "d": "M18 11c-1.5 0-3 .5-3 2 2 0 3 0 3-2Z" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "venetian-mask" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Venetian_mask, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Venetian_mask);

// node_modules/lucide-svelte/dist/icons/vibrate-off.svelte
mark_module_start();
Vibrate_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/vibrate-off.svelte";
function Vibrate_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Vibrate_off);
  const iconNode = [
    ["path", { "d": "m2 8 2 2-2 2 2 2-2 2" }],
    ["path", { "d": "m22 8-2 2 2 2-2 2 2 2" }],
    [
      "path",
      {
        "d": "M8 8v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2"
      }
    ],
    [
      "path",
      { "d": "M16 10.34V6c0-.55-.45-1-1-1h-4.34" }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "vibrate-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Vibrate_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Vibrate_off);

// node_modules/lucide-svelte/dist/icons/vibrate.svelte
mark_module_start();
Vibrate[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/vibrate.svelte";
function Vibrate($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Vibrate);
  const iconNode = [
    ["path", { "d": "m2 8 2 2-2 2 2 2-2 2" }],
    ["path", { "d": "m22 8-2 2 2 2-2 2 2 2" }],
    [
      "rect",
      {
        "width": "8",
        "height": "14",
        "x": "8",
        "y": "5",
        "rx": "1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "vibrate" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Vibrate, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Vibrate);

// node_modules/lucide-svelte/dist/icons/video-off.svelte
mark_module_start();
Video_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/video-off.svelte";
function Video_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Video_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.66 6H14a2 2 0 0 1 2 2v2.5l5.248-3.062A.5.5 0 0 1 22 7.87v8.196"
      }
    ],
    [
      "path",
      {
        "d": "M16 16a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2"
      }
    ],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "video-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Video_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Video_off);

// node_modules/lucide-svelte/dist/icons/video.svelte
mark_module_start();
Video[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/video.svelte";
function Video($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Video);
  const iconNode = [
    [
      "path",
      {
        "d": "m16 13 5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5"
      }
    ],
    [
      "rect",
      {
        "x": "2",
        "y": "6",
        "width": "14",
        "height": "12",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "video" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Video, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Video);

// node_modules/lucide-svelte/dist/icons/videotape.svelte
mark_module_start();
Videotape[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/videotape.svelte";
function Videotape($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Videotape);
  const iconNode = [
    [
      "rect",
      {
        "width": "20",
        "height": "16",
        "x": "2",
        "y": "4",
        "rx": "2"
      }
    ],
    ["path", { "d": "M2 8h20" }],
    [
      "circle",
      { "cx": "8", "cy": "14", "r": "2" }
    ],
    ["path", { "d": "M8 12h8" }],
    [
      "circle",
      { "cx": "16", "cy": "14", "r": "2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "videotape" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Videotape, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Videotape);

// node_modules/lucide-svelte/dist/icons/view.svelte
mark_module_start();
View[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/view.svelte";
function View($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, View);
  const iconNode = [
    [
      "path",
      {
        "d": "M21 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2"
      }
    ],
    [
      "path",
      { "d": "M21 7V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "1" }
    ],
    [
      "path",
      {
        "d": "M18.944 12.33a1 1 0 0 0 0-.66 7.5 7.5 0 0 0-13.888 0 1 1 0 0 0 0 .66 7.5 7.5 0 0 0 13.888 0"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "view" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(View, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(View);

// node_modules/lucide-svelte/dist/icons/voicemail.svelte
mark_module_start();
Voicemail[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/voicemail.svelte";
function Voicemail($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Voicemail);
  const iconNode = [
    [
      "circle",
      { "cx": "6", "cy": "12", "r": "4" }
    ],
    [
      "circle",
      { "cx": "18", "cy": "12", "r": "4" }
    ],
    [
      "line",
      {
        "x1": "6",
        "x2": "18",
        "y1": "16",
        "y2": "16"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "voicemail" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Voicemail, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Voicemail);

// node_modules/lucide-svelte/dist/icons/volleyball.svelte
mark_module_start();
Volleyball[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/volleyball.svelte";
function Volleyball($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Volleyball);
  const iconNode = [
    [
      "path",
      { "d": "M11.1 7.1a16.55 16.55 0 0 1 10.9 4" }
    ],
    [
      "path",
      { "d": "M12 12a12.6 12.6 0 0 1-8.7 5" }
    ],
    [
      "path",
      { "d": "M16.8 13.6a16.55 16.55 0 0 1-9 7.5" }
    ],
    [
      "path",
      {
        "d": "M20.7 17a12.8 12.8 0 0 0-8.7-5 13.3 13.3 0 0 1 0-10"
      }
    ],
    [
      "path",
      { "d": "M6.3 3.8a16.55 16.55 0 0 0 1.9 11.5" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "10" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "volleyball" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Volleyball, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Volleyball);

// node_modules/lucide-svelte/dist/icons/volume-1.svelte
mark_module_start();
Volume_1[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/volume-1.svelte";
function Volume_1($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Volume_1);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z"
      }
    ],
    ["path", { "d": "M16 9a5 5 0 0 1 0 6" }]
  ];
  Icon($$anchor, spread_props({ name: "volume-1" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Volume_1, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Volume_1);

// node_modules/lucide-svelte/dist/icons/volume-2.svelte
mark_module_start();
Volume_2[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/volume-2.svelte";
function Volume_2($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Volume_2);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z"
      }
    ],
    ["path", { "d": "M16 9a5 5 0 0 1 0 6" }],
    [
      "path",
      { "d": "M19.364 18.364a9 9 0 0 0 0-12.728" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "volume-2" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Volume_2, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Volume_2);

// node_modules/lucide-svelte/dist/icons/volume-off.svelte
mark_module_start();
Volume_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/volume-off.svelte";
function Volume_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Volume_off);
  const iconNode = [
    [
      "path",
      { "d": "M16 9a5 5 0 0 1 .95 2.293" }
    ],
    [
      "path",
      { "d": "M19.364 5.636a9 9 0 0 1 1.889 9.96" }
    ],
    ["path", { "d": "m2 2 20 20" }],
    [
      "path",
      {
        "d": "m7 7-.587.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298V11"
      }
    ],
    [
      "path",
      {
        "d": "M9.828 4.172A.686.686 0 0 1 11 4.657v.686"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "volume-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Volume_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Volume_off);

// node_modules/lucide-svelte/dist/icons/volume-x.svelte
mark_module_start();
Volume_x[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/volume-x.svelte";
function Volume_x($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Volume_x);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z"
      }
    ],
    [
      "line",
      {
        "x1": "22",
        "x2": "16",
        "y1": "9",
        "y2": "15"
      }
    ],
    [
      "line",
      {
        "x1": "16",
        "x2": "22",
        "y1": "9",
        "y2": "15"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "volume-x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Volume_x, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Volume_x);

// node_modules/lucide-svelte/dist/icons/volume.svelte
mark_module_start();
Volume[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/volume.svelte";
function Volume($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Volume);
  const iconNode = [
    [
      "path",
      {
        "d": "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "volume" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Volume, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Volume);

// node_modules/lucide-svelte/dist/icons/vote.svelte
mark_module_start();
Vote[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/vote.svelte";
function Vote($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Vote);
  const iconNode = [
    ["path", { "d": "m9 12 2 2 4-4" }],
    [
      "path",
      {
        "d": "M5 7c0-1.1.9-2 2-2h10a2 2 0 0 1 2 2v12H5V7Z"
      }
    ],
    ["path", { "d": "M22 19H2" }]
  ];
  Icon($$anchor, spread_props({ name: "vote" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Vote, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Vote);

// node_modules/lucide-svelte/dist/icons/wallet-cards.svelte
mark_module_start();
Wallet_cards[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wallet-cards.svelte";
function Wallet_cards($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wallet_cards);
  const iconNode = [
    [
      "rect",
      {
        "width": "18",
        "height": "18",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    [
      "path",
      { "d": "M3 9a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2" }
    ],
    [
      "path",
      {
        "d": "M3 11h3c.8 0 1.6.3 2.1.9l1.1.9c1.6 1.6 4.1 1.6 5.7 0l1.1-.9c.5-.5 1.3-.9 2.1-.9H21"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wallet-cards" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wallet_cards, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wallet_cards);

// node_modules/lucide-svelte/dist/icons/wallet-minimal.svelte
mark_module_start();
Wallet_minimal[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wallet-minimal.svelte";
function Wallet_minimal($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wallet_minimal);
  const iconNode = [
    ["path", { "d": "M17 14h.01" }],
    [
      "path",
      {
        "d": "M7 7h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wallet-minimal" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wallet_minimal, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wallet_minimal);

// node_modules/lucide-svelte/dist/icons/wallet.svelte
mark_module_start();
Wallet[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wallet.svelte";
function Wallet($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wallet);
  const iconNode = [
    [
      "path",
      {
        "d": "M19 7V4a1 1 0 0 0-1-1H5a2 2 0 0 0 0 4h15a1 1 0 0 1 1 1v4h-3a2 2 0 0 0 0 4h3a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1"
      }
    ],
    [
      "path",
      {
        "d": "M3 5v14a2 2 0 0 0 2 2h15a1 1 0 0 0 1-1v-4"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wallet" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wallet, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wallet);

// node_modules/lucide-svelte/dist/icons/wallpaper.svelte
mark_module_start();
Wallpaper[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wallpaper.svelte";
function Wallpaper($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wallpaper);
  const iconNode = [
    [
      "circle",
      { "cx": "8", "cy": "9", "r": "2" }
    ],
    [
      "path",
      {
        "d": "m9 17 6.1-6.1a2 2 0 0 1 2.81.01L22 15V5a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2"
      }
    ],
    ["path", { "d": "M8 21h8" }],
    ["path", { "d": "M12 17v4" }]
  ];
  Icon($$anchor, spread_props({ name: "wallpaper" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wallpaper, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wallpaper);

// node_modules/lucide-svelte/dist/icons/wand-sparkles.svelte
mark_module_start();
Wand_sparkles[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wand-sparkles.svelte";
function Wand_sparkles($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wand_sparkles);
  const iconNode = [
    [
      "path",
      {
        "d": "m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72"
      }
    ],
    ["path", { "d": "m14 7 3 3" }],
    ["path", { "d": "M5 6v4" }],
    ["path", { "d": "M19 14v4" }],
    ["path", { "d": "M10 2v2" }],
    ["path", { "d": "M7 8H3" }],
    ["path", { "d": "M21 16h-4" }],
    ["path", { "d": "M11 3H9" }]
  ];
  Icon($$anchor, spread_props({ name: "wand-sparkles" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wand_sparkles, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wand_sparkles);

// node_modules/lucide-svelte/dist/icons/wand.svelte
mark_module_start();
Wand[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wand.svelte";
function Wand($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wand);
  const iconNode = [
    ["path", { "d": "M15 4V2" }],
    ["path", { "d": "M15 16v-2" }],
    ["path", { "d": "M8 9h2" }],
    ["path", { "d": "M20 9h2" }],
    ["path", { "d": "M17.8 11.8 19 13" }],
    ["path", { "d": "M15 9h.01" }],
    ["path", { "d": "M17.8 6.2 19 5" }],
    ["path", { "d": "m3 21 9-9" }],
    ["path", { "d": "M12.2 6.2 11 5" }]
  ];
  Icon($$anchor, spread_props({ name: "wand" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wand, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wand);

// node_modules/lucide-svelte/dist/icons/warehouse.svelte
mark_module_start();
Warehouse[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/warehouse.svelte";
function Warehouse($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Warehouse);
  const iconNode = [
    [
      "path",
      {
        "d": "M22 8.35V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8.35A2 2 0 0 1 3.26 6.5l8-3.2a2 2 0 0 1 1.48 0l8 3.2A2 2 0 0 1 22 8.35Z"
      }
    ],
    ["path", { "d": "M6 18h12" }],
    ["path", { "d": "M6 14h12" }],
    [
      "rect",
      {
        "width": "12",
        "height": "12",
        "x": "6",
        "y": "10"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "warehouse" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Warehouse, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Warehouse);

// node_modules/lucide-svelte/dist/icons/washing-machine.svelte
mark_module_start();
Washing_machine[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/washing-machine.svelte";
function Washing_machine($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Washing_machine);
  const iconNode = [
    ["path", { "d": "M3 6h3" }],
    ["path", { "d": "M17 6h.01" }],
    [
      "rect",
      {
        "width": "18",
        "height": "20",
        "x": "3",
        "y": "2",
        "rx": "2"
      }
    ],
    [
      "circle",
      { "cx": "12", "cy": "13", "r": "5" }
    ],
    [
      "path",
      {
        "d": "M12 18a2.5 2.5 0 0 0 0-5 2.5 2.5 0 0 1 0-5"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "washing-machine" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Washing_machine, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Washing_machine);

// node_modules/lucide-svelte/dist/icons/watch.svelte
mark_module_start();
Watch[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/watch.svelte";
function Watch($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Watch);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "12", "r": "6" }
    ],
    [
      "polyline",
      { "points": "12 10 12 12 13 13" }
    ],
    [
      "path",
      {
        "d": "m16.13 7.66-.81-4.05a2 2 0 0 0-2-1.61h-2.68a2 2 0 0 0-2 1.61l-.78 4.05"
      }
    ],
    [
      "path",
      {
        "d": "m7.88 16.36.8 4a2 2 0 0 0 2 1.61h2.72a2 2 0 0 0 2-1.61l.81-4.05"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "watch" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Watch, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Watch);

// node_modules/lucide-svelte/dist/icons/waves.svelte
mark_module_start();
Waves[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/waves.svelte";
function Waves($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Waves);
  const iconNode = [
    [
      "path",
      {
        "d": "M2 6c.6.5 1.2 1 2.5 1C7 7 7 5 9.5 5c2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
      }
    ],
    [
      "path",
      {
        "d": "M2 12c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
      }
    ],
    [
      "path",
      {
        "d": "M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "waves" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Waves, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Waves);

// node_modules/lucide-svelte/dist/icons/waypoints.svelte
mark_module_start();
Waypoints[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/waypoints.svelte";
function Waypoints($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Waypoints);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "4.5", "r": "2.5" }
    ],
    ["path", { "d": "m10.2 6.3-3.9 3.9" }],
    [
      "circle",
      { "cx": "4.5", "cy": "12", "r": "2.5" }
    ],
    ["path", { "d": "M7 12h10" }],
    [
      "circle",
      { "cx": "19.5", "cy": "12", "r": "2.5" }
    ],
    ["path", { "d": "m13.8 17.7 3.9-3.9" }],
    [
      "circle",
      { "cx": "12", "cy": "19.5", "r": "2.5" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "waypoints" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Waypoints, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Waypoints);

// node_modules/lucide-svelte/dist/icons/webcam.svelte
mark_module_start();
Webcam[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/webcam.svelte";
function Webcam($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Webcam);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "8" }
    ],
    [
      "circle",
      { "cx": "12", "cy": "10", "r": "3" }
    ],
    ["path", { "d": "M7 22h10" }],
    ["path", { "d": "M12 22v-4" }]
  ];
  Icon($$anchor, spread_props({ name: "webcam" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Webcam, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Webcam);

// node_modules/lucide-svelte/dist/icons/webhook-off.svelte
mark_module_start();
Webhook_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/webhook-off.svelte";
function Webhook_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Webhook_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M17 17h-5c-1.09-.02-1.94.92-2.5 1.9A3 3 0 1 1 2.57 15"
      }
    ],
    ["path", { "d": "M9 3.4a4 4 0 0 1 6.52.66" }],
    [
      "path",
      { "d": "m6 17 3.1-5.8a2.5 2.5 0 0 0 .057-2.05" }
    ],
    [
      "path",
      { "d": "M20.3 20.3a4 4 0 0 1-2.3.7" }
    ],
    [
      "path",
      { "d": "M18.6 13a4 4 0 0 1 3.357 3.414" }
    ],
    ["path", { "d": "m12 6 .6 1" }],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "webhook-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Webhook_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Webhook_off);

// node_modules/lucide-svelte/dist/icons/webhook.svelte
mark_module_start();
Webhook[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/webhook.svelte";
function Webhook($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Webhook);
  const iconNode = [
    [
      "path",
      {
        "d": "M18 16.98h-5.99c-1.1 0-1.95.94-2.48 1.9A4 4 0 0 1 2 17c.01-.7.2-1.4.57-2"
      }
    ],
    [
      "path",
      {
        "d": "m6 17 3.13-5.78c.53-.97.1-2.18-.5-3.1a4 4 0 1 1 6.89-4.06"
      }
    ],
    [
      "path",
      {
        "d": "m12 6 3.13 5.73C15.66 12.7 16.9 13 18 13a4 4 0 0 1 0 8"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "webhook" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Webhook, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Webhook);

// node_modules/lucide-svelte/dist/icons/weight.svelte
mark_module_start();
Weight[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/weight.svelte";
function Weight($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Weight);
  const iconNode = [
    [
      "circle",
      { "cx": "12", "cy": "5", "r": "3" }
    ],
    [
      "path",
      {
        "d": "M6.5 8a2 2 0 0 0-1.905 1.46L2.1 18.5A2 2 0 0 0 4 21h16a2 2 0 0 0 1.925-2.54L19.4 9.5A2 2 0 0 0 17.48 8Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "weight" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Weight, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Weight);

// node_modules/lucide-svelte/dist/icons/wheat-off.svelte
mark_module_start();
Wheat_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wheat-off.svelte";
function Wheat_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wheat_off);
  const iconNode = [
    ["path", { "d": "m2 22 10-10" }],
    ["path", { "d": "m16 8-1.17 1.17" }],
    [
      "path",
      {
        "d": "M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z"
      }
    ],
    [
      "path",
      {
        "d": "m8 8-.53.53a3.5 3.5 0 0 0 0 4.94L9 15l1.53-1.53c.55-.55.88-1.25.98-1.97"
      }
    ],
    [
      "path",
      {
        "d": "M10.91 5.26c.15-.26.34-.51.56-.73L13 3l1.53 1.53a3.5 3.5 0 0 1 .28 4.62"
      }
    ],
    [
      "path",
      {
        "d": "M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z"
      }
    ],
    [
      "path",
      {
        "d": "M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z"
      }
    ],
    [
      "path",
      {
        "d": "m16 16-.53.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.49 3.49 0 0 1 1.97-.98"
      }
    ],
    [
      "path",
      {
        "d": "M18.74 13.09c.26-.15.51-.34.73-.56L21 11l-1.53-1.53a3.5 3.5 0 0 0-4.62-.28"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wheat-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wheat_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wheat_off);

// node_modules/lucide-svelte/dist/icons/wheat.svelte
mark_module_start();
Wheat[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wheat.svelte";
function Wheat($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wheat);
  const iconNode = [
    ["path", { "d": "M2 22 16 8" }],
    [
      "path",
      {
        "d": "M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z"
      }
    ],
    [
      "path",
      {
        "d": "M7.47 8.53 9 7l1.53 1.53a3.5 3.5 0 0 1 0 4.94L9 15l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z"
      }
    ],
    [
      "path",
      {
        "d": "M11.47 4.53 13 3l1.53 1.53a3.5 3.5 0 0 1 0 4.94L13 11l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z"
      }
    ],
    [
      "path",
      {
        "d": "M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z"
      }
    ],
    [
      "path",
      {
        "d": "M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z"
      }
    ],
    [
      "path",
      {
        "d": "M15.47 13.47 17 15l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z"
      }
    ],
    [
      "path",
      {
        "d": "M19.47 9.47 21 11l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L13 11l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wheat" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wheat, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wheat);

// node_modules/lucide-svelte/dist/icons/whole-word.svelte
mark_module_start();
Whole_word[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/whole-word.svelte";
function Whole_word($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Whole_word);
  const iconNode = [
    [
      "circle",
      { "cx": "7", "cy": "12", "r": "3" }
    ],
    ["path", { "d": "M10 9v6" }],
    [
      "circle",
      { "cx": "17", "cy": "12", "r": "3" }
    ],
    ["path", { "d": "M14 7v8" }],
    [
      "path",
      {
        "d": "M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "whole-word" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Whole_word, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Whole_word);

// node_modules/lucide-svelte/dist/icons/wifi-high.svelte
mark_module_start();
Wifi_high[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wifi-high.svelte";
function Wifi_high($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wifi_high);
  const iconNode = [
    ["path", { "d": "M12 20h.01" }],
    [
      "path",
      { "d": "M5 12.859a10 10 0 0 1 14 0" }
    ],
    [
      "path",
      { "d": "M8.5 16.429a5 5 0 0 1 7 0" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wifi-high" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wifi_high, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wifi_high);

// node_modules/lucide-svelte/dist/icons/wifi-low.svelte
mark_module_start();
Wifi_low[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wifi-low.svelte";
function Wifi_low($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wifi_low);
  const iconNode = [
    ["path", { "d": "M12 20h.01" }],
    [
      "path",
      { "d": "M8.5 16.429a5 5 0 0 1 7 0" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wifi-low" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wifi_low, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wifi_low);

// node_modules/lucide-svelte/dist/icons/wifi-off.svelte
mark_module_start();
Wifi_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wifi-off.svelte";
function Wifi_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wifi_off);
  const iconNode = [
    ["path", { "d": "M12 20h.01" }],
    [
      "path",
      { "d": "M8.5 16.429a5 5 0 0 1 7 0" }
    ],
    [
      "path",
      { "d": "M5 12.859a10 10 0 0 1 5.17-2.69" }
    ],
    [
      "path",
      { "d": "M19 12.859a10 10 0 0 0-2.007-1.523" }
    ],
    [
      "path",
      { "d": "M2 8.82a15 15 0 0 1 4.177-2.643" }
    ],
    [
      "path",
      { "d": "M22 8.82a15 15 0 0 0-11.288-3.764" }
    ],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "wifi-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wifi_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wifi_off);

// node_modules/lucide-svelte/dist/icons/wifi-zero.svelte
mark_module_start();
Wifi_zero[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wifi-zero.svelte";
function Wifi_zero($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wifi_zero);
  const iconNode = [["path", { "d": "M12 20h.01" }]];
  Icon($$anchor, spread_props({ name: "wifi-zero" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wifi_zero, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wifi_zero);

// node_modules/lucide-svelte/dist/icons/wifi.svelte
mark_module_start();
Wifi[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wifi.svelte";
function Wifi($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wifi);
  const iconNode = [
    ["path", { "d": "M12 20h.01" }],
    ["path", { "d": "M2 8.82a15 15 0 0 1 20 0" }],
    [
      "path",
      { "d": "M5 12.859a10 10 0 0 1 14 0" }
    ],
    [
      "path",
      { "d": "M8.5 16.429a5 5 0 0 1 7 0" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wifi" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wifi, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wifi);

// node_modules/lucide-svelte/dist/icons/wind-arrow-down.svelte
mark_module_start();
Wind_arrow_down[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wind-arrow-down.svelte";
function Wind_arrow_down($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wind_arrow_down);
  const iconNode = [
    ["path", { "d": "M10 2v8" }],
    [
      "path",
      { "d": "M12.8 21.6A2 2 0 1 0 14 18H2" }
    ],
    [
      "path",
      { "d": "M17.5 10a2.5 2.5 0 1 1 2 4H2" }
    ],
    ["path", { "d": "m6 6 4 4 4-4" }]
  ];
  Icon($$anchor, spread_props({ name: "wind-arrow-down" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wind_arrow_down, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wind_arrow_down);

// node_modules/lucide-svelte/dist/icons/wind.svelte
mark_module_start();
Wind[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wind.svelte";
function Wind($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wind);
  const iconNode = [
    [
      "path",
      { "d": "M12.8 19.6A2 2 0 1 0 14 16H2" }
    ],
    [
      "path",
      { "d": "M17.5 8a2.5 2.5 0 1 1 2 4H2" }
    ],
    [
      "path",
      { "d": "M9.8 4.4A2 2 0 1 1 11 8H2" }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wind" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wind, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wind);

// node_modules/lucide-svelte/dist/icons/wine-off.svelte
mark_module_start();
Wine_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wine-off.svelte";
function Wine_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wine_off);
  const iconNode = [
    ["path", { "d": "M8 22h8" }],
    ["path", { "d": "M7 10h3m7 0h-1.343" }],
    ["path", { "d": "M12 15v7" }],
    [
      "path",
      {
        "d": "M7.307 7.307A12.33 12.33 0 0 0 7 10a5 5 0 0 0 7.391 4.391M8.638 2.981C8.75 2.668 8.872 2.34 9 2h6c1.5 4 2 6 2 8 0 .407-.05.809-.145 1.198"
      }
    ],
    [
      "line",
      {
        "x1": "2",
        "x2": "22",
        "y1": "2",
        "y2": "22"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wine-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wine_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wine_off);

// node_modules/lucide-svelte/dist/icons/wine.svelte
mark_module_start();
Wine[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wine.svelte";
function Wine($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wine);
  const iconNode = [
    ["path", { "d": "M8 22h8" }],
    ["path", { "d": "M7 10h10" }],
    ["path", { "d": "M12 15v7" }],
    [
      "path",
      {
        "d": "M12 15a5 5 0 0 0 5-5c0-2-.5-4-2-8H9c-1.5 4-2 6-2 8a5 5 0 0 0 5 5Z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wine" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wine, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wine);

// node_modules/lucide-svelte/dist/icons/workflow.svelte
mark_module_start();
Workflow[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/workflow.svelte";
function Workflow($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Workflow);
  const iconNode = [
    [
      "rect",
      {
        "width": "8",
        "height": "8",
        "x": "3",
        "y": "3",
        "rx": "2"
      }
    ],
    ["path", { "d": "M7 11v4a2 2 0 0 0 2 2h4" }],
    [
      "rect",
      {
        "width": "8",
        "height": "8",
        "x": "13",
        "y": "13",
        "rx": "2"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "workflow" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Workflow, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Workflow);

// node_modules/lucide-svelte/dist/icons/worm.svelte
mark_module_start();
Worm[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/worm.svelte";
function Worm($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Worm);
  const iconNode = [
    ["path", { "d": "m19 12-1.5 3" }],
    ["path", { "d": "M19.63 18.81 22 20" }],
    [
      "path",
      {
        "d": "M6.47 8.23a1.68 1.68 0 0 1 2.44 1.93l-.64 2.08a6.76 6.76 0 0 0 10.16 7.67l.42-.27a1 1 0 1 0-2.73-4.21l-.42.27a1.76 1.76 0 0 1-2.63-1.99l.64-2.08A6.66 6.66 0 0 0 3.94 3.9l-.7.4a1 1 0 1 0 2.55 4.34z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "worm" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Worm, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Worm);

// node_modules/lucide-svelte/dist/icons/wrap-text.svelte
mark_module_start();
Wrap_text[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wrap-text.svelte";
function Wrap_text($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wrap_text);
  const iconNode = [
    [
      "line",
      { "x1": "3", "x2": "21", "y1": "6", "y2": "6" }
    ],
    [
      "path",
      { "d": "M3 12h15a3 3 0 1 1 0 6h-4" }
    ],
    [
      "polyline",
      { "points": "16 16 14 18 16 20" }
    ],
    [
      "line",
      {
        "x1": "3",
        "x2": "10",
        "y1": "18",
        "y2": "18"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wrap-text" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wrap_text, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wrap_text);

// node_modules/lucide-svelte/dist/icons/wrench.svelte
mark_module_start();
Wrench[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/wrench.svelte";
function Wrench($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Wrench);
  const iconNode = [
    [
      "path",
      {
        "d": "M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "wrench" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Wrench, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Wrench);

// node_modules/lucide-svelte/dist/icons/x.svelte
mark_module_start();
X[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/x.svelte";
function X($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, X);
  const iconNode = [
    ["path", { "d": "M18 6 6 18" }],
    ["path", { "d": "m6 6 12 12" }]
  ];
  Icon($$anchor, spread_props({ name: "x" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(X, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(X);

// node_modules/lucide-svelte/dist/icons/youtube.svelte
mark_module_start();
Youtube[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/youtube.svelte";
function Youtube($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Youtube);
  const iconNode = [
    [
      "path",
      {
        "d": "M2.5 17a24.12 24.12 0 0 1 0-10 2 2 0 0 1 1.4-1.4 49.56 49.56 0 0 1 16.2 0A2 2 0 0 1 21.5 7a24.12 24.12 0 0 1 0 10 2 2 0 0 1-1.4 1.4 49.55 49.55 0 0 1-16.2 0A2 2 0 0 1 2.5 17"
      }
    ],
    ["path", { "d": "m10 15 5-3-5-3z" }]
  ];
  Icon($$anchor, spread_props({ name: "youtube" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Youtube, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Youtube);

// node_modules/lucide-svelte/dist/icons/zap-off.svelte
mark_module_start();
Zap_off[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/zap-off.svelte";
function Zap_off($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Zap_off);
  const iconNode = [
    [
      "path",
      {
        "d": "M10.513 4.856 13.12 2.17a.5.5 0 0 1 .86.46l-1.377 4.317"
      }
    ],
    [
      "path",
      {
        "d": "M15.656 10H20a1 1 0 0 1 .78 1.63l-1.72 1.773"
      }
    ],
    [
      "path",
      {
        "d": "M16.273 16.273 10.88 21.83a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14H4a1 1 0 0 1-.78-1.63l4.507-4.643"
      }
    ],
    ["path", { "d": "m2 2 20 20" }]
  ];
  Icon($$anchor, spread_props({ name: "zap-off" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Zap_off, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Zap_off);

// node_modules/lucide-svelte/dist/icons/zap.svelte
mark_module_start();
Zap[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/zap.svelte";
function Zap($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Zap);
  const iconNode = [
    [
      "path",
      {
        "d": "M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "zap" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Zap, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Zap);

// node_modules/lucide-svelte/dist/icons/zoom-in.svelte
mark_module_start();
Zoom_in[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/zoom-in.svelte";
function Zoom_in($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Zoom_in);
  const iconNode = [
    [
      "circle",
      { "cx": "11", "cy": "11", "r": "8" }
    ],
    [
      "line",
      {
        "x1": "21",
        "x2": "16.65",
        "y1": "21",
        "y2": "16.65"
      }
    ],
    [
      "line",
      {
        "x1": "11",
        "x2": "11",
        "y1": "8",
        "y2": "14"
      }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "14",
        "y1": "11",
        "y2": "11"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "zoom-in" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Zoom_in, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Zoom_in);

// node_modules/lucide-svelte/dist/icons/zoom-out.svelte
mark_module_start();
Zoom_out[FILENAME] = "C:/Users/daniecja/Downloads/Echava/Code/Git/astro_vs_spring/project-a/node_modules/lucide-svelte/dist/icons/zoom-out.svelte";
function Zoom_out($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Zoom_out);
  const iconNode = [
    [
      "circle",
      { "cx": "11", "cy": "11", "r": "8" }
    ],
    [
      "line",
      {
        "x1": "21",
        "x2": "16.65",
        "y1": "21",
        "y2": "16.65"
      }
    ],
    [
      "line",
      {
        "x1": "8",
        "x2": "14",
        "y1": "11",
        "y2": "11"
      }
    ]
  ];
  Icon($$anchor, spread_props({ name: "zoom-out" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Zoom_out, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Zoom_out);
export {
  A_arrow_down as AArrowDown,
  A_arrow_down as AArrowDownIcon,
  A_arrow_up as AArrowUp,
  A_arrow_up as AArrowUpIcon,
  A_large_small as ALargeSmall,
  A_large_small as ALargeSmallIcon,
  Accessibility,
  Accessibility as AccessibilityIcon,
  Activity,
  Activity as ActivityIcon,
  Square_activity as ActivitySquare,
  Square_activity as ActivitySquareIcon,
  Air_vent as AirVent,
  Air_vent as AirVentIcon,
  Airplay,
  Airplay as AirplayIcon,
  Alarm_clock_check as AlarmCheck,
  Alarm_clock_check as AlarmCheckIcon,
  Alarm_clock as AlarmClock,
  Alarm_clock_check as AlarmClockCheck,
  Alarm_clock_check as AlarmClockCheckIcon,
  Alarm_clock as AlarmClockIcon,
  Alarm_clock_minus as AlarmClockMinus,
  Alarm_clock_minus as AlarmClockMinusIcon,
  Alarm_clock_off as AlarmClockOff,
  Alarm_clock_off as AlarmClockOffIcon,
  Alarm_clock_plus as AlarmClockPlus,
  Alarm_clock_plus as AlarmClockPlusIcon,
  Alarm_clock_minus as AlarmMinus,
  Alarm_clock_minus as AlarmMinusIcon,
  Alarm_clock_plus as AlarmPlus,
  Alarm_clock_plus as AlarmPlusIcon,
  Alarm_smoke as AlarmSmoke,
  Alarm_smoke as AlarmSmokeIcon,
  Album,
  Album as AlbumIcon,
  Circle_alert as AlertCircle,
  Circle_alert as AlertCircleIcon,
  Octagon_alert as AlertOctagon,
  Octagon_alert as AlertOctagonIcon,
  Triangle_alert as AlertTriangle,
  Triangle_alert as AlertTriangleIcon,
  Align_center as AlignCenter,
  Align_center_horizontal as AlignCenterHorizontal,
  Align_center_horizontal as AlignCenterHorizontalIcon,
  Align_center as AlignCenterIcon,
  Align_center_vertical as AlignCenterVertical,
  Align_center_vertical as AlignCenterVerticalIcon,
  Align_end_horizontal as AlignEndHorizontal,
  Align_end_horizontal as AlignEndHorizontalIcon,
  Align_end_vertical as AlignEndVertical,
  Align_end_vertical as AlignEndVerticalIcon,
  Align_horizontal_distribute_center as AlignHorizontalDistributeCenter,
  Align_horizontal_distribute_center as AlignHorizontalDistributeCenterIcon,
  Align_horizontal_distribute_end as AlignHorizontalDistributeEnd,
  Align_horizontal_distribute_end as AlignHorizontalDistributeEndIcon,
  Align_horizontal_distribute_start as AlignHorizontalDistributeStart,
  Align_horizontal_distribute_start as AlignHorizontalDistributeStartIcon,
  Align_horizontal_justify_center as AlignHorizontalJustifyCenter,
  Align_horizontal_justify_center as AlignHorizontalJustifyCenterIcon,
  Align_horizontal_justify_end as AlignHorizontalJustifyEnd,
  Align_horizontal_justify_end as AlignHorizontalJustifyEndIcon,
  Align_horizontal_justify_start as AlignHorizontalJustifyStart,
  Align_horizontal_justify_start as AlignHorizontalJustifyStartIcon,
  Align_horizontal_space_around as AlignHorizontalSpaceAround,
  Align_horizontal_space_around as AlignHorizontalSpaceAroundIcon,
  Align_horizontal_space_between as AlignHorizontalSpaceBetween,
  Align_horizontal_space_between as AlignHorizontalSpaceBetweenIcon,
  Align_justify as AlignJustify,
  Align_justify as AlignJustifyIcon,
  Align_left as AlignLeft,
  Align_left as AlignLeftIcon,
  Align_right as AlignRight,
  Align_right as AlignRightIcon,
  Align_start_horizontal as AlignStartHorizontal,
  Align_start_horizontal as AlignStartHorizontalIcon,
  Align_start_vertical as AlignStartVertical,
  Align_start_vertical as AlignStartVerticalIcon,
  Align_vertical_distribute_center as AlignVerticalDistributeCenter,
  Align_vertical_distribute_center as AlignVerticalDistributeCenterIcon,
  Align_vertical_distribute_end as AlignVerticalDistributeEnd,
  Align_vertical_distribute_end as AlignVerticalDistributeEndIcon,
  Align_vertical_distribute_start as AlignVerticalDistributeStart,
  Align_vertical_distribute_start as AlignVerticalDistributeStartIcon,
  Align_vertical_justify_center as AlignVerticalJustifyCenter,
  Align_vertical_justify_center as AlignVerticalJustifyCenterIcon,
  Align_vertical_justify_end as AlignVerticalJustifyEnd,
  Align_vertical_justify_end as AlignVerticalJustifyEndIcon,
  Align_vertical_justify_start as AlignVerticalJustifyStart,
  Align_vertical_justify_start as AlignVerticalJustifyStartIcon,
  Align_vertical_space_around as AlignVerticalSpaceAround,
  Align_vertical_space_around as AlignVerticalSpaceAroundIcon,
  Align_vertical_space_between as AlignVerticalSpaceBetween,
  Align_vertical_space_between as AlignVerticalSpaceBetweenIcon,
  Ambulance,
  Ambulance as AmbulanceIcon,
  Ampersand,
  Ampersand as AmpersandIcon,
  Ampersands,
  Ampersands as AmpersandsIcon,
  Amphora,
  Amphora as AmphoraIcon,
  Anchor,
  Anchor as AnchorIcon,
  Angry,
  Angry as AngryIcon,
  Annoyed,
  Annoyed as AnnoyedIcon,
  Antenna,
  Antenna as AntennaIcon,
  Anvil,
  Anvil as AnvilIcon,
  Aperture,
  Aperture as ApertureIcon,
  App_window as AppWindow,
  App_window as AppWindowIcon,
  App_window_mac as AppWindowMac,
  App_window_mac as AppWindowMacIcon,
  Apple,
  Apple as AppleIcon,
  Archive,
  Archive as ArchiveIcon,
  Archive_restore as ArchiveRestore,
  Archive_restore as ArchiveRestoreIcon,
  Archive_x as ArchiveX,
  Archive_x as ArchiveXIcon,
  Chart_area as AreaChart,
  Chart_area as AreaChartIcon,
  Armchair,
  Armchair as ArmchairIcon,
  Arrow_big_down as ArrowBigDown,
  Arrow_big_down_dash as ArrowBigDownDash,
  Arrow_big_down_dash as ArrowBigDownDashIcon,
  Arrow_big_down as ArrowBigDownIcon,
  Arrow_big_left as ArrowBigLeft,
  Arrow_big_left_dash as ArrowBigLeftDash,
  Arrow_big_left_dash as ArrowBigLeftDashIcon,
  Arrow_big_left as ArrowBigLeftIcon,
  Arrow_big_right as ArrowBigRight,
  Arrow_big_right_dash as ArrowBigRightDash,
  Arrow_big_right_dash as ArrowBigRightDashIcon,
  Arrow_big_right as ArrowBigRightIcon,
  Arrow_big_up as ArrowBigUp,
  Arrow_big_up_dash as ArrowBigUpDash,
  Arrow_big_up_dash as ArrowBigUpDashIcon,
  Arrow_big_up as ArrowBigUpIcon,
  Arrow_down as ArrowDown,
  Arrow_down_0_1 as ArrowDown01,
  Arrow_down_0_1 as ArrowDown01Icon,
  Arrow_down_1_0 as ArrowDown10,
  Arrow_down_1_0 as ArrowDown10Icon,
  Arrow_down_a_z as ArrowDownAZ,
  Arrow_down_a_z as ArrowDownAZIcon,
  Arrow_down_a_z as ArrowDownAz,
  Arrow_down_a_z as ArrowDownAzIcon,
  Circle_arrow_down as ArrowDownCircle,
  Circle_arrow_down as ArrowDownCircleIcon,
  Arrow_down_from_line as ArrowDownFromLine,
  Arrow_down_from_line as ArrowDownFromLineIcon,
  Arrow_down as ArrowDownIcon,
  Arrow_down_left as ArrowDownLeft,
  Circle_arrow_out_down_left as ArrowDownLeftFromCircle,
  Circle_arrow_out_down_left as ArrowDownLeftFromCircleIcon,
  Square_arrow_out_down_left as ArrowDownLeftFromSquare,
  Square_arrow_out_down_left as ArrowDownLeftFromSquareIcon,
  Arrow_down_left as ArrowDownLeftIcon,
  Square_arrow_down_left as ArrowDownLeftSquare,
  Square_arrow_down_left as ArrowDownLeftSquareIcon,
  Arrow_down_narrow_wide as ArrowDownNarrowWide,
  Arrow_down_narrow_wide as ArrowDownNarrowWideIcon,
  Arrow_down_right as ArrowDownRight,
  Circle_arrow_out_down_right as ArrowDownRightFromCircle,
  Circle_arrow_out_down_right as ArrowDownRightFromCircleIcon,
  Square_arrow_out_down_right as ArrowDownRightFromSquare,
  Square_arrow_out_down_right as ArrowDownRightFromSquareIcon,
  Arrow_down_right as ArrowDownRightIcon,
  Square_arrow_down_right as ArrowDownRightSquare,
  Square_arrow_down_right as ArrowDownRightSquareIcon,
  Square_arrow_down as ArrowDownSquare,
  Square_arrow_down as ArrowDownSquareIcon,
  Arrow_down_to_dot as ArrowDownToDot,
  Arrow_down_to_dot as ArrowDownToDotIcon,
  Arrow_down_to_line as ArrowDownToLine,
  Arrow_down_to_line as ArrowDownToLineIcon,
  Arrow_down_up as ArrowDownUp,
  Arrow_down_up as ArrowDownUpIcon,
  Arrow_down_wide_narrow as ArrowDownWideNarrow,
  Arrow_down_wide_narrow as ArrowDownWideNarrowIcon,
  Arrow_down_z_a as ArrowDownZA,
  Arrow_down_z_a as ArrowDownZAIcon,
  Arrow_down_z_a as ArrowDownZa,
  Arrow_down_z_a as ArrowDownZaIcon,
  Arrow_left as ArrowLeft,
  Circle_arrow_left as ArrowLeftCircle,
  Circle_arrow_left as ArrowLeftCircleIcon,
  Arrow_left_from_line as ArrowLeftFromLine,
  Arrow_left_from_line as ArrowLeftFromLineIcon,
  Arrow_left as ArrowLeftIcon,
  Arrow_left_right as ArrowLeftRight,
  Arrow_left_right as ArrowLeftRightIcon,
  Square_arrow_left as ArrowLeftSquare,
  Square_arrow_left as ArrowLeftSquareIcon,
  Arrow_left_to_line as ArrowLeftToLine,
  Arrow_left_to_line as ArrowLeftToLineIcon,
  Arrow_right as ArrowRight,
  Circle_arrow_right as ArrowRightCircle,
  Circle_arrow_right as ArrowRightCircleIcon,
  Arrow_right_from_line as ArrowRightFromLine,
  Arrow_right_from_line as ArrowRightFromLineIcon,
  Arrow_right as ArrowRightIcon,
  Arrow_right_left as ArrowRightLeft,
  Arrow_right_left as ArrowRightLeftIcon,
  Square_arrow_right as ArrowRightSquare,
  Square_arrow_right as ArrowRightSquareIcon,
  Arrow_right_to_line as ArrowRightToLine,
  Arrow_right_to_line as ArrowRightToLineIcon,
  Arrow_up as ArrowUp,
  Arrow_up_0_1 as ArrowUp01,
  Arrow_up_0_1 as ArrowUp01Icon,
  Arrow_up_1_0 as ArrowUp10,
  Arrow_up_1_0 as ArrowUp10Icon,
  Arrow_up_a_z as ArrowUpAZ,
  Arrow_up_a_z as ArrowUpAZIcon,
  Arrow_up_a_z as ArrowUpAz,
  Arrow_up_a_z as ArrowUpAzIcon,
  Circle_arrow_up as ArrowUpCircle,
  Circle_arrow_up as ArrowUpCircleIcon,
  Arrow_up_down as ArrowUpDown,
  Arrow_up_down as ArrowUpDownIcon,
  Arrow_up_from_dot as ArrowUpFromDot,
  Arrow_up_from_dot as ArrowUpFromDotIcon,
  Arrow_up_from_line as ArrowUpFromLine,
  Arrow_up_from_line as ArrowUpFromLineIcon,
  Arrow_up as ArrowUpIcon,
  Arrow_up_left as ArrowUpLeft,
  Circle_arrow_out_up_left as ArrowUpLeftFromCircle,
  Circle_arrow_out_up_left as ArrowUpLeftFromCircleIcon,
  Square_arrow_out_up_left as ArrowUpLeftFromSquare,
  Square_arrow_out_up_left as ArrowUpLeftFromSquareIcon,
  Arrow_up_left as ArrowUpLeftIcon,
  Square_arrow_up_left as ArrowUpLeftSquare,
  Square_arrow_up_left as ArrowUpLeftSquareIcon,
  Arrow_up_narrow_wide as ArrowUpNarrowWide,
  Arrow_up_narrow_wide as ArrowUpNarrowWideIcon,
  Arrow_up_right as ArrowUpRight,
  Circle_arrow_out_up_right as ArrowUpRightFromCircle,
  Circle_arrow_out_up_right as ArrowUpRightFromCircleIcon,
  Square_arrow_out_up_right as ArrowUpRightFromSquare,
  Square_arrow_out_up_right as ArrowUpRightFromSquareIcon,
  Arrow_up_right as ArrowUpRightIcon,
  Square_arrow_up_right as ArrowUpRightSquare,
  Square_arrow_up_right as ArrowUpRightSquareIcon,
  Square_arrow_up as ArrowUpSquare,
  Square_arrow_up as ArrowUpSquareIcon,
  Arrow_up_to_line as ArrowUpToLine,
  Arrow_up_to_line as ArrowUpToLineIcon,
  Arrow_up_wide_narrow as ArrowUpWideNarrow,
  Arrow_up_wide_narrow as ArrowUpWideNarrowIcon,
  Arrow_up_z_a as ArrowUpZA,
  Arrow_up_z_a as ArrowUpZAIcon,
  Arrow_up_z_a as ArrowUpZa,
  Arrow_up_z_a as ArrowUpZaIcon,
  Arrows_up_from_line as ArrowsUpFromLine,
  Arrows_up_from_line as ArrowsUpFromLineIcon,
  Asterisk,
  Asterisk as AsteriskIcon,
  Square_asterisk as AsteriskSquare,
  Square_asterisk as AsteriskSquareIcon,
  At_sign as AtSign,
  At_sign as AtSignIcon,
  Atom,
  Atom as AtomIcon,
  Audio_lines as AudioLines,
  Audio_lines as AudioLinesIcon,
  Audio_waveform as AudioWaveform,
  Audio_waveform as AudioWaveformIcon,
  Award,
  Award as AwardIcon,
  Axe,
  Axe as AxeIcon,
  Axis_3d as Axis3D,
  Axis_3d as Axis3DIcon,
  Axis_3d as Axis3d,
  Axis_3d as Axis3dIcon,
  Baby,
  Baby as BabyIcon,
  Backpack,
  Backpack as BackpackIcon,
  Badge,
  Badge_alert as BadgeAlert,
  Badge_alert as BadgeAlertIcon,
  Badge_cent as BadgeCent,
  Badge_cent as BadgeCentIcon,
  Badge_check as BadgeCheck,
  Badge_check as BadgeCheckIcon,
  Badge_dollar_sign as BadgeDollarSign,
  Badge_dollar_sign as BadgeDollarSignIcon,
  Badge_euro as BadgeEuro,
  Badge_euro as BadgeEuroIcon,
  Badge_help as BadgeHelp,
  Badge_help as BadgeHelpIcon,
  Badge as BadgeIcon,
  Badge_indian_rupee as BadgeIndianRupee,
  Badge_indian_rupee as BadgeIndianRupeeIcon,
  Badge_info as BadgeInfo,
  Badge_info as BadgeInfoIcon,
  Badge_japanese_yen as BadgeJapaneseYen,
  Badge_japanese_yen as BadgeJapaneseYenIcon,
  Badge_minus as BadgeMinus,
  Badge_minus as BadgeMinusIcon,
  Badge_percent as BadgePercent,
  Badge_percent as BadgePercentIcon,
  Badge_plus as BadgePlus,
  Badge_plus as BadgePlusIcon,
  Badge_pound_sterling as BadgePoundSterling,
  Badge_pound_sterling as BadgePoundSterlingIcon,
  Badge_russian_ruble as BadgeRussianRuble,
  Badge_russian_ruble as BadgeRussianRubleIcon,
  Badge_swiss_franc as BadgeSwissFranc,
  Badge_swiss_franc as BadgeSwissFrancIcon,
  Badge_x as BadgeX,
  Badge_x as BadgeXIcon,
  Baggage_claim as BaggageClaim,
  Baggage_claim as BaggageClaimIcon,
  Ban,
  Ban as BanIcon,
  Banana,
  Banana as BananaIcon,
  Bandage,
  Bandage as BandageIcon,
  Banknote,
  Banknote as BanknoteIcon,
  Chart_no_axes_column_increasing as BarChart,
  Chart_no_axes_column as BarChart2,
  Chart_no_axes_column as BarChart2Icon,
  Chart_column as BarChart3,
  Chart_column as BarChart3Icon,
  Chart_column_increasing as BarChart4,
  Chart_column_increasing as BarChart4Icon,
  Chart_column_big as BarChartBig,
  Chart_column_big as BarChartBigIcon,
  Chart_bar as BarChartHorizontal,
  Chart_bar_big as BarChartHorizontalBig,
  Chart_bar_big as BarChartHorizontalBigIcon,
  Chart_bar as BarChartHorizontalIcon,
  Chart_no_axes_column_increasing as BarChartIcon,
  Barcode,
  Barcode as BarcodeIcon,
  Baseline,
  Baseline as BaselineIcon,
  Bath,
  Bath as BathIcon,
  Battery,
  Battery_charging as BatteryCharging,
  Battery_charging as BatteryChargingIcon,
  Battery_full as BatteryFull,
  Battery_full as BatteryFullIcon,
  Battery as BatteryIcon,
  Battery_low as BatteryLow,
  Battery_low as BatteryLowIcon,
  Battery_medium as BatteryMedium,
  Battery_medium as BatteryMediumIcon,
  Battery_warning as BatteryWarning,
  Battery_warning as BatteryWarningIcon,
  Beaker,
  Beaker as BeakerIcon,
  Bean,
  Bean as BeanIcon,
  Bean_off as BeanOff,
  Bean_off as BeanOffIcon,
  Bed,
  Bed_double as BedDouble,
  Bed_double as BedDoubleIcon,
  Bed as BedIcon,
  Bed_single as BedSingle,
  Bed_single as BedSingleIcon,
  Beef,
  Beef as BeefIcon,
  Beer,
  Beer as BeerIcon,
  Beer_off as BeerOff,
  Beer_off as BeerOffIcon,
  Bell,
  Bell_dot as BellDot,
  Bell_dot as BellDotIcon,
  Bell_electric as BellElectric,
  Bell_electric as BellElectricIcon,
  Bell as BellIcon,
  Bell_minus as BellMinus,
  Bell_minus as BellMinusIcon,
  Bell_off as BellOff,
  Bell_off as BellOffIcon,
  Bell_plus as BellPlus,
  Bell_plus as BellPlusIcon,
  Bell_ring as BellRing,
  Bell_ring as BellRingIcon,
  Between_horizontal_end as BetweenHorizonalEnd,
  Between_horizontal_end as BetweenHorizonalEndIcon,
  Between_horizontal_start as BetweenHorizonalStart,
  Between_horizontal_start as BetweenHorizonalStartIcon,
  Between_horizontal_end as BetweenHorizontalEnd,
  Between_horizontal_end as BetweenHorizontalEndIcon,
  Between_horizontal_start as BetweenHorizontalStart,
  Between_horizontal_start as BetweenHorizontalStartIcon,
  Between_vertical_end as BetweenVerticalEnd,
  Between_vertical_end as BetweenVerticalEndIcon,
  Between_vertical_start as BetweenVerticalStart,
  Between_vertical_start as BetweenVerticalStartIcon,
  Biceps_flexed as BicepsFlexed,
  Biceps_flexed as BicepsFlexedIcon,
  Bike,
  Bike as BikeIcon,
  Binary,
  Binary as BinaryIcon,
  Binoculars,
  Binoculars as BinocularsIcon,
  Biohazard,
  Biohazard as BiohazardIcon,
  Bird,
  Bird as BirdIcon,
  Bitcoin,
  Bitcoin as BitcoinIcon,
  Blend,
  Blend as BlendIcon,
  Blinds,
  Blinds as BlindsIcon,
  Blocks,
  Blocks as BlocksIcon,
  Bluetooth,
  Bluetooth_connected as BluetoothConnected,
  Bluetooth_connected as BluetoothConnectedIcon,
  Bluetooth as BluetoothIcon,
  Bluetooth_off as BluetoothOff,
  Bluetooth_off as BluetoothOffIcon,
  Bluetooth_searching as BluetoothSearching,
  Bluetooth_searching as BluetoothSearchingIcon,
  Bold,
  Bold as BoldIcon,
  Bolt,
  Bolt as BoltIcon,
  Bomb,
  Bomb as BombIcon,
  Bone,
  Bone as BoneIcon,
  Book,
  Book_a as BookA,
  Book_a as BookAIcon,
  Book_audio as BookAudio,
  Book_audio as BookAudioIcon,
  Book_check as BookCheck,
  Book_check as BookCheckIcon,
  Book_copy as BookCopy,
  Book_copy as BookCopyIcon,
  Book_dashed as BookDashed,
  Book_dashed as BookDashedIcon,
  Book_down as BookDown,
  Book_down as BookDownIcon,
  Book_headphones as BookHeadphones,
  Book_headphones as BookHeadphonesIcon,
  Book_heart as BookHeart,
  Book_heart as BookHeartIcon,
  Book as BookIcon,
  Book_image as BookImage,
  Book_image as BookImageIcon,
  Book_key as BookKey,
  Book_key as BookKeyIcon,
  Book_lock as BookLock,
  Book_lock as BookLockIcon,
  Book_marked as BookMarked,
  Book_marked as BookMarkedIcon,
  Book_minus as BookMinus,
  Book_minus as BookMinusIcon,
  Book_open as BookOpen,
  Book_open_check as BookOpenCheck,
  Book_open_check as BookOpenCheckIcon,
  Book_open as BookOpenIcon,
  Book_open_text as BookOpenText,
  Book_open_text as BookOpenTextIcon,
  Book_plus as BookPlus,
  Book_plus as BookPlusIcon,
  Book_dashed as BookTemplate,
  Book_dashed as BookTemplateIcon,
  Book_text as BookText,
  Book_text as BookTextIcon,
  Book_type as BookType,
  Book_type as BookTypeIcon,
  Book_up as BookUp,
  Book_up_2 as BookUp2,
  Book_up_2 as BookUp2Icon,
  Book_up as BookUpIcon,
  Book_user as BookUser,
  Book_user as BookUserIcon,
  Book_x as BookX,
  Book_x as BookXIcon,
  Bookmark,
  Bookmark_check as BookmarkCheck,
  Bookmark_check as BookmarkCheckIcon,
  Bookmark as BookmarkIcon,
  Bookmark_minus as BookmarkMinus,
  Bookmark_minus as BookmarkMinusIcon,
  Bookmark_plus as BookmarkPlus,
  Bookmark_plus as BookmarkPlusIcon,
  Bookmark_x as BookmarkX,
  Bookmark_x as BookmarkXIcon,
  Boom_box as BoomBox,
  Boom_box as BoomBoxIcon,
  Bot,
  Bot as BotIcon,
  Bot_message_square as BotMessageSquare,
  Bot_message_square as BotMessageSquareIcon,
  Bot_off as BotOff,
  Bot_off as BotOffIcon,
  Box,
  Box as BoxIcon,
  Square_dashed as BoxSelect,
  Square_dashed as BoxSelectIcon,
  Boxes,
  Boxes as BoxesIcon,
  Braces,
  Braces as BracesIcon,
  Brackets,
  Brackets as BracketsIcon,
  Brain,
  Brain_circuit as BrainCircuit,
  Brain_circuit as BrainCircuitIcon,
  Brain_cog as BrainCog,
  Brain_cog as BrainCogIcon,
  Brain as BrainIcon,
  Brick_wall as BrickWall,
  Brick_wall as BrickWallIcon,
  Briefcase,
  Briefcase_business as BriefcaseBusiness,
  Briefcase_business as BriefcaseBusinessIcon,
  Briefcase_conveyor_belt as BriefcaseConveyorBelt,
  Briefcase_conveyor_belt as BriefcaseConveyorBeltIcon,
  Briefcase as BriefcaseIcon,
  Briefcase_medical as BriefcaseMedical,
  Briefcase_medical as BriefcaseMedicalIcon,
  Bring_to_front as BringToFront,
  Bring_to_front as BringToFrontIcon,
  Brush,
  Brush as BrushIcon,
  Bug,
  Bug as BugIcon,
  Bug_off as BugOff,
  Bug_off as BugOffIcon,
  Bug_play as BugPlay,
  Bug_play as BugPlayIcon,
  Building,
  Building_2 as Building2,
  Building_2 as Building2Icon,
  Building as BuildingIcon,
  Bus,
  Bus_front as BusFront,
  Bus_front as BusFrontIcon,
  Bus as BusIcon,
  Cable,
  Cable_car as CableCar,
  Cable_car as CableCarIcon,
  Cable as CableIcon,
  Cake,
  Cake as CakeIcon,
  Cake_slice as CakeSlice,
  Cake_slice as CakeSliceIcon,
  Calculator,
  Calculator as CalculatorIcon,
  Calendar,
  Calendar_1 as Calendar1,
  Calendar_1 as Calendar1Icon,
  Calendar_arrow_down as CalendarArrowDown,
  Calendar_arrow_down as CalendarArrowDownIcon,
  Calendar_arrow_up as CalendarArrowUp,
  Calendar_arrow_up as CalendarArrowUpIcon,
  Calendar_check as CalendarCheck,
  Calendar_check_2 as CalendarCheck2,
  Calendar_check_2 as CalendarCheck2Icon,
  Calendar_check as CalendarCheckIcon,
  Calendar_clock as CalendarClock,
  Calendar_clock as CalendarClockIcon,
  Calendar_cog as CalendarCog,
  Calendar_cog as CalendarCogIcon,
  Calendar_days as CalendarDays,
  Calendar_days as CalendarDaysIcon,
  Calendar_fold as CalendarFold,
  Calendar_fold as CalendarFoldIcon,
  Calendar_heart as CalendarHeart,
  Calendar_heart as CalendarHeartIcon,
  Calendar as CalendarIcon,
  Calendar_minus as CalendarMinus,
  Calendar_minus_2 as CalendarMinus2,
  Calendar_minus_2 as CalendarMinus2Icon,
  Calendar_minus as CalendarMinusIcon,
  Calendar_off as CalendarOff,
  Calendar_off as CalendarOffIcon,
  Calendar_plus as CalendarPlus,
  Calendar_plus_2 as CalendarPlus2,
  Calendar_plus_2 as CalendarPlus2Icon,
  Calendar_plus as CalendarPlusIcon,
  Calendar_range as CalendarRange,
  Calendar_range as CalendarRangeIcon,
  Calendar_search as CalendarSearch,
  Calendar_search as CalendarSearchIcon,
  Calendar_x as CalendarX,
  Calendar_x_2 as CalendarX2,
  Calendar_x_2 as CalendarX2Icon,
  Calendar_x as CalendarXIcon,
  Camera,
  Camera as CameraIcon,
  Camera_off as CameraOff,
  Camera_off as CameraOffIcon,
  Chart_candlestick as CandlestickChart,
  Chart_candlestick as CandlestickChartIcon,
  Candy,
  Candy_cane as CandyCane,
  Candy_cane as CandyCaneIcon,
  Candy as CandyIcon,
  Candy_off as CandyOff,
  Candy_off as CandyOffIcon,
  Cannabis,
  Cannabis as CannabisIcon,
  Captions,
  Captions as CaptionsIcon,
  Captions_off as CaptionsOff,
  Captions_off as CaptionsOffIcon,
  Car,
  Car_front as CarFront,
  Car_front as CarFrontIcon,
  Car as CarIcon,
  Car_taxi_front as CarTaxiFront,
  Car_taxi_front as CarTaxiFrontIcon,
  Caravan,
  Caravan as CaravanIcon,
  Carrot,
  Carrot as CarrotIcon,
  Case_lower as CaseLower,
  Case_lower as CaseLowerIcon,
  Case_sensitive as CaseSensitive,
  Case_sensitive as CaseSensitiveIcon,
  Case_upper as CaseUpper,
  Case_upper as CaseUpperIcon,
  Cassette_tape as CassetteTape,
  Cassette_tape as CassetteTapeIcon,
  Cast,
  Cast as CastIcon,
  Castle,
  Castle as CastleIcon,
  Cat,
  Cat as CatIcon,
  Cctv,
  Cctv as CctvIcon,
  Chart_area as ChartArea,
  Chart_area as ChartAreaIcon,
  Chart_bar as ChartBar,
  Chart_bar_big as ChartBarBig,
  Chart_bar_big as ChartBarBigIcon,
  Chart_bar_decreasing as ChartBarDecreasing,
  Chart_bar_decreasing as ChartBarDecreasingIcon,
  Chart_bar as ChartBarIcon,
  Chart_bar_increasing as ChartBarIncreasing,
  Chart_bar_increasing as ChartBarIncreasingIcon,
  Chart_bar_stacked as ChartBarStacked,
  Chart_bar_stacked as ChartBarStackedIcon,
  Chart_candlestick as ChartCandlestick,
  Chart_candlestick as ChartCandlestickIcon,
  Chart_column as ChartColumn,
  Chart_column_big as ChartColumnBig,
  Chart_column_big as ChartColumnBigIcon,
  Chart_column_decreasing as ChartColumnDecreasing,
  Chart_column_decreasing as ChartColumnDecreasingIcon,
  Chart_column as ChartColumnIcon,
  Chart_column_increasing as ChartColumnIncreasing,
  Chart_column_increasing as ChartColumnIncreasingIcon,
  Chart_column_stacked as ChartColumnStacked,
  Chart_column_stacked as ChartColumnStackedIcon,
  Chart_gantt as ChartGantt,
  Chart_gantt as ChartGanttIcon,
  Chart_line as ChartLine,
  Chart_line as ChartLineIcon,
  Chart_network as ChartNetwork,
  Chart_network as ChartNetworkIcon,
  Chart_no_axes_column as ChartNoAxesColumn,
  Chart_no_axes_column_decreasing as ChartNoAxesColumnDecreasing,
  Chart_no_axes_column_decreasing as ChartNoAxesColumnDecreasingIcon,
  Chart_no_axes_column as ChartNoAxesColumnIcon,
  Chart_no_axes_column_increasing as ChartNoAxesColumnIncreasing,
  Chart_no_axes_column_increasing as ChartNoAxesColumnIncreasingIcon,
  Chart_no_axes_combined as ChartNoAxesCombined,
  Chart_no_axes_combined as ChartNoAxesCombinedIcon,
  Chart_no_axes_gantt as ChartNoAxesGantt,
  Chart_no_axes_gantt as ChartNoAxesGanttIcon,
  Chart_pie as ChartPie,
  Chart_pie as ChartPieIcon,
  Chart_scatter as ChartScatter,
  Chart_scatter as ChartScatterIcon,
  Chart_spline as ChartSpline,
  Chart_spline as ChartSplineIcon,
  Check,
  Check_check as CheckCheck,
  Check_check as CheckCheckIcon,
  Circle_check_big as CheckCircle,
  Circle_check as CheckCircle2,
  Circle_check as CheckCircle2Icon,
  Circle_check_big as CheckCircleIcon,
  Check as CheckIcon,
  Square_check_big as CheckSquare,
  Square_check as CheckSquare2,
  Square_check as CheckSquare2Icon,
  Square_check_big as CheckSquareIcon,
  Chef_hat as ChefHat,
  Chef_hat as ChefHatIcon,
  Cherry,
  Cherry as CherryIcon,
  Chevron_down as ChevronDown,
  Circle_chevron_down as ChevronDownCircle,
  Circle_chevron_down as ChevronDownCircleIcon,
  Chevron_down as ChevronDownIcon,
  Square_chevron_down as ChevronDownSquare,
  Square_chevron_down as ChevronDownSquareIcon,
  Chevron_first as ChevronFirst,
  Chevron_first as ChevronFirstIcon,
  Chevron_last as ChevronLast,
  Chevron_last as ChevronLastIcon,
  Chevron_left as ChevronLeft,
  Circle_chevron_left as ChevronLeftCircle,
  Circle_chevron_left as ChevronLeftCircleIcon,
  Chevron_left as ChevronLeftIcon,
  Square_chevron_left as ChevronLeftSquare,
  Square_chevron_left as ChevronLeftSquareIcon,
  Chevron_right as ChevronRight,
  Circle_chevron_right as ChevronRightCircle,
  Circle_chevron_right as ChevronRightCircleIcon,
  Chevron_right as ChevronRightIcon,
  Square_chevron_right as ChevronRightSquare,
  Square_chevron_right as ChevronRightSquareIcon,
  Chevron_up as ChevronUp,
  Circle_chevron_up as ChevronUpCircle,
  Circle_chevron_up as ChevronUpCircleIcon,
  Chevron_up as ChevronUpIcon,
  Square_chevron_up as ChevronUpSquare,
  Square_chevron_up as ChevronUpSquareIcon,
  Chevrons_down as ChevronsDown,
  Chevrons_down as ChevronsDownIcon,
  Chevrons_down_up as ChevronsDownUp,
  Chevrons_down_up as ChevronsDownUpIcon,
  Chevrons_left as ChevronsLeft,
  Chevrons_left as ChevronsLeftIcon,
  Chevrons_left_right as ChevronsLeftRight,
  Chevrons_left_right_ellipsis as ChevronsLeftRightEllipsis,
  Chevrons_left_right_ellipsis as ChevronsLeftRightEllipsisIcon,
  Chevrons_left_right as ChevronsLeftRightIcon,
  Chevrons_right as ChevronsRight,
  Chevrons_right as ChevronsRightIcon,
  Chevrons_right_left as ChevronsRightLeft,
  Chevrons_right_left as ChevronsRightLeftIcon,
  Chevrons_up as ChevronsUp,
  Chevrons_up_down as ChevronsUpDown,
  Chevrons_up_down as ChevronsUpDownIcon,
  Chevrons_up as ChevronsUpIcon,
  Chrome,
  Chrome as ChromeIcon,
  Church,
  Church as ChurchIcon,
  Cigarette,
  Cigarette as CigaretteIcon,
  Cigarette_off as CigaretteOff,
  Cigarette_off as CigaretteOffIcon,
  Circle,
  Circle_alert as CircleAlert,
  Circle_alert as CircleAlertIcon,
  Circle_arrow_down as CircleArrowDown,
  Circle_arrow_down as CircleArrowDownIcon,
  Circle_arrow_left as CircleArrowLeft,
  Circle_arrow_left as CircleArrowLeftIcon,
  Circle_arrow_out_down_left as CircleArrowOutDownLeft,
  Circle_arrow_out_down_left as CircleArrowOutDownLeftIcon,
  Circle_arrow_out_down_right as CircleArrowOutDownRight,
  Circle_arrow_out_down_right as CircleArrowOutDownRightIcon,
  Circle_arrow_out_up_left as CircleArrowOutUpLeft,
  Circle_arrow_out_up_left as CircleArrowOutUpLeftIcon,
  Circle_arrow_out_up_right as CircleArrowOutUpRight,
  Circle_arrow_out_up_right as CircleArrowOutUpRightIcon,
  Circle_arrow_right as CircleArrowRight,
  Circle_arrow_right as CircleArrowRightIcon,
  Circle_arrow_up as CircleArrowUp,
  Circle_arrow_up as CircleArrowUpIcon,
  Circle_check as CircleCheck,
  Circle_check_big as CircleCheckBig,
  Circle_check_big as CircleCheckBigIcon,
  Circle_check as CircleCheckIcon,
  Circle_chevron_down as CircleChevronDown,
  Circle_chevron_down as CircleChevronDownIcon,
  Circle_chevron_left as CircleChevronLeft,
  Circle_chevron_left as CircleChevronLeftIcon,
  Circle_chevron_right as CircleChevronRight,
  Circle_chevron_right as CircleChevronRightIcon,
  Circle_chevron_up as CircleChevronUp,
  Circle_chevron_up as CircleChevronUpIcon,
  Circle_dashed as CircleDashed,
  Circle_dashed as CircleDashedIcon,
  Circle_divide as CircleDivide,
  Circle_divide as CircleDivideIcon,
  Circle_dollar_sign as CircleDollarSign,
  Circle_dollar_sign as CircleDollarSignIcon,
  Circle_dot as CircleDot,
  Circle_dot_dashed as CircleDotDashed,
  Circle_dot_dashed as CircleDotDashedIcon,
  Circle_dot as CircleDotIcon,
  Circle_ellipsis as CircleEllipsis,
  Circle_ellipsis as CircleEllipsisIcon,
  Circle_equal as CircleEqual,
  Circle_equal as CircleEqualIcon,
  Circle_fading_arrow_up as CircleFadingArrowUp,
  Circle_fading_arrow_up as CircleFadingArrowUpIcon,
  Circle_fading_plus as CircleFadingPlus,
  Circle_fading_plus as CircleFadingPlusIcon,
  Circle_gauge as CircleGauge,
  Circle_gauge as CircleGaugeIcon,
  Circle_help as CircleHelp,
  Circle_help as CircleHelpIcon,
  Circle as CircleIcon,
  Circle_minus as CircleMinus,
  Circle_minus as CircleMinusIcon,
  Circle_off as CircleOff,
  Circle_off as CircleOffIcon,
  Circle_parking as CircleParking,
  Circle_parking as CircleParkingIcon,
  Circle_parking_off as CircleParkingOff,
  Circle_parking_off as CircleParkingOffIcon,
  Circle_pause as CirclePause,
  Circle_pause as CirclePauseIcon,
  Circle_percent as CirclePercent,
  Circle_percent as CirclePercentIcon,
  Circle_play as CirclePlay,
  Circle_play as CirclePlayIcon,
  Circle_plus as CirclePlus,
  Circle_plus as CirclePlusIcon,
  Circle_power as CirclePower,
  Circle_power as CirclePowerIcon,
  Circle_slash as CircleSlash,
  Circle_slash_2 as CircleSlash2,
  Circle_slash_2 as CircleSlash2Icon,
  Circle_slash as CircleSlashIcon,
  Circle_slash_2 as CircleSlashed,
  Circle_slash_2 as CircleSlashedIcon,
  Circle_stop as CircleStop,
  Circle_stop as CircleStopIcon,
  Circle_user as CircleUser,
  Circle_user as CircleUserIcon,
  Circle_user_round as CircleUserRound,
  Circle_user_round as CircleUserRoundIcon,
  Circle_x as CircleX,
  Circle_x as CircleXIcon,
  Circuit_board as CircuitBoard,
  Circuit_board as CircuitBoardIcon,
  Citrus,
  Citrus as CitrusIcon,
  Clapperboard,
  Clapperboard as ClapperboardIcon,
  Clipboard,
  Clipboard_check as ClipboardCheck,
  Clipboard_check as ClipboardCheckIcon,
  Clipboard_copy as ClipboardCopy,
  Clipboard_copy as ClipboardCopyIcon,
  Clipboard_pen as ClipboardEdit,
  Clipboard_pen as ClipboardEditIcon,
  Clipboard as ClipboardIcon,
  Clipboard_list as ClipboardList,
  Clipboard_list as ClipboardListIcon,
  Clipboard_minus as ClipboardMinus,
  Clipboard_minus as ClipboardMinusIcon,
  Clipboard_paste as ClipboardPaste,
  Clipboard_paste as ClipboardPasteIcon,
  Clipboard_pen as ClipboardPen,
  Clipboard_pen as ClipboardPenIcon,
  Clipboard_pen_line as ClipboardPenLine,
  Clipboard_pen_line as ClipboardPenLineIcon,
  Clipboard_plus as ClipboardPlus,
  Clipboard_plus as ClipboardPlusIcon,
  Clipboard_pen_line as ClipboardSignature,
  Clipboard_pen_line as ClipboardSignatureIcon,
  Clipboard_type as ClipboardType,
  Clipboard_type as ClipboardTypeIcon,
  Clipboard_x as ClipboardX,
  Clipboard_x as ClipboardXIcon,
  Clock,
  Clock_1 as Clock1,
  Clock_10 as Clock10,
  Clock_10 as Clock10Icon,
  Clock_11 as Clock11,
  Clock_11 as Clock11Icon,
  Clock_12 as Clock12,
  Clock_12 as Clock12Icon,
  Clock_1 as Clock1Icon,
  Clock_2 as Clock2,
  Clock_2 as Clock2Icon,
  Clock_3 as Clock3,
  Clock_3 as Clock3Icon,
  Clock_4 as Clock4,
  Clock_4 as Clock4Icon,
  Clock_5 as Clock5,
  Clock_5 as Clock5Icon,
  Clock_6 as Clock6,
  Clock_6 as Clock6Icon,
  Clock_7 as Clock7,
  Clock_7 as Clock7Icon,
  Clock_8 as Clock8,
  Clock_8 as Clock8Icon,
  Clock_9 as Clock9,
  Clock_9 as Clock9Icon,
  Clock_alert as ClockAlert,
  Clock_alert as ClockAlertIcon,
  Clock_arrow_down as ClockArrowDown,
  Clock_arrow_down as ClockArrowDownIcon,
  Clock_arrow_up as ClockArrowUp,
  Clock_arrow_up as ClockArrowUpIcon,
  Clock as ClockIcon,
  Cloud,
  Cloud_cog as CloudCog,
  Cloud_cog as CloudCogIcon,
  Cloud_download as CloudDownload,
  Cloud_download as CloudDownloadIcon,
  Cloud_drizzle as CloudDrizzle,
  Cloud_drizzle as CloudDrizzleIcon,
  Cloud_fog as CloudFog,
  Cloud_fog as CloudFogIcon,
  Cloud_hail as CloudHail,
  Cloud_hail as CloudHailIcon,
  Cloud as CloudIcon,
  Cloud_lightning as CloudLightning,
  Cloud_lightning as CloudLightningIcon,
  Cloud_moon as CloudMoon,
  Cloud_moon as CloudMoonIcon,
  Cloud_moon_rain as CloudMoonRain,
  Cloud_moon_rain as CloudMoonRainIcon,
  Cloud_off as CloudOff,
  Cloud_off as CloudOffIcon,
  Cloud_rain as CloudRain,
  Cloud_rain as CloudRainIcon,
  Cloud_rain_wind as CloudRainWind,
  Cloud_rain_wind as CloudRainWindIcon,
  Cloud_snow as CloudSnow,
  Cloud_snow as CloudSnowIcon,
  Cloud_sun as CloudSun,
  Cloud_sun as CloudSunIcon,
  Cloud_sun_rain as CloudSunRain,
  Cloud_sun_rain as CloudSunRainIcon,
  Cloud_upload as CloudUpload,
  Cloud_upload as CloudUploadIcon,
  Cloudy,
  Cloudy as CloudyIcon,
  Clover,
  Clover as CloverIcon,
  Club,
  Club as ClubIcon,
  Code,
  Code_xml as Code2,
  Code_xml as Code2Icon,
  Code as CodeIcon,
  Square_code as CodeSquare,
  Square_code as CodeSquareIcon,
  Code_xml as CodeXml,
  Code_xml as CodeXmlIcon,
  Codepen,
  Codepen as CodepenIcon,
  Codesandbox,
  Codesandbox as CodesandboxIcon,
  Coffee,
  Coffee as CoffeeIcon,
  Cog,
  Cog as CogIcon,
  Coins,
  Coins as CoinsIcon,
  Columns_2 as Columns,
  Columns_2 as Columns2,
  Columns_2 as Columns2Icon,
  Columns_3 as Columns3,
  Columns_3 as Columns3Icon,
  Columns_4 as Columns4,
  Columns_4 as Columns4Icon,
  Columns_2 as ColumnsIcon,
  Combine,
  Combine as CombineIcon,
  Command,
  Command as CommandIcon,
  Compass,
  Compass as CompassIcon,
  Component,
  Component as ComponentIcon,
  Computer,
  Computer as ComputerIcon,
  Concierge_bell as ConciergeBell,
  Concierge_bell as ConciergeBellIcon,
  Cone,
  Cone as ConeIcon,
  Construction,
  Construction as ConstructionIcon,
  Contact,
  Contact_round as Contact2,
  Contact_round as Contact2Icon,
  Contact as ContactIcon,
  Contact_round as ContactRound,
  Contact_round as ContactRoundIcon,
  Container,
  Container as ContainerIcon,
  Contrast,
  Contrast as ContrastIcon,
  Cookie,
  Cookie as CookieIcon,
  Cooking_pot as CookingPot,
  Cooking_pot as CookingPotIcon,
  Copy,
  Copy_check as CopyCheck,
  Copy_check as CopyCheckIcon,
  Copy as CopyIcon,
  Copy_minus as CopyMinus,
  Copy_minus as CopyMinusIcon,
  Copy_plus as CopyPlus,
  Copy_plus as CopyPlusIcon,
  Copy_slash as CopySlash,
  Copy_slash as CopySlashIcon,
  Copy_x as CopyX,
  Copy_x as CopyXIcon,
  Copyleft,
  Copyleft as CopyleftIcon,
  Copyright,
  Copyright as CopyrightIcon,
  Corner_down_left as CornerDownLeft,
  Corner_down_left as CornerDownLeftIcon,
  Corner_down_right as CornerDownRight,
  Corner_down_right as CornerDownRightIcon,
  Corner_left_down as CornerLeftDown,
  Corner_left_down as CornerLeftDownIcon,
  Corner_left_up as CornerLeftUp,
  Corner_left_up as CornerLeftUpIcon,
  Corner_right_down as CornerRightDown,
  Corner_right_down as CornerRightDownIcon,
  Corner_right_up as CornerRightUp,
  Corner_right_up as CornerRightUpIcon,
  Corner_up_left as CornerUpLeft,
  Corner_up_left as CornerUpLeftIcon,
  Corner_up_right as CornerUpRight,
  Corner_up_right as CornerUpRightIcon,
  Cpu,
  Cpu as CpuIcon,
  Creative_commons as CreativeCommons,
  Creative_commons as CreativeCommonsIcon,
  Credit_card as CreditCard,
  Credit_card as CreditCardIcon,
  Croissant,
  Croissant as CroissantIcon,
  Crop,
  Crop as CropIcon,
  Cross,
  Cross as CrossIcon,
  Crosshair,
  Crosshair as CrosshairIcon,
  Crown,
  Crown as CrownIcon,
  Cuboid,
  Cuboid as CuboidIcon,
  Cup_soda as CupSoda,
  Cup_soda as CupSodaIcon,
  Braces as CurlyBraces,
  Braces as CurlyBracesIcon,
  Currency,
  Currency as CurrencyIcon,
  Cylinder,
  Cylinder as CylinderIcon,
  Dam,
  Dam as DamIcon,
  Database,
  Database_backup as DatabaseBackup,
  Database_backup as DatabaseBackupIcon,
  Database as DatabaseIcon,
  Database_zap as DatabaseZap,
  Database_zap as DatabaseZapIcon,
  Delete,
  Delete as DeleteIcon,
  Dessert,
  Dessert as DessertIcon,
  Diameter,
  Diameter as DiameterIcon,
  Diamond,
  Diamond as DiamondIcon,
  Diamond_minus as DiamondMinus,
  Diamond_minus as DiamondMinusIcon,
  Diamond_percent as DiamondPercent,
  Diamond_percent as DiamondPercentIcon,
  Diamond_plus as DiamondPlus,
  Diamond_plus as DiamondPlusIcon,
  Dice_1 as Dice1,
  Dice_1 as Dice1Icon,
  Dice_2 as Dice2,
  Dice_2 as Dice2Icon,
  Dice_3 as Dice3,
  Dice_3 as Dice3Icon,
  Dice_4 as Dice4,
  Dice_4 as Dice4Icon,
  Dice_5 as Dice5,
  Dice_5 as Dice5Icon,
  Dice_6 as Dice6,
  Dice_6 as Dice6Icon,
  Dices,
  Dices as DicesIcon,
  Diff,
  Diff as DiffIcon,
  Disc,
  Disc_2 as Disc2,
  Disc_2 as Disc2Icon,
  Disc_3 as Disc3,
  Disc_3 as Disc3Icon,
  Disc_album as DiscAlbum,
  Disc_album as DiscAlbumIcon,
  Disc as DiscIcon,
  Divide,
  Circle_divide as DivideCircle,
  Circle_divide as DivideCircleIcon,
  Divide as DivideIcon,
  Square_divide as DivideSquare,
  Square_divide as DivideSquareIcon,
  Dna,
  Dna as DnaIcon,
  Dna_off as DnaOff,
  Dna_off as DnaOffIcon,
  Dock,
  Dock as DockIcon,
  Dog,
  Dog as DogIcon,
  Dollar_sign as DollarSign,
  Dollar_sign as DollarSignIcon,
  Donut,
  Donut as DonutIcon,
  Door_closed as DoorClosed,
  Door_closed as DoorClosedIcon,
  Door_open as DoorOpen,
  Door_open as DoorOpenIcon,
  Dot,
  Dot as DotIcon,
  Square_dot as DotSquare,
  Square_dot as DotSquareIcon,
  Download,
  Cloud_download as DownloadCloud,
  Cloud_download as DownloadCloudIcon,
  Download as DownloadIcon,
  Drafting_compass as DraftingCompass,
  Drafting_compass as DraftingCompassIcon,
  Drama,
  Drama as DramaIcon,
  Dribbble,
  Dribbble as DribbbleIcon,
  Drill,
  Drill as DrillIcon,
  Droplet,
  Droplet as DropletIcon,
  Droplets,
  Droplets as DropletsIcon,
  Drum,
  Drum as DrumIcon,
  Drumstick,
  Drumstick as DrumstickIcon,
  Dumbbell,
  Dumbbell as DumbbellIcon,
  Ear,
  Ear as EarIcon,
  Ear_off as EarOff,
  Ear_off as EarOffIcon,
  Earth,
  Earth as EarthIcon,
  Earth_lock as EarthLock,
  Earth_lock as EarthLockIcon,
  Eclipse,
  Eclipse as EclipseIcon,
  Square_pen as Edit,
  Pen as Edit2,
  Pen as Edit2Icon,
  Pen_line as Edit3,
  Pen_line as Edit3Icon,
  Square_pen as EditIcon,
  Egg,
  Egg_fried as EggFried,
  Egg_fried as EggFriedIcon,
  Egg as EggIcon,
  Egg_off as EggOff,
  Egg_off as EggOffIcon,
  Ellipsis,
  Ellipsis as EllipsisIcon,
  Ellipsis_vertical as EllipsisVertical,
  Ellipsis_vertical as EllipsisVerticalIcon,
  Equal,
  Equal as EqualIcon,
  Equal_not as EqualNot,
  Equal_not as EqualNotIcon,
  Square_equal as EqualSquare,
  Square_equal as EqualSquareIcon,
  Eraser,
  Eraser as EraserIcon,
  Ethernet_port as EthernetPort,
  Ethernet_port as EthernetPortIcon,
  Euro,
  Euro as EuroIcon,
  Expand,
  Expand as ExpandIcon,
  External_link as ExternalLink,
  External_link as ExternalLinkIcon,
  Eye,
  Eye_closed as EyeClosed,
  Eye_closed as EyeClosedIcon,
  Eye as EyeIcon,
  Eye_off as EyeOff,
  Eye_off as EyeOffIcon,
  Facebook,
  Facebook as FacebookIcon,
  Factory,
  Factory as FactoryIcon,
  Fan,
  Fan as FanIcon,
  Fast_forward as FastForward,
  Fast_forward as FastForwardIcon,
  Feather,
  Feather as FeatherIcon,
  Fence,
  Fence as FenceIcon,
  Ferris_wheel as FerrisWheel,
  Ferris_wheel as FerrisWheelIcon,
  Figma,
  Figma as FigmaIcon,
  File,
  File_archive as FileArchive,
  File_archive as FileArchiveIcon,
  File_audio as FileAudio,
  File_audio_2 as FileAudio2,
  File_audio_2 as FileAudio2Icon,
  File_audio as FileAudioIcon,
  File_axis_3d as FileAxis3D,
  File_axis_3d as FileAxis3DIcon,
  File_axis_3d as FileAxis3d,
  File_axis_3d as FileAxis3dIcon,
  File_badge as FileBadge,
  File_badge_2 as FileBadge2,
  File_badge_2 as FileBadge2Icon,
  File_badge as FileBadgeIcon,
  File_chart_column_increasing as FileBarChart,
  File_chart_column as FileBarChart2,
  File_chart_column as FileBarChart2Icon,
  File_chart_column_increasing as FileBarChartIcon,
  File_box as FileBox,
  File_box as FileBoxIcon,
  File_chart_column as FileChartColumn,
  File_chart_column as FileChartColumnIcon,
  File_chart_column_increasing as FileChartColumnIncreasing,
  File_chart_column_increasing as FileChartColumnIncreasingIcon,
  File_chart_line as FileChartLine,
  File_chart_line as FileChartLineIcon,
  File_chart_pie as FileChartPie,
  File_chart_pie as FileChartPieIcon,
  File_check as FileCheck,
  File_check_2 as FileCheck2,
  File_check_2 as FileCheck2Icon,
  File_check as FileCheckIcon,
  File_clock as FileClock,
  File_clock as FileClockIcon,
  File_code as FileCode,
  File_code_2 as FileCode2,
  File_code_2 as FileCode2Icon,
  File_code as FileCodeIcon,
  File_cog as FileCog,
  File_cog as FileCog2,
  File_cog as FileCog2Icon,
  File_cog as FileCogIcon,
  File_diff as FileDiff,
  File_diff as FileDiffIcon,
  File_digit as FileDigit,
  File_digit as FileDigitIcon,
  File_down as FileDown,
  File_down as FileDownIcon,
  File_pen as FileEdit,
  File_pen as FileEditIcon,
  File_heart as FileHeart,
  File_heart as FileHeartIcon,
  File as FileIcon,
  File_image as FileImage,
  File_image as FileImageIcon,
  File_input as FileInput,
  File_input as FileInputIcon,
  File_json as FileJson,
  File_json_2 as FileJson2,
  File_json_2 as FileJson2Icon,
  File_json as FileJsonIcon,
  File_key as FileKey,
  File_key_2 as FileKey2,
  File_key_2 as FileKey2Icon,
  File_key as FileKeyIcon,
  File_chart_line as FileLineChart,
  File_chart_line as FileLineChartIcon,
  File_lock as FileLock,
  File_lock_2 as FileLock2,
  File_lock_2 as FileLock2Icon,
  File_lock as FileLockIcon,
  File_minus as FileMinus,
  File_minus_2 as FileMinus2,
  File_minus_2 as FileMinus2Icon,
  File_minus as FileMinusIcon,
  File_music as FileMusic,
  File_music as FileMusicIcon,
  File_output as FileOutput,
  File_output as FileOutputIcon,
  File_pen as FilePen,
  File_pen as FilePenIcon,
  File_pen_line as FilePenLine,
  File_pen_line as FilePenLineIcon,
  File_chart_pie as FilePieChart,
  File_chart_pie as FilePieChartIcon,
  File_plus as FilePlus,
  File_plus_2 as FilePlus2,
  File_plus_2 as FilePlus2Icon,
  File_plus as FilePlusIcon,
  File_question as FileQuestion,
  File_question as FileQuestionIcon,
  File_scan as FileScan,
  File_scan as FileScanIcon,
  File_search as FileSearch,
  File_search_2 as FileSearch2,
  File_search_2 as FileSearch2Icon,
  File_search as FileSearchIcon,
  File_pen_line as FileSignature,
  File_pen_line as FileSignatureIcon,
  File_sliders as FileSliders,
  File_sliders as FileSlidersIcon,
  File_spreadsheet as FileSpreadsheet,
  File_spreadsheet as FileSpreadsheetIcon,
  File_stack as FileStack,
  File_stack as FileStackIcon,
  File_symlink as FileSymlink,
  File_symlink as FileSymlinkIcon,
  File_terminal as FileTerminal,
  File_terminal as FileTerminalIcon,
  File_text as FileText,
  File_text as FileTextIcon,
  File_type as FileType,
  File_type_2 as FileType2,
  File_type_2 as FileType2Icon,
  File_type as FileTypeIcon,
  File_up as FileUp,
  File_up as FileUpIcon,
  File_user as FileUser,
  File_user as FileUserIcon,
  File_video as FileVideo,
  File_video_2 as FileVideo2,
  File_video_2 as FileVideo2Icon,
  File_video as FileVideoIcon,
  File_volume as FileVolume,
  File_volume_2 as FileVolume2,
  File_volume_2 as FileVolume2Icon,
  File_volume as FileVolumeIcon,
  File_warning as FileWarning,
  File_warning as FileWarningIcon,
  File_x as FileX,
  File_x_2 as FileX2,
  File_x_2 as FileX2Icon,
  File_x as FileXIcon,
  Files,
  Files as FilesIcon,
  Film,
  Film as FilmIcon,
  Filter,
  Filter as FilterIcon,
  Filter_x as FilterX,
  Filter_x as FilterXIcon,
  Fingerprint,
  Fingerprint as FingerprintIcon,
  Fire_extinguisher as FireExtinguisher,
  Fire_extinguisher as FireExtinguisherIcon,
  Fish,
  Fish as FishIcon,
  Fish_off as FishOff,
  Fish_off as FishOffIcon,
  Fish_symbol as FishSymbol,
  Fish_symbol as FishSymbolIcon,
  Flag,
  Flag as FlagIcon,
  Flag_off as FlagOff,
  Flag_off as FlagOffIcon,
  Flag_triangle_left as FlagTriangleLeft,
  Flag_triangle_left as FlagTriangleLeftIcon,
  Flag_triangle_right as FlagTriangleRight,
  Flag_triangle_right as FlagTriangleRightIcon,
  Flame,
  Flame as FlameIcon,
  Flame_kindling as FlameKindling,
  Flame_kindling as FlameKindlingIcon,
  Flashlight,
  Flashlight as FlashlightIcon,
  Flashlight_off as FlashlightOff,
  Flashlight_off as FlashlightOffIcon,
  Flask_conical as FlaskConical,
  Flask_conical as FlaskConicalIcon,
  Flask_conical_off as FlaskConicalOff,
  Flask_conical_off as FlaskConicalOffIcon,
  Flask_round as FlaskRound,
  Flask_round as FlaskRoundIcon,
  Flip_horizontal as FlipHorizontal,
  Flip_horizontal_2 as FlipHorizontal2,
  Flip_horizontal_2 as FlipHorizontal2Icon,
  Flip_horizontal as FlipHorizontalIcon,
  Flip_vertical as FlipVertical,
  Flip_vertical_2 as FlipVertical2,
  Flip_vertical_2 as FlipVertical2Icon,
  Flip_vertical as FlipVerticalIcon,
  Flower,
  Flower_2 as Flower2,
  Flower_2 as Flower2Icon,
  Flower as FlowerIcon,
  Focus,
  Focus as FocusIcon,
  Fold_horizontal as FoldHorizontal,
  Fold_horizontal as FoldHorizontalIcon,
  Fold_vertical as FoldVertical,
  Fold_vertical as FoldVerticalIcon,
  Folder,
  Folder_archive as FolderArchive,
  Folder_archive as FolderArchiveIcon,
  Folder_check as FolderCheck,
  Folder_check as FolderCheckIcon,
  Folder_clock as FolderClock,
  Folder_clock as FolderClockIcon,
  Folder_closed as FolderClosed,
  Folder_closed as FolderClosedIcon,
  Folder_code as FolderCode,
  Folder_code as FolderCodeIcon,
  Folder_cog as FolderCog,
  Folder_cog as FolderCog2,
  Folder_cog as FolderCog2Icon,
  Folder_cog as FolderCogIcon,
  Folder_dot as FolderDot,
  Folder_dot as FolderDotIcon,
  Folder_down as FolderDown,
  Folder_down as FolderDownIcon,
  Folder_pen as FolderEdit,
  Folder_pen as FolderEditIcon,
  Folder_git as FolderGit,
  Folder_git_2 as FolderGit2,
  Folder_git_2 as FolderGit2Icon,
  Folder_git as FolderGitIcon,
  Folder_heart as FolderHeart,
  Folder_heart as FolderHeartIcon,
  Folder as FolderIcon,
  Folder_input as FolderInput,
  Folder_input as FolderInputIcon,
  Folder_kanban as FolderKanban,
  Folder_kanban as FolderKanbanIcon,
  Folder_key as FolderKey,
  Folder_key as FolderKeyIcon,
  Folder_lock as FolderLock,
  Folder_lock as FolderLockIcon,
  Folder_minus as FolderMinus,
  Folder_minus as FolderMinusIcon,
  Folder_open as FolderOpen,
  Folder_open_dot as FolderOpenDot,
  Folder_open_dot as FolderOpenDotIcon,
  Folder_open as FolderOpenIcon,
  Folder_output as FolderOutput,
  Folder_output as FolderOutputIcon,
  Folder_pen as FolderPen,
  Folder_pen as FolderPenIcon,
  Folder_plus as FolderPlus,
  Folder_plus as FolderPlusIcon,
  Folder_root as FolderRoot,
  Folder_root as FolderRootIcon,
  Folder_search as FolderSearch,
  Folder_search_2 as FolderSearch2,
  Folder_search_2 as FolderSearch2Icon,
  Folder_search as FolderSearchIcon,
  Folder_symlink as FolderSymlink,
  Folder_symlink as FolderSymlinkIcon,
  Folder_sync as FolderSync,
  Folder_sync as FolderSyncIcon,
  Folder_tree as FolderTree,
  Folder_tree as FolderTreeIcon,
  Folder_up as FolderUp,
  Folder_up as FolderUpIcon,
  Folder_x as FolderX,
  Folder_x as FolderXIcon,
  Folders,
  Folders as FoldersIcon,
  Footprints,
  Footprints as FootprintsIcon,
  Utensils as ForkKnife,
  Utensils_crossed as ForkKnifeCrossed,
  Utensils_crossed as ForkKnifeCrossedIcon,
  Utensils as ForkKnifeIcon,
  Forklift,
  Forklift as ForkliftIcon,
  Rectangle_ellipsis as FormInput,
  Rectangle_ellipsis as FormInputIcon,
  Forward,
  Forward as ForwardIcon,
  Frame,
  Frame as FrameIcon,
  Framer,
  Framer as FramerIcon,
  Frown,
  Frown as FrownIcon,
  Fuel,
  Fuel as FuelIcon,
  Fullscreen,
  Fullscreen as FullscreenIcon,
  Square_function as FunctionSquare,
  Square_function as FunctionSquareIcon,
  Gallery_horizontal as GalleryHorizontal,
  Gallery_horizontal_end as GalleryHorizontalEnd,
  Gallery_horizontal_end as GalleryHorizontalEndIcon,
  Gallery_horizontal as GalleryHorizontalIcon,
  Gallery_thumbnails as GalleryThumbnails,
  Gallery_thumbnails as GalleryThumbnailsIcon,
  Gallery_vertical as GalleryVertical,
  Gallery_vertical_end as GalleryVerticalEnd,
  Gallery_vertical_end as GalleryVerticalEndIcon,
  Gallery_vertical as GalleryVerticalIcon,
  Gamepad,
  Gamepad_2 as Gamepad2,
  Gamepad_2 as Gamepad2Icon,
  Gamepad as GamepadIcon,
  Chart_no_axes_gantt as GanttChart,
  Chart_no_axes_gantt as GanttChartIcon,
  Square_chart_gantt as GanttChartSquare,
  Square_chart_gantt as GanttChartSquareIcon,
  Gauge,
  Circle_gauge as GaugeCircle,
  Circle_gauge as GaugeCircleIcon,
  Gauge as GaugeIcon,
  Gavel,
  Gavel as GavelIcon,
  Gem,
  Gem as GemIcon,
  Ghost,
  Ghost as GhostIcon,
  Gift,
  Gift as GiftIcon,
  Git_branch as GitBranch,
  Git_branch as GitBranchIcon,
  Git_branch_plus as GitBranchPlus,
  Git_branch_plus as GitBranchPlusIcon,
  Git_commit_horizontal as GitCommit,
  Git_commit_horizontal as GitCommitHorizontal,
  Git_commit_horizontal as GitCommitHorizontalIcon,
  Git_commit_horizontal as GitCommitIcon,
  Git_commit_vertical as GitCommitVertical,
  Git_commit_vertical as GitCommitVerticalIcon,
  Git_compare as GitCompare,
  Git_compare_arrows as GitCompareArrows,
  Git_compare_arrows as GitCompareArrowsIcon,
  Git_compare as GitCompareIcon,
  Git_fork as GitFork,
  Git_fork as GitForkIcon,
  Git_graph as GitGraph,
  Git_graph as GitGraphIcon,
  Git_merge as GitMerge,
  Git_merge as GitMergeIcon,
  Git_pull_request as GitPullRequest,
  Git_pull_request_arrow as GitPullRequestArrow,
  Git_pull_request_arrow as GitPullRequestArrowIcon,
  Git_pull_request_closed as GitPullRequestClosed,
  Git_pull_request_closed as GitPullRequestClosedIcon,
  Git_pull_request_create as GitPullRequestCreate,
  Git_pull_request_create_arrow as GitPullRequestCreateArrow,
  Git_pull_request_create_arrow as GitPullRequestCreateArrowIcon,
  Git_pull_request_create as GitPullRequestCreateIcon,
  Git_pull_request_draft as GitPullRequestDraft,
  Git_pull_request_draft as GitPullRequestDraftIcon,
  Git_pull_request as GitPullRequestIcon,
  Github,
  Github as GithubIcon,
  Gitlab,
  Gitlab as GitlabIcon,
  Glass_water as GlassWater,
  Glass_water as GlassWaterIcon,
  Glasses,
  Glasses as GlassesIcon,
  Globe,
  Earth as Globe2,
  Earth as Globe2Icon,
  Globe as GlobeIcon,
  Globe_lock as GlobeLock,
  Globe_lock as GlobeLockIcon,
  Goal,
  Goal as GoalIcon,
  Grab,
  Grab as GrabIcon,
  Graduation_cap as GraduationCap,
  Graduation_cap as GraduationCapIcon,
  Grape,
  Grape as GrapeIcon,
  Grid_3x3 as Grid,
  Grid_2x2 as Grid2X2,
  Grid_2x2 as Grid2X2Icon,
  Grid_2x2_plus as Grid2X2Plus,
  Grid_2x2_plus as Grid2X2PlusIcon,
  Grid_2x2 as Grid2x2,
  Grid_2x2_check as Grid2x2Check,
  Grid_2x2_check as Grid2x2CheckIcon,
  Grid_2x2 as Grid2x2Icon,
  Grid_2x2_plus as Grid2x2Plus,
  Grid_2x2_plus as Grid2x2PlusIcon,
  Grid_2x2_x as Grid2x2X,
  Grid_2x2_x as Grid2x2XIcon,
  Grid_3x3 as Grid3X3,
  Grid_3x3 as Grid3X3Icon,
  Grid_3x3 as Grid3x3,
  Grid_3x3 as Grid3x3Icon,
  Grid_3x3 as GridIcon,
  Grip,
  Grip_horizontal as GripHorizontal,
  Grip_horizontal as GripHorizontalIcon,
  Grip as GripIcon,
  Grip_vertical as GripVertical,
  Grip_vertical as GripVerticalIcon,
  Group,
  Group as GroupIcon,
  Guitar,
  Guitar as GuitarIcon,
  Ham,
  Ham as HamIcon,
  Hammer,
  Hammer as HammerIcon,
  Hand,
  Hand_coins as HandCoins,
  Hand_coins as HandCoinsIcon,
  Hand_heart as HandHeart,
  Hand_heart as HandHeartIcon,
  Hand_helping as HandHelping,
  Hand_helping as HandHelpingIcon,
  Hand as HandIcon,
  Hand_metal as HandMetal,
  Hand_metal as HandMetalIcon,
  Hand_platter as HandPlatter,
  Hand_platter as HandPlatterIcon,
  Handshake,
  Handshake as HandshakeIcon,
  Hard_drive as HardDrive,
  Hard_drive_download as HardDriveDownload,
  Hard_drive_download as HardDriveDownloadIcon,
  Hard_drive as HardDriveIcon,
  Hard_drive_upload as HardDriveUpload,
  Hard_drive_upload as HardDriveUploadIcon,
  Hard_hat as HardHat,
  Hard_hat as HardHatIcon,
  Hash,
  Hash as HashIcon,
  Haze,
  Haze as HazeIcon,
  Hdmi_port as HdmiPort,
  Hdmi_port as HdmiPortIcon,
  Heading,
  Heading_1 as Heading1,
  Heading_1 as Heading1Icon,
  Heading_2 as Heading2,
  Heading_2 as Heading2Icon,
  Heading_3 as Heading3,
  Heading_3 as Heading3Icon,
  Heading_4 as Heading4,
  Heading_4 as Heading4Icon,
  Heading_5 as Heading5,
  Heading_5 as Heading5Icon,
  Heading_6 as Heading6,
  Heading_6 as Heading6Icon,
  Heading as HeadingIcon,
  Headphone_off as HeadphoneOff,
  Headphone_off as HeadphoneOffIcon,
  Headphones,
  Headphones as HeadphonesIcon,
  Headset,
  Headset as HeadsetIcon,
  Heart,
  Heart_crack as HeartCrack,
  Heart_crack as HeartCrackIcon,
  Heart_handshake as HeartHandshake,
  Heart_handshake as HeartHandshakeIcon,
  Heart as HeartIcon,
  Heart_off as HeartOff,
  Heart_off as HeartOffIcon,
  Heart_pulse as HeartPulse,
  Heart_pulse as HeartPulseIcon,
  Heater,
  Heater as HeaterIcon,
  Circle_help as HelpCircle,
  Circle_help as HelpCircleIcon,
  Hand_helping as HelpingHand,
  Hand_helping as HelpingHandIcon,
  Hexagon,
  Hexagon as HexagonIcon,
  Highlighter,
  Highlighter as HighlighterIcon,
  History,
  History as HistoryIcon,
  House as Home,
  House as HomeIcon,
  Hop,
  Hop as HopIcon,
  Hop_off as HopOff,
  Hop_off as HopOffIcon,
  Hospital,
  Hospital as HospitalIcon,
  Hotel,
  Hotel as HotelIcon,
  Hourglass,
  Hourglass as HourglassIcon,
  House,
  House as HouseIcon,
  House_plug as HousePlug,
  House_plug as HousePlugIcon,
  House_plus as HousePlus,
  House_plus as HousePlusIcon,
  Ice_cream_cone as IceCream,
  Ice_cream_bowl as IceCream2,
  Ice_cream_bowl as IceCream2Icon,
  Ice_cream_bowl as IceCreamBowl,
  Ice_cream_bowl as IceCreamBowlIcon,
  Ice_cream_cone as IceCreamCone,
  Ice_cream_cone as IceCreamConeIcon,
  Ice_cream_cone as IceCreamIcon,
  Icon,
  Id_card as IdCard,
  Id_card as IdCardIcon,
  Image,
  Image_down as ImageDown,
  Image_down as ImageDownIcon,
  Image as ImageIcon,
  Image_minus as ImageMinus,
  Image_minus as ImageMinusIcon,
  Image_off as ImageOff,
  Image_off as ImageOffIcon,
  Image_play as ImagePlay,
  Image_play as ImagePlayIcon,
  Image_plus as ImagePlus,
  Image_plus as ImagePlusIcon,
  Image_up as ImageUp,
  Image_up as ImageUpIcon,
  Images,
  Images as ImagesIcon,
  Import,
  Import as ImportIcon,
  Inbox,
  Inbox as InboxIcon,
  Indent_increase as Indent,
  Indent_decrease as IndentDecrease,
  Indent_decrease as IndentDecreaseIcon,
  Indent_increase as IndentIcon,
  Indent_increase as IndentIncrease,
  Indent_increase as IndentIncreaseIcon,
  Indian_rupee as IndianRupee,
  Indian_rupee as IndianRupeeIcon,
  Infinity,
  Infinity as InfinityIcon,
  Info,
  Info as InfoIcon,
  Square_mouse_pointer as Inspect,
  Square_mouse_pointer as InspectIcon,
  Inspection_panel as InspectionPanel,
  Inspection_panel as InspectionPanelIcon,
  Instagram,
  Instagram as InstagramIcon,
  Italic,
  Italic as ItalicIcon,
  Iteration_ccw as IterationCcw,
  Iteration_ccw as IterationCcwIcon,
  Iteration_cw as IterationCw,
  Iteration_cw as IterationCwIcon,
  Japanese_yen as JapaneseYen,
  Japanese_yen as JapaneseYenIcon,
  Joystick,
  Joystick as JoystickIcon,
  Kanban,
  Kanban as KanbanIcon,
  Square_kanban as KanbanSquare,
  Square_dashed_kanban as KanbanSquareDashed,
  Square_dashed_kanban as KanbanSquareDashedIcon,
  Square_kanban as KanbanSquareIcon,
  Key,
  Key as KeyIcon,
  Key_round as KeyRound,
  Key_round as KeyRoundIcon,
  Key_square as KeySquare,
  Key_square as KeySquareIcon,
  Keyboard,
  Keyboard as KeyboardIcon,
  Keyboard_music as KeyboardMusic,
  Keyboard_music as KeyboardMusicIcon,
  Keyboard_off as KeyboardOff,
  Keyboard_off as KeyboardOffIcon,
  Lamp,
  Lamp_ceiling as LampCeiling,
  Lamp_ceiling as LampCeilingIcon,
  Lamp_desk as LampDesk,
  Lamp_desk as LampDeskIcon,
  Lamp_floor as LampFloor,
  Lamp_floor as LampFloorIcon,
  Lamp as LampIcon,
  Lamp_wall_down as LampWallDown,
  Lamp_wall_down as LampWallDownIcon,
  Lamp_wall_up as LampWallUp,
  Lamp_wall_up as LampWallUpIcon,
  Land_plot as LandPlot,
  Land_plot as LandPlotIcon,
  Landmark,
  Landmark as LandmarkIcon,
  Languages,
  Languages as LanguagesIcon,
  Laptop,
  Laptop_minimal as Laptop2,
  Laptop_minimal as Laptop2Icon,
  Laptop as LaptopIcon,
  Laptop_minimal as LaptopMinimal,
  Laptop_minimal as LaptopMinimalIcon,
  Lasso,
  Lasso as LassoIcon,
  Lasso_select as LassoSelect,
  Lasso_select as LassoSelectIcon,
  Laugh,
  Laugh as LaughIcon,
  Layers,
  Layers_2 as Layers2,
  Layers_2 as Layers2Icon,
  Layers_3 as Layers3,
  Layers_3 as Layers3Icon,
  Layers as LayersIcon,
  Panels_top_left as Layout,
  Layout_dashboard as LayoutDashboard,
  Layout_dashboard as LayoutDashboardIcon,
  Layout_grid as LayoutGrid,
  Layout_grid as LayoutGridIcon,
  Panels_top_left as LayoutIcon,
  Layout_list as LayoutList,
  Layout_list as LayoutListIcon,
  Layout_panel_left as LayoutPanelLeft,
  Layout_panel_left as LayoutPanelLeftIcon,
  Layout_panel_top as LayoutPanelTop,
  Layout_panel_top as LayoutPanelTopIcon,
  Layout_template as LayoutTemplate,
  Layout_template as LayoutTemplateIcon,
  Leaf,
  Leaf as LeafIcon,
  Leafy_green as LeafyGreen,
  Leafy_green as LeafyGreenIcon,
  Lectern,
  Lectern as LecternIcon,
  Letter_text as LetterText,
  Letter_text as LetterTextIcon,
  Library,
  Library_big as LibraryBig,
  Library_big as LibraryBigIcon,
  Library as LibraryIcon,
  Square_library as LibrarySquare,
  Square_library as LibrarySquareIcon,
  Life_buoy as LifeBuoy,
  Life_buoy as LifeBuoyIcon,
  Ligature,
  Ligature as LigatureIcon,
  Lightbulb,
  Lightbulb as LightbulbIcon,
  Lightbulb_off as LightbulbOff,
  Lightbulb_off as LightbulbOffIcon,
  Chart_line as LineChart,
  Chart_line as LineChartIcon,
  Link,
  Link_2 as Link2,
  Link_2 as Link2Icon,
  Link_2_off as Link2Off,
  Link_2_off as Link2OffIcon,
  Link as LinkIcon,
  Linkedin,
  Linkedin as LinkedinIcon,
  List,
  List_check as ListCheck,
  List_check as ListCheckIcon,
  List_checks as ListChecks,
  List_checks as ListChecksIcon,
  List_collapse as ListCollapse,
  List_collapse as ListCollapseIcon,
  List_end as ListEnd,
  List_end as ListEndIcon,
  List_filter as ListFilter,
  List_filter as ListFilterIcon,
  List as ListIcon,
  List_minus as ListMinus,
  List_minus as ListMinusIcon,
  List_music as ListMusic,
  List_music as ListMusicIcon,
  List_ordered as ListOrdered,
  List_ordered as ListOrderedIcon,
  List_plus as ListPlus,
  List_plus as ListPlusIcon,
  List_restart as ListRestart,
  List_restart as ListRestartIcon,
  List_start as ListStart,
  List_start as ListStartIcon,
  List_todo as ListTodo,
  List_todo as ListTodoIcon,
  List_tree as ListTree,
  List_tree as ListTreeIcon,
  List_video as ListVideo,
  List_video as ListVideoIcon,
  List_x as ListX,
  List_x as ListXIcon,
  Loader,
  Loader_circle as Loader2,
  Loader_circle as Loader2Icon,
  Loader_circle as LoaderCircle,
  Loader_circle as LoaderCircleIcon,
  Loader as LoaderIcon,
  Loader_pinwheel as LoaderPinwheel,
  Loader_pinwheel as LoaderPinwheelIcon,
  Locate,
  Locate_fixed as LocateFixed,
  Locate_fixed as LocateFixedIcon,
  Locate as LocateIcon,
  Locate_off as LocateOff,
  Locate_off as LocateOffIcon,
  Lock,
  Lock as LockIcon,
  Lock_keyhole as LockKeyhole,
  Lock_keyhole as LockKeyholeIcon,
  Lock_keyhole_open as LockKeyholeOpen,
  Lock_keyhole_open as LockKeyholeOpenIcon,
  Lock_open as LockOpen,
  Lock_open as LockOpenIcon,
  Log_in as LogIn,
  Log_in as LogInIcon,
  Log_out as LogOut,
  Log_out as LogOutIcon,
  Logs,
  Logs as LogsIcon,
  Lollipop,
  Lollipop as LollipopIcon,
  A_arrow_down as LucideAArrowDown,
  A_arrow_up as LucideAArrowUp,
  A_large_small as LucideALargeSmall,
  Accessibility as LucideAccessibility,
  Activity as LucideActivity,
  Square_activity as LucideActivitySquare,
  Air_vent as LucideAirVent,
  Airplay as LucideAirplay,
  Alarm_clock_check as LucideAlarmCheck,
  Alarm_clock as LucideAlarmClock,
  Alarm_clock_check as LucideAlarmClockCheck,
  Alarm_clock_minus as LucideAlarmClockMinus,
  Alarm_clock_off as LucideAlarmClockOff,
  Alarm_clock_plus as LucideAlarmClockPlus,
  Alarm_clock_minus as LucideAlarmMinus,
  Alarm_clock_plus as LucideAlarmPlus,
  Alarm_smoke as LucideAlarmSmoke,
  Album as LucideAlbum,
  Circle_alert as LucideAlertCircle,
  Octagon_alert as LucideAlertOctagon,
  Triangle_alert as LucideAlertTriangle,
  Align_center as LucideAlignCenter,
  Align_center_horizontal as LucideAlignCenterHorizontal,
  Align_center_vertical as LucideAlignCenterVertical,
  Align_end_horizontal as LucideAlignEndHorizontal,
  Align_end_vertical as LucideAlignEndVertical,
  Align_horizontal_distribute_center as LucideAlignHorizontalDistributeCenter,
  Align_horizontal_distribute_end as LucideAlignHorizontalDistributeEnd,
  Align_horizontal_distribute_start as LucideAlignHorizontalDistributeStart,
  Align_horizontal_justify_center as LucideAlignHorizontalJustifyCenter,
  Align_horizontal_justify_end as LucideAlignHorizontalJustifyEnd,
  Align_horizontal_justify_start as LucideAlignHorizontalJustifyStart,
  Align_horizontal_space_around as LucideAlignHorizontalSpaceAround,
  Align_horizontal_space_between as LucideAlignHorizontalSpaceBetween,
  Align_justify as LucideAlignJustify,
  Align_left as LucideAlignLeft,
  Align_right as LucideAlignRight,
  Align_start_horizontal as LucideAlignStartHorizontal,
  Align_start_vertical as LucideAlignStartVertical,
  Align_vertical_distribute_center as LucideAlignVerticalDistributeCenter,
  Align_vertical_distribute_end as LucideAlignVerticalDistributeEnd,
  Align_vertical_distribute_start as LucideAlignVerticalDistributeStart,
  Align_vertical_justify_center as LucideAlignVerticalJustifyCenter,
  Align_vertical_justify_end as LucideAlignVerticalJustifyEnd,
  Align_vertical_justify_start as LucideAlignVerticalJustifyStart,
  Align_vertical_space_around as LucideAlignVerticalSpaceAround,
  Align_vertical_space_between as LucideAlignVerticalSpaceBetween,
  Ambulance as LucideAmbulance,
  Ampersand as LucideAmpersand,
  Ampersands as LucideAmpersands,
  Amphora as LucideAmphora,
  Anchor as LucideAnchor,
  Angry as LucideAngry,
  Annoyed as LucideAnnoyed,
  Antenna as LucideAntenna,
  Anvil as LucideAnvil,
  Aperture as LucideAperture,
  App_window as LucideAppWindow,
  App_window_mac as LucideAppWindowMac,
  Apple as LucideApple,
  Archive as LucideArchive,
  Archive_restore as LucideArchiveRestore,
  Archive_x as LucideArchiveX,
  Chart_area as LucideAreaChart,
  Armchair as LucideArmchair,
  Arrow_big_down as LucideArrowBigDown,
  Arrow_big_down_dash as LucideArrowBigDownDash,
  Arrow_big_left as LucideArrowBigLeft,
  Arrow_big_left_dash as LucideArrowBigLeftDash,
  Arrow_big_right as LucideArrowBigRight,
  Arrow_big_right_dash as LucideArrowBigRightDash,
  Arrow_big_up as LucideArrowBigUp,
  Arrow_big_up_dash as LucideArrowBigUpDash,
  Arrow_down as LucideArrowDown,
  Arrow_down_0_1 as LucideArrowDown01,
  Arrow_down_1_0 as LucideArrowDown10,
  Arrow_down_a_z as LucideArrowDownAZ,
  Arrow_down_a_z as LucideArrowDownAz,
  Circle_arrow_down as LucideArrowDownCircle,
  Arrow_down_from_line as LucideArrowDownFromLine,
  Arrow_down_left as LucideArrowDownLeft,
  Circle_arrow_out_down_left as LucideArrowDownLeftFromCircle,
  Square_arrow_out_down_left as LucideArrowDownLeftFromSquare,
  Square_arrow_down_left as LucideArrowDownLeftSquare,
  Arrow_down_narrow_wide as LucideArrowDownNarrowWide,
  Arrow_down_right as LucideArrowDownRight,
  Circle_arrow_out_down_right as LucideArrowDownRightFromCircle,
  Square_arrow_out_down_right as LucideArrowDownRightFromSquare,
  Square_arrow_down_right as LucideArrowDownRightSquare,
  Square_arrow_down as LucideArrowDownSquare,
  Arrow_down_to_dot as LucideArrowDownToDot,
  Arrow_down_to_line as LucideArrowDownToLine,
  Arrow_down_up as LucideArrowDownUp,
  Arrow_down_wide_narrow as LucideArrowDownWideNarrow,
  Arrow_down_z_a as LucideArrowDownZA,
  Arrow_down_z_a as LucideArrowDownZa,
  Arrow_left as LucideArrowLeft,
  Circle_arrow_left as LucideArrowLeftCircle,
  Arrow_left_from_line as LucideArrowLeftFromLine,
  Arrow_left_right as LucideArrowLeftRight,
  Square_arrow_left as LucideArrowLeftSquare,
  Arrow_left_to_line as LucideArrowLeftToLine,
  Arrow_right as LucideArrowRight,
  Circle_arrow_right as LucideArrowRightCircle,
  Arrow_right_from_line as LucideArrowRightFromLine,
  Arrow_right_left as LucideArrowRightLeft,
  Square_arrow_right as LucideArrowRightSquare,
  Arrow_right_to_line as LucideArrowRightToLine,
  Arrow_up as LucideArrowUp,
  Arrow_up_0_1 as LucideArrowUp01,
  Arrow_up_1_0 as LucideArrowUp10,
  Arrow_up_a_z as LucideArrowUpAZ,
  Arrow_up_a_z as LucideArrowUpAz,
  Circle_arrow_up as LucideArrowUpCircle,
  Arrow_up_down as LucideArrowUpDown,
  Arrow_up_from_dot as LucideArrowUpFromDot,
  Arrow_up_from_line as LucideArrowUpFromLine,
  Arrow_up_left as LucideArrowUpLeft,
  Circle_arrow_out_up_left as LucideArrowUpLeftFromCircle,
  Square_arrow_out_up_left as LucideArrowUpLeftFromSquare,
  Square_arrow_up_left as LucideArrowUpLeftSquare,
  Arrow_up_narrow_wide as LucideArrowUpNarrowWide,
  Arrow_up_right as LucideArrowUpRight,
  Circle_arrow_out_up_right as LucideArrowUpRightFromCircle,
  Square_arrow_out_up_right as LucideArrowUpRightFromSquare,
  Square_arrow_up_right as LucideArrowUpRightSquare,
  Square_arrow_up as LucideArrowUpSquare,
  Arrow_up_to_line as LucideArrowUpToLine,
  Arrow_up_wide_narrow as LucideArrowUpWideNarrow,
  Arrow_up_z_a as LucideArrowUpZA,
  Arrow_up_z_a as LucideArrowUpZa,
  Arrows_up_from_line as LucideArrowsUpFromLine,
  Asterisk as LucideAsterisk,
  Square_asterisk as LucideAsteriskSquare,
  At_sign as LucideAtSign,
  Atom as LucideAtom,
  Audio_lines as LucideAudioLines,
  Audio_waveform as LucideAudioWaveform,
  Award as LucideAward,
  Axe as LucideAxe,
  Axis_3d as LucideAxis3D,
  Axis_3d as LucideAxis3d,
  Baby as LucideBaby,
  Backpack as LucideBackpack,
  Badge as LucideBadge,
  Badge_alert as LucideBadgeAlert,
  Badge_cent as LucideBadgeCent,
  Badge_check as LucideBadgeCheck,
  Badge_dollar_sign as LucideBadgeDollarSign,
  Badge_euro as LucideBadgeEuro,
  Badge_help as LucideBadgeHelp,
  Badge_indian_rupee as LucideBadgeIndianRupee,
  Badge_info as LucideBadgeInfo,
  Badge_japanese_yen as LucideBadgeJapaneseYen,
  Badge_minus as LucideBadgeMinus,
  Badge_percent as LucideBadgePercent,
  Badge_plus as LucideBadgePlus,
  Badge_pound_sterling as LucideBadgePoundSterling,
  Badge_russian_ruble as LucideBadgeRussianRuble,
  Badge_swiss_franc as LucideBadgeSwissFranc,
  Badge_x as LucideBadgeX,
  Baggage_claim as LucideBaggageClaim,
  Ban as LucideBan,
  Banana as LucideBanana,
  Bandage as LucideBandage,
  Banknote as LucideBanknote,
  Chart_no_axes_column_increasing as LucideBarChart,
  Chart_no_axes_column as LucideBarChart2,
  Chart_column as LucideBarChart3,
  Chart_column_increasing as LucideBarChart4,
  Chart_column_big as LucideBarChartBig,
  Chart_bar as LucideBarChartHorizontal,
  Chart_bar_big as LucideBarChartHorizontalBig,
  Barcode as LucideBarcode,
  Baseline as LucideBaseline,
  Bath as LucideBath,
  Battery as LucideBattery,
  Battery_charging as LucideBatteryCharging,
  Battery_full as LucideBatteryFull,
  Battery_low as LucideBatteryLow,
  Battery_medium as LucideBatteryMedium,
  Battery_warning as LucideBatteryWarning,
  Beaker as LucideBeaker,
  Bean as LucideBean,
  Bean_off as LucideBeanOff,
  Bed as LucideBed,
  Bed_double as LucideBedDouble,
  Bed_single as LucideBedSingle,
  Beef as LucideBeef,
  Beer as LucideBeer,
  Beer_off as LucideBeerOff,
  Bell as LucideBell,
  Bell_dot as LucideBellDot,
  Bell_electric as LucideBellElectric,
  Bell_minus as LucideBellMinus,
  Bell_off as LucideBellOff,
  Bell_plus as LucideBellPlus,
  Bell_ring as LucideBellRing,
  Between_horizontal_end as LucideBetweenHorizonalEnd,
  Between_horizontal_start as LucideBetweenHorizonalStart,
  Between_horizontal_end as LucideBetweenHorizontalEnd,
  Between_horizontal_start as LucideBetweenHorizontalStart,
  Between_vertical_end as LucideBetweenVerticalEnd,
  Between_vertical_start as LucideBetweenVerticalStart,
  Biceps_flexed as LucideBicepsFlexed,
  Bike as LucideBike,
  Binary as LucideBinary,
  Binoculars as LucideBinoculars,
  Biohazard as LucideBiohazard,
  Bird as LucideBird,
  Bitcoin as LucideBitcoin,
  Blend as LucideBlend,
  Blinds as LucideBlinds,
  Blocks as LucideBlocks,
  Bluetooth as LucideBluetooth,
  Bluetooth_connected as LucideBluetoothConnected,
  Bluetooth_off as LucideBluetoothOff,
  Bluetooth_searching as LucideBluetoothSearching,
  Bold as LucideBold,
  Bolt as LucideBolt,
  Bomb as LucideBomb,
  Bone as LucideBone,
  Book as LucideBook,
  Book_a as LucideBookA,
  Book_audio as LucideBookAudio,
  Book_check as LucideBookCheck,
  Book_copy as LucideBookCopy,
  Book_dashed as LucideBookDashed,
  Book_down as LucideBookDown,
  Book_headphones as LucideBookHeadphones,
  Book_heart as LucideBookHeart,
  Book_image as LucideBookImage,
  Book_key as LucideBookKey,
  Book_lock as LucideBookLock,
  Book_marked as LucideBookMarked,
  Book_minus as LucideBookMinus,
  Book_open as LucideBookOpen,
  Book_open_check as LucideBookOpenCheck,
  Book_open_text as LucideBookOpenText,
  Book_plus as LucideBookPlus,
  Book_dashed as LucideBookTemplate,
  Book_text as LucideBookText,
  Book_type as LucideBookType,
  Book_up as LucideBookUp,
  Book_up_2 as LucideBookUp2,
  Book_user as LucideBookUser,
  Book_x as LucideBookX,
  Bookmark as LucideBookmark,
  Bookmark_check as LucideBookmarkCheck,
  Bookmark_minus as LucideBookmarkMinus,
  Bookmark_plus as LucideBookmarkPlus,
  Bookmark_x as LucideBookmarkX,
  Boom_box as LucideBoomBox,
  Bot as LucideBot,
  Bot_message_square as LucideBotMessageSquare,
  Bot_off as LucideBotOff,
  Box as LucideBox,
  Square_dashed as LucideBoxSelect,
  Boxes as LucideBoxes,
  Braces as LucideBraces,
  Brackets as LucideBrackets,
  Brain as LucideBrain,
  Brain_circuit as LucideBrainCircuit,
  Brain_cog as LucideBrainCog,
  Brick_wall as LucideBrickWall,
  Briefcase as LucideBriefcase,
  Briefcase_business as LucideBriefcaseBusiness,
  Briefcase_conveyor_belt as LucideBriefcaseConveyorBelt,
  Briefcase_medical as LucideBriefcaseMedical,
  Bring_to_front as LucideBringToFront,
  Brush as LucideBrush,
  Bug as LucideBug,
  Bug_off as LucideBugOff,
  Bug_play as LucideBugPlay,
  Building as LucideBuilding,
  Building_2 as LucideBuilding2,
  Bus as LucideBus,
  Bus_front as LucideBusFront,
  Cable as LucideCable,
  Cable_car as LucideCableCar,
  Cake as LucideCake,
  Cake_slice as LucideCakeSlice,
  Calculator as LucideCalculator,
  Calendar as LucideCalendar,
  Calendar_1 as LucideCalendar1,
  Calendar_arrow_down as LucideCalendarArrowDown,
  Calendar_arrow_up as LucideCalendarArrowUp,
  Calendar_check as LucideCalendarCheck,
  Calendar_check_2 as LucideCalendarCheck2,
  Calendar_clock as LucideCalendarClock,
  Calendar_cog as LucideCalendarCog,
  Calendar_days as LucideCalendarDays,
  Calendar_fold as LucideCalendarFold,
  Calendar_heart as LucideCalendarHeart,
  Calendar_minus as LucideCalendarMinus,
  Calendar_minus_2 as LucideCalendarMinus2,
  Calendar_off as LucideCalendarOff,
  Calendar_plus as LucideCalendarPlus,
  Calendar_plus_2 as LucideCalendarPlus2,
  Calendar_range as LucideCalendarRange,
  Calendar_search as LucideCalendarSearch,
  Calendar_x as LucideCalendarX,
  Calendar_x_2 as LucideCalendarX2,
  Camera as LucideCamera,
  Camera_off as LucideCameraOff,
  Chart_candlestick as LucideCandlestickChart,
  Candy as LucideCandy,
  Candy_cane as LucideCandyCane,
  Candy_off as LucideCandyOff,
  Cannabis as LucideCannabis,
  Captions as LucideCaptions,
  Captions_off as LucideCaptionsOff,
  Car as LucideCar,
  Car_front as LucideCarFront,
  Car_taxi_front as LucideCarTaxiFront,
  Caravan as LucideCaravan,
  Carrot as LucideCarrot,
  Case_lower as LucideCaseLower,
  Case_sensitive as LucideCaseSensitive,
  Case_upper as LucideCaseUpper,
  Cassette_tape as LucideCassetteTape,
  Cast as LucideCast,
  Castle as LucideCastle,
  Cat as LucideCat,
  Cctv as LucideCctv,
  Chart_area as LucideChartArea,
  Chart_bar as LucideChartBar,
  Chart_bar_big as LucideChartBarBig,
  Chart_bar_decreasing as LucideChartBarDecreasing,
  Chart_bar_increasing as LucideChartBarIncreasing,
  Chart_bar_stacked as LucideChartBarStacked,
  Chart_candlestick as LucideChartCandlestick,
  Chart_column as LucideChartColumn,
  Chart_column_big as LucideChartColumnBig,
  Chart_column_decreasing as LucideChartColumnDecreasing,
  Chart_column_increasing as LucideChartColumnIncreasing,
  Chart_column_stacked as LucideChartColumnStacked,
  Chart_gantt as LucideChartGantt,
  Chart_line as LucideChartLine,
  Chart_network as LucideChartNetwork,
  Chart_no_axes_column as LucideChartNoAxesColumn,
  Chart_no_axes_column_decreasing as LucideChartNoAxesColumnDecreasing,
  Chart_no_axes_column_increasing as LucideChartNoAxesColumnIncreasing,
  Chart_no_axes_combined as LucideChartNoAxesCombined,
  Chart_no_axes_gantt as LucideChartNoAxesGantt,
  Chart_pie as LucideChartPie,
  Chart_scatter as LucideChartScatter,
  Chart_spline as LucideChartSpline,
  Check as LucideCheck,
  Check_check as LucideCheckCheck,
  Circle_check_big as LucideCheckCircle,
  Circle_check as LucideCheckCircle2,
  Square_check_big as LucideCheckSquare,
  Square_check as LucideCheckSquare2,
  Chef_hat as LucideChefHat,
  Cherry as LucideCherry,
  Chevron_down as LucideChevronDown,
  Circle_chevron_down as LucideChevronDownCircle,
  Square_chevron_down as LucideChevronDownSquare,
  Chevron_first as LucideChevronFirst,
  Chevron_last as LucideChevronLast,
  Chevron_left as LucideChevronLeft,
  Circle_chevron_left as LucideChevronLeftCircle,
  Square_chevron_left as LucideChevronLeftSquare,
  Chevron_right as LucideChevronRight,
  Circle_chevron_right as LucideChevronRightCircle,
  Square_chevron_right as LucideChevronRightSquare,
  Chevron_up as LucideChevronUp,
  Circle_chevron_up as LucideChevronUpCircle,
  Square_chevron_up as LucideChevronUpSquare,
  Chevrons_down as LucideChevronsDown,
  Chevrons_down_up as LucideChevronsDownUp,
  Chevrons_left as LucideChevronsLeft,
  Chevrons_left_right as LucideChevronsLeftRight,
  Chevrons_left_right_ellipsis as LucideChevronsLeftRightEllipsis,
  Chevrons_right as LucideChevronsRight,
  Chevrons_right_left as LucideChevronsRightLeft,
  Chevrons_up as LucideChevronsUp,
  Chevrons_up_down as LucideChevronsUpDown,
  Chrome as LucideChrome,
  Church as LucideChurch,
  Cigarette as LucideCigarette,
  Cigarette_off as LucideCigaretteOff,
  Circle as LucideCircle,
  Circle_alert as LucideCircleAlert,
  Circle_arrow_down as LucideCircleArrowDown,
  Circle_arrow_left as LucideCircleArrowLeft,
  Circle_arrow_out_down_left as LucideCircleArrowOutDownLeft,
  Circle_arrow_out_down_right as LucideCircleArrowOutDownRight,
  Circle_arrow_out_up_left as LucideCircleArrowOutUpLeft,
  Circle_arrow_out_up_right as LucideCircleArrowOutUpRight,
  Circle_arrow_right as LucideCircleArrowRight,
  Circle_arrow_up as LucideCircleArrowUp,
  Circle_check as LucideCircleCheck,
  Circle_check_big as LucideCircleCheckBig,
  Circle_chevron_down as LucideCircleChevronDown,
  Circle_chevron_left as LucideCircleChevronLeft,
  Circle_chevron_right as LucideCircleChevronRight,
  Circle_chevron_up as LucideCircleChevronUp,
  Circle_dashed as LucideCircleDashed,
  Circle_divide as LucideCircleDivide,
  Circle_dollar_sign as LucideCircleDollarSign,
  Circle_dot as LucideCircleDot,
  Circle_dot_dashed as LucideCircleDotDashed,
  Circle_ellipsis as LucideCircleEllipsis,
  Circle_equal as LucideCircleEqual,
  Circle_fading_arrow_up as LucideCircleFadingArrowUp,
  Circle_fading_plus as LucideCircleFadingPlus,
  Circle_gauge as LucideCircleGauge,
  Circle_help as LucideCircleHelp,
  Circle_minus as LucideCircleMinus,
  Circle_off as LucideCircleOff,
  Circle_parking as LucideCircleParking,
  Circle_parking_off as LucideCircleParkingOff,
  Circle_pause as LucideCirclePause,
  Circle_percent as LucideCirclePercent,
  Circle_play as LucideCirclePlay,
  Circle_plus as LucideCirclePlus,
  Circle_power as LucideCirclePower,
  Circle_slash as LucideCircleSlash,
  Circle_slash_2 as LucideCircleSlash2,
  Circle_slash_2 as LucideCircleSlashed,
  Circle_stop as LucideCircleStop,
  Circle_user as LucideCircleUser,
  Circle_user_round as LucideCircleUserRound,
  Circle_x as LucideCircleX,
  Circuit_board as LucideCircuitBoard,
  Citrus as LucideCitrus,
  Clapperboard as LucideClapperboard,
  Clipboard as LucideClipboard,
  Clipboard_check as LucideClipboardCheck,
  Clipboard_copy as LucideClipboardCopy,
  Clipboard_pen as LucideClipboardEdit,
  Clipboard_list as LucideClipboardList,
  Clipboard_minus as LucideClipboardMinus,
  Clipboard_paste as LucideClipboardPaste,
  Clipboard_pen as LucideClipboardPen,
  Clipboard_pen_line as LucideClipboardPenLine,
  Clipboard_plus as LucideClipboardPlus,
  Clipboard_pen_line as LucideClipboardSignature,
  Clipboard_type as LucideClipboardType,
  Clipboard_x as LucideClipboardX,
  Clock as LucideClock,
  Clock_1 as LucideClock1,
  Clock_10 as LucideClock10,
  Clock_11 as LucideClock11,
  Clock_12 as LucideClock12,
  Clock_2 as LucideClock2,
  Clock_3 as LucideClock3,
  Clock_4 as LucideClock4,
  Clock_5 as LucideClock5,
  Clock_6 as LucideClock6,
  Clock_7 as LucideClock7,
  Clock_8 as LucideClock8,
  Clock_9 as LucideClock9,
  Clock_alert as LucideClockAlert,
  Clock_arrow_down as LucideClockArrowDown,
  Clock_arrow_up as LucideClockArrowUp,
  Cloud as LucideCloud,
  Cloud_cog as LucideCloudCog,
  Cloud_download as LucideCloudDownload,
  Cloud_drizzle as LucideCloudDrizzle,
  Cloud_fog as LucideCloudFog,
  Cloud_hail as LucideCloudHail,
  Cloud_lightning as LucideCloudLightning,
  Cloud_moon as LucideCloudMoon,
  Cloud_moon_rain as LucideCloudMoonRain,
  Cloud_off as LucideCloudOff,
  Cloud_rain as LucideCloudRain,
  Cloud_rain_wind as LucideCloudRainWind,
  Cloud_snow as LucideCloudSnow,
  Cloud_sun as LucideCloudSun,
  Cloud_sun_rain as LucideCloudSunRain,
  Cloud_upload as LucideCloudUpload,
  Cloudy as LucideCloudy,
  Clover as LucideClover,
  Club as LucideClub,
  Code as LucideCode,
  Code_xml as LucideCode2,
  Square_code as LucideCodeSquare,
  Code_xml as LucideCodeXml,
  Codepen as LucideCodepen,
  Codesandbox as LucideCodesandbox,
  Coffee as LucideCoffee,
  Cog as LucideCog,
  Coins as LucideCoins,
  Columns_2 as LucideColumns,
  Columns_2 as LucideColumns2,
  Columns_3 as LucideColumns3,
  Columns_4 as LucideColumns4,
  Combine as LucideCombine,
  Command as LucideCommand,
  Compass as LucideCompass,
  Component as LucideComponent,
  Computer as LucideComputer,
  Concierge_bell as LucideConciergeBell,
  Cone as LucideCone,
  Construction as LucideConstruction,
  Contact as LucideContact,
  Contact_round as LucideContact2,
  Contact_round as LucideContactRound,
  Container as LucideContainer,
  Contrast as LucideContrast,
  Cookie as LucideCookie,
  Cooking_pot as LucideCookingPot,
  Copy as LucideCopy,
  Copy_check as LucideCopyCheck,
  Copy_minus as LucideCopyMinus,
  Copy_plus as LucideCopyPlus,
  Copy_slash as LucideCopySlash,
  Copy_x as LucideCopyX,
  Copyleft as LucideCopyleft,
  Copyright as LucideCopyright,
  Corner_down_left as LucideCornerDownLeft,
  Corner_down_right as LucideCornerDownRight,
  Corner_left_down as LucideCornerLeftDown,
  Corner_left_up as LucideCornerLeftUp,
  Corner_right_down as LucideCornerRightDown,
  Corner_right_up as LucideCornerRightUp,
  Corner_up_left as LucideCornerUpLeft,
  Corner_up_right as LucideCornerUpRight,
  Cpu as LucideCpu,
  Creative_commons as LucideCreativeCommons,
  Credit_card as LucideCreditCard,
  Croissant as LucideCroissant,
  Crop as LucideCrop,
  Cross as LucideCross,
  Crosshair as LucideCrosshair,
  Crown as LucideCrown,
  Cuboid as LucideCuboid,
  Cup_soda as LucideCupSoda,
  Braces as LucideCurlyBraces,
  Currency as LucideCurrency,
  Cylinder as LucideCylinder,
  Dam as LucideDam,
  Database as LucideDatabase,
  Database_backup as LucideDatabaseBackup,
  Database_zap as LucideDatabaseZap,
  Delete as LucideDelete,
  Dessert as LucideDessert,
  Diameter as LucideDiameter,
  Diamond as LucideDiamond,
  Diamond_minus as LucideDiamondMinus,
  Diamond_percent as LucideDiamondPercent,
  Diamond_plus as LucideDiamondPlus,
  Dice_1 as LucideDice1,
  Dice_2 as LucideDice2,
  Dice_3 as LucideDice3,
  Dice_4 as LucideDice4,
  Dice_5 as LucideDice5,
  Dice_6 as LucideDice6,
  Dices as LucideDices,
  Diff as LucideDiff,
  Disc as LucideDisc,
  Disc_2 as LucideDisc2,
  Disc_3 as LucideDisc3,
  Disc_album as LucideDiscAlbum,
  Divide as LucideDivide,
  Circle_divide as LucideDivideCircle,
  Square_divide as LucideDivideSquare,
  Dna as LucideDna,
  Dna_off as LucideDnaOff,
  Dock as LucideDock,
  Dog as LucideDog,
  Dollar_sign as LucideDollarSign,
  Donut as LucideDonut,
  Door_closed as LucideDoorClosed,
  Door_open as LucideDoorOpen,
  Dot as LucideDot,
  Square_dot as LucideDotSquare,
  Download as LucideDownload,
  Cloud_download as LucideDownloadCloud,
  Drafting_compass as LucideDraftingCompass,
  Drama as LucideDrama,
  Dribbble as LucideDribbble,
  Drill as LucideDrill,
  Droplet as LucideDroplet,
  Droplets as LucideDroplets,
  Drum as LucideDrum,
  Drumstick as LucideDrumstick,
  Dumbbell as LucideDumbbell,
  Ear as LucideEar,
  Ear_off as LucideEarOff,
  Earth as LucideEarth,
  Earth_lock as LucideEarthLock,
  Eclipse as LucideEclipse,
  Square_pen as LucideEdit,
  Pen as LucideEdit2,
  Pen_line as LucideEdit3,
  Egg as LucideEgg,
  Egg_fried as LucideEggFried,
  Egg_off as LucideEggOff,
  Ellipsis as LucideEllipsis,
  Ellipsis_vertical as LucideEllipsisVertical,
  Equal as LucideEqual,
  Equal_not as LucideEqualNot,
  Square_equal as LucideEqualSquare,
  Eraser as LucideEraser,
  Ethernet_port as LucideEthernetPort,
  Euro as LucideEuro,
  Expand as LucideExpand,
  External_link as LucideExternalLink,
  Eye as LucideEye,
  Eye_closed as LucideEyeClosed,
  Eye_off as LucideEyeOff,
  Facebook as LucideFacebook,
  Factory as LucideFactory,
  Fan as LucideFan,
  Fast_forward as LucideFastForward,
  Feather as LucideFeather,
  Fence as LucideFence,
  Ferris_wheel as LucideFerrisWheel,
  Figma as LucideFigma,
  File as LucideFile,
  File_archive as LucideFileArchive,
  File_audio as LucideFileAudio,
  File_audio_2 as LucideFileAudio2,
  File_axis_3d as LucideFileAxis3D,
  File_axis_3d as LucideFileAxis3d,
  File_badge as LucideFileBadge,
  File_badge_2 as LucideFileBadge2,
  File_chart_column_increasing as LucideFileBarChart,
  File_chart_column as LucideFileBarChart2,
  File_box as LucideFileBox,
  File_chart_column as LucideFileChartColumn,
  File_chart_column_increasing as LucideFileChartColumnIncreasing,
  File_chart_line as LucideFileChartLine,
  File_chart_pie as LucideFileChartPie,
  File_check as LucideFileCheck,
  File_check_2 as LucideFileCheck2,
  File_clock as LucideFileClock,
  File_code as LucideFileCode,
  File_code_2 as LucideFileCode2,
  File_cog as LucideFileCog,
  File_cog as LucideFileCog2,
  File_diff as LucideFileDiff,
  File_digit as LucideFileDigit,
  File_down as LucideFileDown,
  File_pen as LucideFileEdit,
  File_heart as LucideFileHeart,
  File_image as LucideFileImage,
  File_input as LucideFileInput,
  File_json as LucideFileJson,
  File_json_2 as LucideFileJson2,
  File_key as LucideFileKey,
  File_key_2 as LucideFileKey2,
  File_chart_line as LucideFileLineChart,
  File_lock as LucideFileLock,
  File_lock_2 as LucideFileLock2,
  File_minus as LucideFileMinus,
  File_minus_2 as LucideFileMinus2,
  File_music as LucideFileMusic,
  File_output as LucideFileOutput,
  File_pen as LucideFilePen,
  File_pen_line as LucideFilePenLine,
  File_chart_pie as LucideFilePieChart,
  File_plus as LucideFilePlus,
  File_plus_2 as LucideFilePlus2,
  File_question as LucideFileQuestion,
  File_scan as LucideFileScan,
  File_search as LucideFileSearch,
  File_search_2 as LucideFileSearch2,
  File_pen_line as LucideFileSignature,
  File_sliders as LucideFileSliders,
  File_spreadsheet as LucideFileSpreadsheet,
  File_stack as LucideFileStack,
  File_symlink as LucideFileSymlink,
  File_terminal as LucideFileTerminal,
  File_text as LucideFileText,
  File_type as LucideFileType,
  File_type_2 as LucideFileType2,
  File_up as LucideFileUp,
  File_user as LucideFileUser,
  File_video as LucideFileVideo,
  File_video_2 as LucideFileVideo2,
  File_volume as LucideFileVolume,
  File_volume_2 as LucideFileVolume2,
  File_warning as LucideFileWarning,
  File_x as LucideFileX,
  File_x_2 as LucideFileX2,
  Files as LucideFiles,
  Film as LucideFilm,
  Filter as LucideFilter,
  Filter_x as LucideFilterX,
  Fingerprint as LucideFingerprint,
  Fire_extinguisher as LucideFireExtinguisher,
  Fish as LucideFish,
  Fish_off as LucideFishOff,
  Fish_symbol as LucideFishSymbol,
  Flag as LucideFlag,
  Flag_off as LucideFlagOff,
  Flag_triangle_left as LucideFlagTriangleLeft,
  Flag_triangle_right as LucideFlagTriangleRight,
  Flame as LucideFlame,
  Flame_kindling as LucideFlameKindling,
  Flashlight as LucideFlashlight,
  Flashlight_off as LucideFlashlightOff,
  Flask_conical as LucideFlaskConical,
  Flask_conical_off as LucideFlaskConicalOff,
  Flask_round as LucideFlaskRound,
  Flip_horizontal as LucideFlipHorizontal,
  Flip_horizontal_2 as LucideFlipHorizontal2,
  Flip_vertical as LucideFlipVertical,
  Flip_vertical_2 as LucideFlipVertical2,
  Flower as LucideFlower,
  Flower_2 as LucideFlower2,
  Focus as LucideFocus,
  Fold_horizontal as LucideFoldHorizontal,
  Fold_vertical as LucideFoldVertical,
  Folder as LucideFolder,
  Folder_archive as LucideFolderArchive,
  Folder_check as LucideFolderCheck,
  Folder_clock as LucideFolderClock,
  Folder_closed as LucideFolderClosed,
  Folder_code as LucideFolderCode,
  Folder_cog as LucideFolderCog,
  Folder_cog as LucideFolderCog2,
  Folder_dot as LucideFolderDot,
  Folder_down as LucideFolderDown,
  Folder_pen as LucideFolderEdit,
  Folder_git as LucideFolderGit,
  Folder_git_2 as LucideFolderGit2,
  Folder_heart as LucideFolderHeart,
  Folder_input as LucideFolderInput,
  Folder_kanban as LucideFolderKanban,
  Folder_key as LucideFolderKey,
  Folder_lock as LucideFolderLock,
  Folder_minus as LucideFolderMinus,
  Folder_open as LucideFolderOpen,
  Folder_open_dot as LucideFolderOpenDot,
  Folder_output as LucideFolderOutput,
  Folder_pen as LucideFolderPen,
  Folder_plus as LucideFolderPlus,
  Folder_root as LucideFolderRoot,
  Folder_search as LucideFolderSearch,
  Folder_search_2 as LucideFolderSearch2,
  Folder_symlink as LucideFolderSymlink,
  Folder_sync as LucideFolderSync,
  Folder_tree as LucideFolderTree,
  Folder_up as LucideFolderUp,
  Folder_x as LucideFolderX,
  Folders as LucideFolders,
  Footprints as LucideFootprints,
  Utensils as LucideForkKnife,
  Utensils_crossed as LucideForkKnifeCrossed,
  Forklift as LucideForklift,
  Rectangle_ellipsis as LucideFormInput,
  Forward as LucideForward,
  Frame as LucideFrame,
  Framer as LucideFramer,
  Frown as LucideFrown,
  Fuel as LucideFuel,
  Fullscreen as LucideFullscreen,
  Square_function as LucideFunctionSquare,
  Gallery_horizontal as LucideGalleryHorizontal,
  Gallery_horizontal_end as LucideGalleryHorizontalEnd,
  Gallery_thumbnails as LucideGalleryThumbnails,
  Gallery_vertical as LucideGalleryVertical,
  Gallery_vertical_end as LucideGalleryVerticalEnd,
  Gamepad as LucideGamepad,
  Gamepad_2 as LucideGamepad2,
  Chart_no_axes_gantt as LucideGanttChart,
  Square_chart_gantt as LucideGanttChartSquare,
  Gauge as LucideGauge,
  Circle_gauge as LucideGaugeCircle,
  Gavel as LucideGavel,
  Gem as LucideGem,
  Ghost as LucideGhost,
  Gift as LucideGift,
  Git_branch as LucideGitBranch,
  Git_branch_plus as LucideGitBranchPlus,
  Git_commit_horizontal as LucideGitCommit,
  Git_commit_horizontal as LucideGitCommitHorizontal,
  Git_commit_vertical as LucideGitCommitVertical,
  Git_compare as LucideGitCompare,
  Git_compare_arrows as LucideGitCompareArrows,
  Git_fork as LucideGitFork,
  Git_graph as LucideGitGraph,
  Git_merge as LucideGitMerge,
  Git_pull_request as LucideGitPullRequest,
  Git_pull_request_arrow as LucideGitPullRequestArrow,
  Git_pull_request_closed as LucideGitPullRequestClosed,
  Git_pull_request_create as LucideGitPullRequestCreate,
  Git_pull_request_create_arrow as LucideGitPullRequestCreateArrow,
  Git_pull_request_draft as LucideGitPullRequestDraft,
  Github as LucideGithub,
  Gitlab as LucideGitlab,
  Glass_water as LucideGlassWater,
  Glasses as LucideGlasses,
  Globe as LucideGlobe,
  Earth as LucideGlobe2,
  Globe_lock as LucideGlobeLock,
  Goal as LucideGoal,
  Grab as LucideGrab,
  Graduation_cap as LucideGraduationCap,
  Grape as LucideGrape,
  Grid_3x3 as LucideGrid,
  Grid_2x2 as LucideGrid2X2,
  Grid_2x2_plus as LucideGrid2X2Plus,
  Grid_2x2 as LucideGrid2x2,
  Grid_2x2_check as LucideGrid2x2Check,
  Grid_2x2_plus as LucideGrid2x2Plus,
  Grid_2x2_x as LucideGrid2x2X,
  Grid_3x3 as LucideGrid3X3,
  Grid_3x3 as LucideGrid3x3,
  Grip as LucideGrip,
  Grip_horizontal as LucideGripHorizontal,
  Grip_vertical as LucideGripVertical,
  Group as LucideGroup,
  Guitar as LucideGuitar,
  Ham as LucideHam,
  Hammer as LucideHammer,
  Hand as LucideHand,
  Hand_coins as LucideHandCoins,
  Hand_heart as LucideHandHeart,
  Hand_helping as LucideHandHelping,
  Hand_metal as LucideHandMetal,
  Hand_platter as LucideHandPlatter,
  Handshake as LucideHandshake,
  Hard_drive as LucideHardDrive,
  Hard_drive_download as LucideHardDriveDownload,
  Hard_drive_upload as LucideHardDriveUpload,
  Hard_hat as LucideHardHat,
  Hash as LucideHash,
  Haze as LucideHaze,
  Hdmi_port as LucideHdmiPort,
  Heading as LucideHeading,
  Heading_1 as LucideHeading1,
  Heading_2 as LucideHeading2,
  Heading_3 as LucideHeading3,
  Heading_4 as LucideHeading4,
  Heading_5 as LucideHeading5,
  Heading_6 as LucideHeading6,
  Headphone_off as LucideHeadphoneOff,
  Headphones as LucideHeadphones,
  Headset as LucideHeadset,
  Heart as LucideHeart,
  Heart_crack as LucideHeartCrack,
  Heart_handshake as LucideHeartHandshake,
  Heart_off as LucideHeartOff,
  Heart_pulse as LucideHeartPulse,
  Heater as LucideHeater,
  Circle_help as LucideHelpCircle,
  Hand_helping as LucideHelpingHand,
  Hexagon as LucideHexagon,
  Highlighter as LucideHighlighter,
  History as LucideHistory,
  House as LucideHome,
  Hop as LucideHop,
  Hop_off as LucideHopOff,
  Hospital as LucideHospital,
  Hotel as LucideHotel,
  Hourglass as LucideHourglass,
  House as LucideHouse,
  House_plug as LucideHousePlug,
  House_plus as LucideHousePlus,
  Ice_cream_cone as LucideIceCream,
  Ice_cream_bowl as LucideIceCream2,
  Ice_cream_bowl as LucideIceCreamBowl,
  Ice_cream_cone as LucideIceCreamCone,
  Id_card as LucideIdCard,
  Image as LucideImage,
  Image_down as LucideImageDown,
  Image_minus as LucideImageMinus,
  Image_off as LucideImageOff,
  Image_play as LucideImagePlay,
  Image_plus as LucideImagePlus,
  Image_up as LucideImageUp,
  Images as LucideImages,
  Import as LucideImport,
  Inbox as LucideInbox,
  Indent_increase as LucideIndent,
  Indent_decrease as LucideIndentDecrease,
  Indent_increase as LucideIndentIncrease,
  Indian_rupee as LucideIndianRupee,
  Infinity as LucideInfinity,
  Info as LucideInfo,
  Square_mouse_pointer as LucideInspect,
  Inspection_panel as LucideInspectionPanel,
  Instagram as LucideInstagram,
  Italic as LucideItalic,
  Iteration_ccw as LucideIterationCcw,
  Iteration_cw as LucideIterationCw,
  Japanese_yen as LucideJapaneseYen,
  Joystick as LucideJoystick,
  Kanban as LucideKanban,
  Square_kanban as LucideKanbanSquare,
  Square_dashed_kanban as LucideKanbanSquareDashed,
  Key as LucideKey,
  Key_round as LucideKeyRound,
  Key_square as LucideKeySquare,
  Keyboard as LucideKeyboard,
  Keyboard_music as LucideKeyboardMusic,
  Keyboard_off as LucideKeyboardOff,
  Lamp as LucideLamp,
  Lamp_ceiling as LucideLampCeiling,
  Lamp_desk as LucideLampDesk,
  Lamp_floor as LucideLampFloor,
  Lamp_wall_down as LucideLampWallDown,
  Lamp_wall_up as LucideLampWallUp,
  Land_plot as LucideLandPlot,
  Landmark as LucideLandmark,
  Languages as LucideLanguages,
  Laptop as LucideLaptop,
  Laptop_minimal as LucideLaptop2,
  Laptop_minimal as LucideLaptopMinimal,
  Lasso as LucideLasso,
  Lasso_select as LucideLassoSelect,
  Laugh as LucideLaugh,
  Layers as LucideLayers,
  Layers_2 as LucideLayers2,
  Layers_3 as LucideLayers3,
  Panels_top_left as LucideLayout,
  Layout_dashboard as LucideLayoutDashboard,
  Layout_grid as LucideLayoutGrid,
  Layout_list as LucideLayoutList,
  Layout_panel_left as LucideLayoutPanelLeft,
  Layout_panel_top as LucideLayoutPanelTop,
  Layout_template as LucideLayoutTemplate,
  Leaf as LucideLeaf,
  Leafy_green as LucideLeafyGreen,
  Lectern as LucideLectern,
  Letter_text as LucideLetterText,
  Library as LucideLibrary,
  Library_big as LucideLibraryBig,
  Square_library as LucideLibrarySquare,
  Life_buoy as LucideLifeBuoy,
  Ligature as LucideLigature,
  Lightbulb as LucideLightbulb,
  Lightbulb_off as LucideLightbulbOff,
  Chart_line as LucideLineChart,
  Link as LucideLink,
  Link_2 as LucideLink2,
  Link_2_off as LucideLink2Off,
  Linkedin as LucideLinkedin,
  List as LucideList,
  List_check as LucideListCheck,
  List_checks as LucideListChecks,
  List_collapse as LucideListCollapse,
  List_end as LucideListEnd,
  List_filter as LucideListFilter,
  List_minus as LucideListMinus,
  List_music as LucideListMusic,
  List_ordered as LucideListOrdered,
  List_plus as LucideListPlus,
  List_restart as LucideListRestart,
  List_start as LucideListStart,
  List_todo as LucideListTodo,
  List_tree as LucideListTree,
  List_video as LucideListVideo,
  List_x as LucideListX,
  Loader as LucideLoader,
  Loader_circle as LucideLoader2,
  Loader_circle as LucideLoaderCircle,
  Loader_pinwheel as LucideLoaderPinwheel,
  Locate as LucideLocate,
  Locate_fixed as LucideLocateFixed,
  Locate_off as LucideLocateOff,
  Lock as LucideLock,
  Lock_keyhole as LucideLockKeyhole,
  Lock_keyhole_open as LucideLockKeyholeOpen,
  Lock_open as LucideLockOpen,
  Log_in as LucideLogIn,
  Log_out as LucideLogOut,
  Logs as LucideLogs,
  Lollipop as LucideLollipop,
  Luggage as LucideLuggage,
  Square_m as LucideMSquare,
  Magnet as LucideMagnet,
  Mail as LucideMail,
  Mail_check as LucideMailCheck,
  Mail_minus as LucideMailMinus,
  Mail_open as LucideMailOpen,
  Mail_plus as LucideMailPlus,
  Mail_question as LucideMailQuestion,
  Mail_search as LucideMailSearch,
  Mail_warning as LucideMailWarning,
  Mail_x as LucideMailX,
  Mailbox as LucideMailbox,
  Mails as LucideMails,
  Map as LucideMap,
  Map_pin as LucideMapPin,
  Map_pin_check as LucideMapPinCheck,
  Map_pin_check_inside as LucideMapPinCheckInside,
  Map_pin_house as LucideMapPinHouse,
  Map_pin_minus as LucideMapPinMinus,
  Map_pin_minus_inside as LucideMapPinMinusInside,
  Map_pin_off as LucideMapPinOff,
  Map_pin_plus as LucideMapPinPlus,
  Map_pin_plus_inside as LucideMapPinPlusInside,
  Map_pin_x as LucideMapPinX,
  Map_pin_x_inside as LucideMapPinXInside,
  Map_pinned as LucideMapPinned,
  Martini as LucideMartini,
  Maximize as LucideMaximize,
  Maximize_2 as LucideMaximize2,
  Medal as LucideMedal,
  Megaphone as LucideMegaphone,
  Megaphone_off as LucideMegaphoneOff,
  Meh as LucideMeh,
  Memory_stick as LucideMemoryStick,
  Menu as LucideMenu,
  Square_menu as LucideMenuSquare,
  Merge as LucideMerge,
  Message_circle as LucideMessageCircle,
  Message_circle_code as LucideMessageCircleCode,
  Message_circle_dashed as LucideMessageCircleDashed,
  Message_circle_heart as LucideMessageCircleHeart,
  Message_circle_more as LucideMessageCircleMore,
  Message_circle_off as LucideMessageCircleOff,
  Message_circle_plus as LucideMessageCirclePlus,
  Message_circle_question as LucideMessageCircleQuestion,
  Message_circle_reply as LucideMessageCircleReply,
  Message_circle_warning as LucideMessageCircleWarning,
  Message_circle_x as LucideMessageCircleX,
  Message_square as LucideMessageSquare,
  Message_square_code as LucideMessageSquareCode,
  Message_square_dashed as LucideMessageSquareDashed,
  Message_square_diff as LucideMessageSquareDiff,
  Message_square_dot as LucideMessageSquareDot,
  Message_square_heart as LucideMessageSquareHeart,
  Message_square_lock as LucideMessageSquareLock,
  Message_square_more as LucideMessageSquareMore,
  Message_square_off as LucideMessageSquareOff,
  Message_square_plus as LucideMessageSquarePlus,
  Message_square_quote as LucideMessageSquareQuote,
  Message_square_reply as LucideMessageSquareReply,
  Message_square_share as LucideMessageSquareShare,
  Message_square_text as LucideMessageSquareText,
  Message_square_warning as LucideMessageSquareWarning,
  Message_square_x as LucideMessageSquareX,
  Messages_square as LucideMessagesSquare,
  Mic as LucideMic,
  Mic_vocal as LucideMic2,
  Mic_off as LucideMicOff,
  Mic_vocal as LucideMicVocal,
  Microchip as LucideMicrochip,
  Microscope as LucideMicroscope,
  Microwave as LucideMicrowave,
  Milestone as LucideMilestone,
  Milk as LucideMilk,
  Milk_off as LucideMilkOff,
  Minimize as LucideMinimize,
  Minimize_2 as LucideMinimize2,
  Minus as LucideMinus,
  Circle_minus as LucideMinusCircle,
  Square_minus as LucideMinusSquare,
  Monitor as LucideMonitor,
  Monitor_check as LucideMonitorCheck,
  Monitor_cog as LucideMonitorCog,
  Monitor_dot as LucideMonitorDot,
  Monitor_down as LucideMonitorDown,
  Monitor_off as LucideMonitorOff,
  Monitor_pause as LucideMonitorPause,
  Monitor_play as LucideMonitorPlay,
  Monitor_smartphone as LucideMonitorSmartphone,
  Monitor_speaker as LucideMonitorSpeaker,
  Monitor_stop as LucideMonitorStop,
  Monitor_up as LucideMonitorUp,
  Monitor_x as LucideMonitorX,
  Moon as LucideMoon,
  Moon_star as LucideMoonStar,
  Ellipsis as LucideMoreHorizontal,
  Ellipsis_vertical as LucideMoreVertical,
  Mountain as LucideMountain,
  Mountain_snow as LucideMountainSnow,
  Mouse as LucideMouse,
  Mouse_off as LucideMouseOff,
  Mouse_pointer as LucideMousePointer,
  Mouse_pointer_2 as LucideMousePointer2,
  Mouse_pointer_ban as LucideMousePointerBan,
  Mouse_pointer_click as LucideMousePointerClick,
  Square_dashed_mouse_pointer as LucideMousePointerSquareDashed,
  Move as LucideMove,
  Move_3d as LucideMove3D,
  Move_3d as LucideMove3d,
  Move_diagonal as LucideMoveDiagonal,
  Move_diagonal_2 as LucideMoveDiagonal2,
  Move_down as LucideMoveDown,
  Move_down_left as LucideMoveDownLeft,
  Move_down_right as LucideMoveDownRight,
  Move_horizontal as LucideMoveHorizontal,
  Move_left as LucideMoveLeft,
  Move_right as LucideMoveRight,
  Move_up as LucideMoveUp,
  Move_up_left as LucideMoveUpLeft,
  Move_up_right as LucideMoveUpRight,
  Move_vertical as LucideMoveVertical,
  Music as LucideMusic,
  Music_2 as LucideMusic2,
  Music_3 as LucideMusic3,
  Music_4 as LucideMusic4,
  Navigation as LucideNavigation,
  Navigation_2 as LucideNavigation2,
  Navigation_2_off as LucideNavigation2Off,
  Navigation_off as LucideNavigationOff,
  Network as LucideNetwork,
  Newspaper as LucideNewspaper,
  Nfc as LucideNfc,
  Notebook as LucideNotebook,
  Notebook_pen as LucideNotebookPen,
  Notebook_tabs as LucideNotebookTabs,
  Notebook_text as LucideNotebookText,
  Notepad_text as LucideNotepadText,
  Notepad_text_dashed as LucideNotepadTextDashed,
  Nut as LucideNut,
  Nut_off as LucideNutOff,
  Octagon as LucideOctagon,
  Octagon_alert as LucideOctagonAlert,
  Octagon_minus as LucideOctagonMinus,
  Octagon_pause as LucideOctagonPause,
  Octagon_x as LucideOctagonX,
  Omega as LucideOmega,
  Option as LucideOption,
  Orbit as LucideOrbit,
  Origami as LucideOrigami,
  Indent_decrease as LucideOutdent,
  Package as LucidePackage,
  Package_2 as LucidePackage2,
  Package_check as LucidePackageCheck,
  Package_minus as LucidePackageMinus,
  Package_open as LucidePackageOpen,
  Package_plus as LucidePackagePlus,
  Package_search as LucidePackageSearch,
  Package_x as LucidePackageX,
  Paint_bucket as LucidePaintBucket,
  Paint_roller as LucidePaintRoller,
  Paintbrush as LucidePaintbrush,
  Paintbrush_vertical as LucidePaintbrush2,
  Paintbrush_vertical as LucidePaintbrushVertical,
  Palette as LucidePalette,
  Tree_palm as LucidePalmtree,
  Panel_bottom as LucidePanelBottom,
  Panel_bottom_close as LucidePanelBottomClose,
  Panel_bottom_dashed as LucidePanelBottomDashed,
  Panel_bottom_dashed as LucidePanelBottomInactive,
  Panel_bottom_open as LucidePanelBottomOpen,
  Panel_left as LucidePanelLeft,
  Panel_left_close as LucidePanelLeftClose,
  Panel_left_dashed as LucidePanelLeftDashed,
  Panel_left_dashed as LucidePanelLeftInactive,
  Panel_left_open as LucidePanelLeftOpen,
  Panel_right as LucidePanelRight,
  Panel_right_close as LucidePanelRightClose,
  Panel_right_dashed as LucidePanelRightDashed,
  Panel_right_dashed as LucidePanelRightInactive,
  Panel_right_open as LucidePanelRightOpen,
  Panel_top as LucidePanelTop,
  Panel_top_close as LucidePanelTopClose,
  Panel_top_dashed as LucidePanelTopDashed,
  Panel_top_dashed as LucidePanelTopInactive,
  Panel_top_open as LucidePanelTopOpen,
  Panels_left_bottom as LucidePanelsLeftBottom,
  Columns_3 as LucidePanelsLeftRight,
  Panels_right_bottom as LucidePanelsRightBottom,
  Rows_3 as LucidePanelsTopBottom,
  Panels_top_left as LucidePanelsTopLeft,
  Paperclip as LucidePaperclip,
  Parentheses as LucideParentheses,
  Circle_parking as LucideParkingCircle,
  Circle_parking_off as LucideParkingCircleOff,
  Parking_meter as LucideParkingMeter,
  Square_parking as LucideParkingSquare,
  Square_parking_off as LucideParkingSquareOff,
  Party_popper as LucidePartyPopper,
  Pause as LucidePause,
  Circle_pause as LucidePauseCircle,
  Octagon_pause as LucidePauseOctagon,
  Paw_print as LucidePawPrint,
  Pc_case as LucidePcCase,
  Pen as LucidePen,
  Square_pen as LucidePenBox,
  Pen_line as LucidePenLine,
  Pen_off as LucidePenOff,
  Square_pen as LucidePenSquare,
  Pen_tool as LucidePenTool,
  Pencil as LucidePencil,
  Pencil_line as LucidePencilLine,
  Pencil_off as LucidePencilOff,
  Pencil_ruler as LucidePencilRuler,
  Pentagon as LucidePentagon,
  Percent as LucidePercent,
  Circle_percent as LucidePercentCircle,
  Diamond_percent as LucidePercentDiamond,
  Square_percent as LucidePercentSquare,
  Person_standing as LucidePersonStanding,
  Philippine_peso as LucidePhilippinePeso,
  Phone as LucidePhone,
  Phone_call as LucidePhoneCall,
  Phone_forwarded as LucidePhoneForwarded,
  Phone_incoming as LucidePhoneIncoming,
  Phone_missed as LucidePhoneMissed,
  Phone_off as LucidePhoneOff,
  Phone_outgoing as LucidePhoneOutgoing,
  Pi as LucidePi,
  Square_pi as LucidePiSquare,
  Piano as LucidePiano,
  Pickaxe as LucidePickaxe,
  Picture_in_picture as LucidePictureInPicture,
  Picture_in_picture_2 as LucidePictureInPicture2,
  Chart_pie as LucidePieChart,
  Piggy_bank as LucidePiggyBank,
  Pilcrow as LucidePilcrow,
  Pilcrow_left as LucidePilcrowLeft,
  Pilcrow_right as LucidePilcrowRight,
  Square_pilcrow as LucidePilcrowSquare,
  Pill as LucidePill,
  Pill_bottle as LucidePillBottle,
  Pin as LucidePin,
  Pin_off as LucidePinOff,
  Pipette as LucidePipette,
  Pizza as LucidePizza,
  Plane as LucidePlane,
  Plane_landing as LucidePlaneLanding,
  Plane_takeoff as LucidePlaneTakeoff,
  Play as LucidePlay,
  Circle_play as LucidePlayCircle,
  Square_play as LucidePlaySquare,
  Plug as LucidePlug,
  Plug_2 as LucidePlug2,
  Plug_zap as LucidePlugZap,
  Plug_zap as LucidePlugZap2,
  Plus as LucidePlus,
  Circle_plus as LucidePlusCircle,
  Square_plus as LucidePlusSquare,
  Pocket as LucidePocket,
  Pocket_knife as LucidePocketKnife,
  Podcast as LucidePodcast,
  Pointer as LucidePointer,
  Pointer_off as LucidePointerOff,
  Popcorn as LucidePopcorn,
  Popsicle as LucidePopsicle,
  Pound_sterling as LucidePoundSterling,
  Power as LucidePower,
  Circle_power as LucidePowerCircle,
  Power_off as LucidePowerOff,
  Square_power as LucidePowerSquare,
  Presentation as LucidePresentation,
  Printer as LucidePrinter,
  Printer_check as LucidePrinterCheck,
  Projector as LucideProjector,
  Proportions as LucideProportions,
  Puzzle as LucidePuzzle,
  Pyramid as LucidePyramid,
  Qr_code as LucideQrCode,
  Quote as LucideQuote,
  Rabbit as LucideRabbit,
  Radar as LucideRadar,
  Radiation as LucideRadiation,
  Radical as LucideRadical,
  Radio as LucideRadio,
  Radio_receiver as LucideRadioReceiver,
  Radio_tower as LucideRadioTower,
  Radius as LucideRadius,
  Rail_symbol as LucideRailSymbol,
  Rainbow as LucideRainbow,
  Rat as LucideRat,
  Ratio as LucideRatio,
  Receipt as LucideReceipt,
  Receipt_cent as LucideReceiptCent,
  Receipt_euro as LucideReceiptEuro,
  Receipt_indian_rupee as LucideReceiptIndianRupee,
  Receipt_japanese_yen as LucideReceiptJapaneseYen,
  Receipt_pound_sterling as LucideReceiptPoundSterling,
  Receipt_russian_ruble as LucideReceiptRussianRuble,
  Receipt_swiss_franc as LucideReceiptSwissFranc,
  Receipt_text as LucideReceiptText,
  Rectangle_ellipsis as LucideRectangleEllipsis,
  Rectangle_horizontal as LucideRectangleHorizontal,
  Rectangle_vertical as LucideRectangleVertical,
  Recycle as LucideRecycle,
  Redo as LucideRedo,
  Redo_2 as LucideRedo2,
  Redo_dot as LucideRedoDot,
  Refresh_ccw as LucideRefreshCcw,
  Refresh_ccw_dot as LucideRefreshCcwDot,
  Refresh_cw as LucideRefreshCw,
  Refresh_cw_off as LucideRefreshCwOff,
  Refrigerator as LucideRefrigerator,
  Regex as LucideRegex,
  Remove_formatting as LucideRemoveFormatting,
  Repeat as LucideRepeat,
  Repeat_1 as LucideRepeat1,
  Repeat_2 as LucideRepeat2,
  Replace as LucideReplace,
  Replace_all as LucideReplaceAll,
  Reply as LucideReply,
  Reply_all as LucideReplyAll,
  Rewind as LucideRewind,
  Ribbon as LucideRibbon,
  Rocket as LucideRocket,
  Rocking_chair as LucideRockingChair,
  Roller_coaster as LucideRollerCoaster,
  Rotate_3d as LucideRotate3D,
  Rotate_3d as LucideRotate3d,
  Rotate_ccw as LucideRotateCcw,
  Rotate_ccw_square as LucideRotateCcwSquare,
  Rotate_cw as LucideRotateCw,
  Rotate_cw_square as LucideRotateCwSquare,
  Route as LucideRoute,
  Route_off as LucideRouteOff,
  Router as LucideRouter,
  Rows_2 as LucideRows,
  Rows_2 as LucideRows2,
  Rows_3 as LucideRows3,
  Rows_4 as LucideRows4,
  Rss as LucideRss,
  Ruler as LucideRuler,
  Russian_ruble as LucideRussianRuble,
  Sailboat as LucideSailboat,
  Salad as LucideSalad,
  Sandwich as LucideSandwich,
  Satellite as LucideSatellite,
  Satellite_dish as LucideSatelliteDish,
  Save as LucideSave,
  Save_all as LucideSaveAll,
  Save_off as LucideSaveOff,
  Scale as LucideScale,
  Scale_3d as LucideScale3D,
  Scale_3d as LucideScale3d,
  Scaling as LucideScaling,
  Scan as LucideScan,
  Scan_barcode as LucideScanBarcode,
  Scan_eye as LucideScanEye,
  Scan_face as LucideScanFace,
  Scan_line as LucideScanLine,
  Scan_qr_code as LucideScanQrCode,
  Scan_search as LucideScanSearch,
  Scan_text as LucideScanText,
  Chart_scatter as LucideScatterChart,
  School as LucideSchool,
  University as LucideSchool2,
  Scissors as LucideScissors,
  Scissors_line_dashed as LucideScissorsLineDashed,
  Square_scissors as LucideScissorsSquare,
  Square_bottom_dashed_scissors as LucideScissorsSquareDashedBottom,
  Screen_share as LucideScreenShare,
  Screen_share_off as LucideScreenShareOff,
  Scroll as LucideScroll,
  Scroll_text as LucideScrollText,
  Search as LucideSearch,
  Search_check as LucideSearchCheck,
  Search_code as LucideSearchCode,
  Search_slash as LucideSearchSlash,
  Search_x as LucideSearchX,
  Section as LucideSection,
  Send as LucideSend,
  Send_horizontal as LucideSendHorizonal,
  Send_horizontal as LucideSendHorizontal,
  Send_to_back as LucideSendToBack,
  Separator_horizontal as LucideSeparatorHorizontal,
  Separator_vertical as LucideSeparatorVertical,
  Server as LucideServer,
  Server_cog as LucideServerCog,
  Server_crash as LucideServerCrash,
  Server_off as LucideServerOff,
  Settings as LucideSettings,
  Settings_2 as LucideSettings2,
  Shapes as LucideShapes,
  Share as LucideShare,
  Share_2 as LucideShare2,
  Sheet as LucideSheet,
  Shell as LucideShell,
  Shield as LucideShield,
  Shield_alert as LucideShieldAlert,
  Shield_ban as LucideShieldBan,
  Shield_check as LucideShieldCheck,
  Shield_x as LucideShieldClose,
  Shield_ellipsis as LucideShieldEllipsis,
  Shield_half as LucideShieldHalf,
  Shield_minus as LucideShieldMinus,
  Shield_off as LucideShieldOff,
  Shield_plus as LucideShieldPlus,
  Shield_question as LucideShieldQuestion,
  Shield_x as LucideShieldX,
  Ship as LucideShip,
  Ship_wheel as LucideShipWheel,
  Shirt as LucideShirt,
  Shopping_bag as LucideShoppingBag,
  Shopping_basket as LucideShoppingBasket,
  Shopping_cart as LucideShoppingCart,
  Shovel as LucideShovel,
  Shower_head as LucideShowerHead,
  Shrink as LucideShrink,
  Shrub as LucideShrub,
  Shuffle as LucideShuffle,
  Panel_left as LucideSidebar,
  Panel_left_close as LucideSidebarClose,
  Panel_left_open as LucideSidebarOpen,
  Sigma as LucideSigma,
  Square_sigma as LucideSigmaSquare,
  Signal as LucideSignal,
  Signal_high as LucideSignalHigh,
  Signal_low as LucideSignalLow,
  Signal_medium as LucideSignalMedium,
  Signal_zero as LucideSignalZero,
  Signature as LucideSignature,
  Signpost as LucideSignpost,
  Signpost_big as LucideSignpostBig,
  Siren as LucideSiren,
  Skip_back as LucideSkipBack,
  Skip_forward as LucideSkipForward,
  Skull as LucideSkull,
  Slack as LucideSlack,
  Slash as LucideSlash,
  Square_slash as LucideSlashSquare,
  Slice as LucideSlice,
  Sliders_vertical as LucideSliders,
  Sliders_horizontal as LucideSlidersHorizontal,
  Sliders_vertical as LucideSlidersVertical,
  Smartphone as LucideSmartphone,
  Smartphone_charging as LucideSmartphoneCharging,
  Smartphone_nfc as LucideSmartphoneNfc,
  Smile as LucideSmile,
  Smile_plus as LucideSmilePlus,
  Snail as LucideSnail,
  Snowflake as LucideSnowflake,
  Sofa as LucideSofa,
  Arrow_up_narrow_wide as LucideSortAsc,
  Arrow_down_wide_narrow as LucideSortDesc,
  Soup as LucideSoup,
  Space as LucideSpace,
  Spade as LucideSpade,
  Sparkle as LucideSparkle,
  Sparkles as LucideSparkles,
  Speaker as LucideSpeaker,
  Speech as LucideSpeech,
  Spell_check as LucideSpellCheck,
  Spell_check_2 as LucideSpellCheck2,
  Spline as LucideSpline,
  Split as LucideSplit,
  Square_split_horizontal as LucideSplitSquareHorizontal,
  Square_split_vertical as LucideSplitSquareVertical,
  Spray_can as LucideSprayCan,
  Sprout as LucideSprout,
  Square as LucideSquare,
  Square_activity as LucideSquareActivity,
  Square_arrow_down as LucideSquareArrowDown,
  Square_arrow_down_left as LucideSquareArrowDownLeft,
  Square_arrow_down_right as LucideSquareArrowDownRight,
  Square_arrow_left as LucideSquareArrowLeft,
  Square_arrow_out_down_left as LucideSquareArrowOutDownLeft,
  Square_arrow_out_down_right as LucideSquareArrowOutDownRight,
  Square_arrow_out_up_left as LucideSquareArrowOutUpLeft,
  Square_arrow_out_up_right as LucideSquareArrowOutUpRight,
  Square_arrow_right as LucideSquareArrowRight,
  Square_arrow_up as LucideSquareArrowUp,
  Square_arrow_up_left as LucideSquareArrowUpLeft,
  Square_arrow_up_right as LucideSquareArrowUpRight,
  Square_asterisk as LucideSquareAsterisk,
  Square_bottom_dashed_scissors as LucideSquareBottomDashedScissors,
  Square_chart_gantt as LucideSquareChartGantt,
  Square_check as LucideSquareCheck,
  Square_check_big as LucideSquareCheckBig,
  Square_chevron_down as LucideSquareChevronDown,
  Square_chevron_left as LucideSquareChevronLeft,
  Square_chevron_right as LucideSquareChevronRight,
  Square_chevron_up as LucideSquareChevronUp,
  Square_code as LucideSquareCode,
  Square_dashed as LucideSquareDashed,
  Square_dashed_bottom as LucideSquareDashedBottom,
  Square_dashed_bottom_code as LucideSquareDashedBottomCode,
  Square_dashed_kanban as LucideSquareDashedKanban,
  Square_dashed_mouse_pointer as LucideSquareDashedMousePointer,
  Square_divide as LucideSquareDivide,
  Square_dot as LucideSquareDot,
  Square_equal as LucideSquareEqual,
  Square_function as LucideSquareFunction,
  Square_chart_gantt as LucideSquareGanttChart,
  Square_kanban as LucideSquareKanban,
  Square_library as LucideSquareLibrary,
  Square_m as LucideSquareM,
  Square_menu as LucideSquareMenu,
  Square_minus as LucideSquareMinus,
  Square_mouse_pointer as LucideSquareMousePointer,
  Square_parking as LucideSquareParking,
  Square_parking_off as LucideSquareParkingOff,
  Square_pen as LucideSquarePen,
  Square_percent as LucideSquarePercent,
  Square_pi as LucideSquarePi,
  Square_pilcrow as LucideSquarePilcrow,
  Square_play as LucideSquarePlay,
  Square_plus as LucideSquarePlus,
  Square_power as LucideSquarePower,
  Square_radical as LucideSquareRadical,
  Square_scissors as LucideSquareScissors,
  Square_sigma as LucideSquareSigma,
  Square_slash as LucideSquareSlash,
  Square_split_horizontal as LucideSquareSplitHorizontal,
  Square_split_vertical as LucideSquareSplitVertical,
  Square_square as LucideSquareSquare,
  Square_stack as LucideSquareStack,
  Square_terminal as LucideSquareTerminal,
  Square_user as LucideSquareUser,
  Square_user_round as LucideSquareUserRound,
  Square_x as LucideSquareX,
  Squircle as LucideSquircle,
  Squirrel as LucideSquirrel,
  Stamp as LucideStamp,
  Star as LucideStar,
  Star_half as LucideStarHalf,
  Star_off as LucideStarOff,
  Sparkles as LucideStars,
  Step_back as LucideStepBack,
  Step_forward as LucideStepForward,
  Stethoscope as LucideStethoscope,
  Sticker as LucideSticker,
  Sticky_note as LucideStickyNote,
  Circle_stop as LucideStopCircle,
  Store as LucideStore,
  Stretch_horizontal as LucideStretchHorizontal,
  Stretch_vertical as LucideStretchVertical,
  Strikethrough as LucideStrikethrough,
  Subscript as LucideSubscript,
  Captions as LucideSubtitles,
  Sun as LucideSun,
  Sun_dim as LucideSunDim,
  Sun_medium as LucideSunMedium,
  Sun_moon as LucideSunMoon,
  Sun_snow as LucideSunSnow,
  Sunrise as LucideSunrise,
  Sunset as LucideSunset,
  Superscript as LucideSuperscript,
  Swatch_book as LucideSwatchBook,
  Swiss_franc as LucideSwissFranc,
  Switch_camera as LucideSwitchCamera,
  Sword as LucideSword,
  Swords as LucideSwords,
  Syringe as LucideSyringe,
  Table as LucideTable,
  Table_2 as LucideTable2,
  Table_cells_merge as LucideTableCellsMerge,
  Table_cells_split as LucideTableCellsSplit,
  Table_columns_split as LucideTableColumnsSplit,
  Table_of_contents as LucideTableOfContents,
  Table_properties as LucideTableProperties,
  Table_rows_split as LucideTableRowsSplit,
  Tablet as LucideTablet,
  Tablet_smartphone as LucideTabletSmartphone,
  Tablets as LucideTablets,
  Tag as LucideTag,
  Tags as LucideTags,
  Tally_1 as LucideTally1,
  Tally_2 as LucideTally2,
  Tally_3 as LucideTally3,
  Tally_4 as LucideTally4,
  Tally_5 as LucideTally5,
  Tangent as LucideTangent,
  Target as LucideTarget,
  Telescope as LucideTelescope,
  Tent as LucideTent,
  Tent_tree as LucideTentTree,
  Terminal as LucideTerminal,
  Square_terminal as LucideTerminalSquare,
  Test_tube as LucideTestTube,
  Test_tube_diagonal as LucideTestTube2,
  Test_tube_diagonal as LucideTestTubeDiagonal,
  Test_tubes as LucideTestTubes,
  Text as LucideText,
  Text_cursor as LucideTextCursor,
  Text_cursor_input as LucideTextCursorInput,
  Text_quote as LucideTextQuote,
  Text_search as LucideTextSearch,
  Text_select as LucideTextSelect,
  Text_select as LucideTextSelection,
  Theater as LucideTheater,
  Thermometer as LucideThermometer,
  Thermometer_snowflake as LucideThermometerSnowflake,
  Thermometer_sun as LucideThermometerSun,
  Thumbs_down as LucideThumbsDown,
  Thumbs_up as LucideThumbsUp,
  Ticket as LucideTicket,
  Ticket_check as LucideTicketCheck,
  Ticket_minus as LucideTicketMinus,
  Ticket_percent as LucideTicketPercent,
  Ticket_plus as LucideTicketPlus,
  Ticket_slash as LucideTicketSlash,
  Ticket_x as LucideTicketX,
  Tickets as LucideTickets,
  Tickets_plane as LucideTicketsPlane,
  Timer as LucideTimer,
  Timer_off as LucideTimerOff,
  Timer_reset as LucideTimerReset,
  Toggle_left as LucideToggleLeft,
  Toggle_right as LucideToggleRight,
  Tornado as LucideTornado,
  Torus as LucideTorus,
  Touchpad as LucideTouchpad,
  Touchpad_off as LucideTouchpadOff,
  Tower_control as LucideTowerControl,
  Toy_brick as LucideToyBrick,
  Tractor as LucideTractor,
  Traffic_cone as LucideTrafficCone,
  Tram_front as LucideTrain,
  Train_front as LucideTrainFront,
  Train_front_tunnel as LucideTrainFrontTunnel,
  Train_track as LucideTrainTrack,
  Tram_front as LucideTramFront,
  Trash as LucideTrash,
  Trash_2 as LucideTrash2,
  Tree_deciduous as LucideTreeDeciduous,
  Tree_palm as LucideTreePalm,
  Tree_pine as LucideTreePine,
  Trees as LucideTrees,
  Trello as LucideTrello,
  Trending_down as LucideTrendingDown,
  Trending_up as LucideTrendingUp,
  Trending_up_down as LucideTrendingUpDown,
  Triangle as LucideTriangle,
  Triangle_alert as LucideTriangleAlert,
  Triangle_right as LucideTriangleRight,
  Trophy as LucideTrophy,
  Truck as LucideTruck,
  Turtle as LucideTurtle,
  Tv as LucideTv,
  Tv_minimal as LucideTv2,
  Tv_minimal as LucideTvMinimal,
  Tv_minimal_play as LucideTvMinimalPlay,
  Twitch as LucideTwitch,
  Twitter as LucideTwitter,
  Type as LucideType,
  Type_outline as LucideTypeOutline,
  Umbrella as LucideUmbrella,
  Umbrella_off as LucideUmbrellaOff,
  Underline as LucideUnderline,
  Undo as LucideUndo,
  Undo_2 as LucideUndo2,
  Undo_dot as LucideUndoDot,
  Unfold_horizontal as LucideUnfoldHorizontal,
  Unfold_vertical as LucideUnfoldVertical,
  Ungroup as LucideUngroup,
  University as LucideUniversity,
  Unlink as LucideUnlink,
  Unlink_2 as LucideUnlink2,
  Lock_open as LucideUnlock,
  Lock_keyhole_open as LucideUnlockKeyhole,
  Unplug as LucideUnplug,
  Upload as LucideUpload,
  Cloud_upload as LucideUploadCloud,
  Usb as LucideUsb,
  User as LucideUser,
  User_round as LucideUser2,
  User_check as LucideUserCheck,
  User_round_check as LucideUserCheck2,
  Circle_user as LucideUserCircle,
  Circle_user_round as LucideUserCircle2,
  User_cog as LucideUserCog,
  User_round_cog as LucideUserCog2,
  User_minus as LucideUserMinus,
  User_round_minus as LucideUserMinus2,
  User_pen as LucideUserPen,
  User_plus as LucideUserPlus,
  User_round_plus as LucideUserPlus2,
  User_round as LucideUserRound,
  User_round_check as LucideUserRoundCheck,
  User_round_cog as LucideUserRoundCog,
  User_round_minus as LucideUserRoundMinus,
  User_round_pen as LucideUserRoundPen,
  User_round_plus as LucideUserRoundPlus,
  User_round_search as LucideUserRoundSearch,
  User_round_x as LucideUserRoundX,
  User_search as LucideUserSearch,
  Square_user as LucideUserSquare,
  Square_user_round as LucideUserSquare2,
  User_x as LucideUserX,
  User_round_x as LucideUserX2,
  Users as LucideUsers,
  Users_round as LucideUsers2,
  Users_round as LucideUsersRound,
  Utensils as LucideUtensils,
  Utensils_crossed as LucideUtensilsCrossed,
  Utility_pole as LucideUtilityPole,
  Variable as LucideVariable,
  Vault as LucideVault,
  Vegan as LucideVegan,
  Venetian_mask as LucideVenetianMask,
  Badge_check as LucideVerified,
  Vibrate as LucideVibrate,
  Vibrate_off as LucideVibrateOff,
  Video as LucideVideo,
  Video_off as LucideVideoOff,
  Videotape as LucideVideotape,
  View as LucideView,
  Voicemail as LucideVoicemail,
  Volleyball as LucideVolleyball,
  Volume as LucideVolume,
  Volume_1 as LucideVolume1,
  Volume_2 as LucideVolume2,
  Volume_off as LucideVolumeOff,
  Volume_x as LucideVolumeX,
  Vote as LucideVote,
  Wallet as LucideWallet,
  Wallet_minimal as LucideWallet2,
  Wallet_cards as LucideWalletCards,
  Wallet_minimal as LucideWalletMinimal,
  Wallpaper as LucideWallpaper,
  Wand as LucideWand,
  Wand_sparkles as LucideWand2,
  Wand_sparkles as LucideWandSparkles,
  Warehouse as LucideWarehouse,
  Washing_machine as LucideWashingMachine,
  Watch as LucideWatch,
  Waves as LucideWaves,
  Waypoints as LucideWaypoints,
  Webcam as LucideWebcam,
  Webhook as LucideWebhook,
  Webhook_off as LucideWebhookOff,
  Weight as LucideWeight,
  Wheat as LucideWheat,
  Wheat_off as LucideWheatOff,
  Whole_word as LucideWholeWord,
  Wifi as LucideWifi,
  Wifi_high as LucideWifiHigh,
  Wifi_low as LucideWifiLow,
  Wifi_off as LucideWifiOff,
  Wifi_zero as LucideWifiZero,
  Wind as LucideWind,
  Wind_arrow_down as LucideWindArrowDown,
  Wine as LucideWine,
  Wine_off as LucideWineOff,
  Workflow as LucideWorkflow,
  Worm as LucideWorm,
  Wrap_text as LucideWrapText,
  Wrench as LucideWrench,
  X as LucideX,
  Circle_x as LucideXCircle,
  Octagon_x as LucideXOctagon,
  Square_x as LucideXSquare,
  Youtube as LucideYoutube,
  Zap as LucideZap,
  Zap_off as LucideZapOff,
  Zoom_in as LucideZoomIn,
  Zoom_out as LucideZoomOut,
  Luggage,
  Luggage as LuggageIcon,
  Square_m as MSquare,
  Square_m as MSquareIcon,
  Magnet,
  Magnet as MagnetIcon,
  Mail,
  Mail_check as MailCheck,
  Mail_check as MailCheckIcon,
  Mail as MailIcon,
  Mail_minus as MailMinus,
  Mail_minus as MailMinusIcon,
  Mail_open as MailOpen,
  Mail_open as MailOpenIcon,
  Mail_plus as MailPlus,
  Mail_plus as MailPlusIcon,
  Mail_question as MailQuestion,
  Mail_question as MailQuestionIcon,
  Mail_search as MailSearch,
  Mail_search as MailSearchIcon,
  Mail_warning as MailWarning,
  Mail_warning as MailWarningIcon,
  Mail_x as MailX,
  Mail_x as MailXIcon,
  Mailbox,
  Mailbox as MailboxIcon,
  Mails,
  Mails as MailsIcon,
  Map,
  Map as MapIcon,
  Map_pin as MapPin,
  Map_pin_check as MapPinCheck,
  Map_pin_check as MapPinCheckIcon,
  Map_pin_check_inside as MapPinCheckInside,
  Map_pin_check_inside as MapPinCheckInsideIcon,
  Map_pin_house as MapPinHouse,
  Map_pin_house as MapPinHouseIcon,
  Map_pin as MapPinIcon,
  Map_pin_minus as MapPinMinus,
  Map_pin_minus as MapPinMinusIcon,
  Map_pin_minus_inside as MapPinMinusInside,
  Map_pin_minus_inside as MapPinMinusInsideIcon,
  Map_pin_off as MapPinOff,
  Map_pin_off as MapPinOffIcon,
  Map_pin_plus as MapPinPlus,
  Map_pin_plus as MapPinPlusIcon,
  Map_pin_plus_inside as MapPinPlusInside,
  Map_pin_plus_inside as MapPinPlusInsideIcon,
  Map_pin_x as MapPinX,
  Map_pin_x as MapPinXIcon,
  Map_pin_x_inside as MapPinXInside,
  Map_pin_x_inside as MapPinXInsideIcon,
  Map_pinned as MapPinned,
  Map_pinned as MapPinnedIcon,
  Martini,
  Martini as MartiniIcon,
  Maximize,
  Maximize_2 as Maximize2,
  Maximize_2 as Maximize2Icon,
  Maximize as MaximizeIcon,
  Medal,
  Medal as MedalIcon,
  Megaphone,
  Megaphone as MegaphoneIcon,
  Megaphone_off as MegaphoneOff,
  Megaphone_off as MegaphoneOffIcon,
  Meh,
  Meh as MehIcon,
  Memory_stick as MemoryStick,
  Memory_stick as MemoryStickIcon,
  Menu,
  Menu as MenuIcon,
  Square_menu as MenuSquare,
  Square_menu as MenuSquareIcon,
  Merge,
  Merge as MergeIcon,
  Message_circle as MessageCircle,
  Message_circle_code as MessageCircleCode,
  Message_circle_code as MessageCircleCodeIcon,
  Message_circle_dashed as MessageCircleDashed,
  Message_circle_dashed as MessageCircleDashedIcon,
  Message_circle_heart as MessageCircleHeart,
  Message_circle_heart as MessageCircleHeartIcon,
  Message_circle as MessageCircleIcon,
  Message_circle_more as MessageCircleMore,
  Message_circle_more as MessageCircleMoreIcon,
  Message_circle_off as MessageCircleOff,
  Message_circle_off as MessageCircleOffIcon,
  Message_circle_plus as MessageCirclePlus,
  Message_circle_plus as MessageCirclePlusIcon,
  Message_circle_question as MessageCircleQuestion,
  Message_circle_question as MessageCircleQuestionIcon,
  Message_circle_reply as MessageCircleReply,
  Message_circle_reply as MessageCircleReplyIcon,
  Message_circle_warning as MessageCircleWarning,
  Message_circle_warning as MessageCircleWarningIcon,
  Message_circle_x as MessageCircleX,
  Message_circle_x as MessageCircleXIcon,
  Message_square as MessageSquare,
  Message_square_code as MessageSquareCode,
  Message_square_code as MessageSquareCodeIcon,
  Message_square_dashed as MessageSquareDashed,
  Message_square_dashed as MessageSquareDashedIcon,
  Message_square_diff as MessageSquareDiff,
  Message_square_diff as MessageSquareDiffIcon,
  Message_square_dot as MessageSquareDot,
  Message_square_dot as MessageSquareDotIcon,
  Message_square_heart as MessageSquareHeart,
  Message_square_heart as MessageSquareHeartIcon,
  Message_square as MessageSquareIcon,
  Message_square_lock as MessageSquareLock,
  Message_square_lock as MessageSquareLockIcon,
  Message_square_more as MessageSquareMore,
  Message_square_more as MessageSquareMoreIcon,
  Message_square_off as MessageSquareOff,
  Message_square_off as MessageSquareOffIcon,
  Message_square_plus as MessageSquarePlus,
  Message_square_plus as MessageSquarePlusIcon,
  Message_square_quote as MessageSquareQuote,
  Message_square_quote as MessageSquareQuoteIcon,
  Message_square_reply as MessageSquareReply,
  Message_square_reply as MessageSquareReplyIcon,
  Message_square_share as MessageSquareShare,
  Message_square_share as MessageSquareShareIcon,
  Message_square_text as MessageSquareText,
  Message_square_text as MessageSquareTextIcon,
  Message_square_warning as MessageSquareWarning,
  Message_square_warning as MessageSquareWarningIcon,
  Message_square_x as MessageSquareX,
  Message_square_x as MessageSquareXIcon,
  Messages_square as MessagesSquare,
  Messages_square as MessagesSquareIcon,
  Mic,
  Mic_vocal as Mic2,
  Mic_vocal as Mic2Icon,
  Mic as MicIcon,
  Mic_off as MicOff,
  Mic_off as MicOffIcon,
  Mic_vocal as MicVocal,
  Mic_vocal as MicVocalIcon,
  Microchip,
  Microchip as MicrochipIcon,
  Microscope,
  Microscope as MicroscopeIcon,
  Microwave,
  Microwave as MicrowaveIcon,
  Milestone,
  Milestone as MilestoneIcon,
  Milk,
  Milk as MilkIcon,
  Milk_off as MilkOff,
  Milk_off as MilkOffIcon,
  Minimize,
  Minimize_2 as Minimize2,
  Minimize_2 as Minimize2Icon,
  Minimize as MinimizeIcon,
  Minus,
  Circle_minus as MinusCircle,
  Circle_minus as MinusCircleIcon,
  Minus as MinusIcon,
  Square_minus as MinusSquare,
  Square_minus as MinusSquareIcon,
  Monitor,
  Monitor_check as MonitorCheck,
  Monitor_check as MonitorCheckIcon,
  Monitor_cog as MonitorCog,
  Monitor_cog as MonitorCogIcon,
  Monitor_dot as MonitorDot,
  Monitor_dot as MonitorDotIcon,
  Monitor_down as MonitorDown,
  Monitor_down as MonitorDownIcon,
  Monitor as MonitorIcon,
  Monitor_off as MonitorOff,
  Monitor_off as MonitorOffIcon,
  Monitor_pause as MonitorPause,
  Monitor_pause as MonitorPauseIcon,
  Monitor_play as MonitorPlay,
  Monitor_play as MonitorPlayIcon,
  Monitor_smartphone as MonitorSmartphone,
  Monitor_smartphone as MonitorSmartphoneIcon,
  Monitor_speaker as MonitorSpeaker,
  Monitor_speaker as MonitorSpeakerIcon,
  Monitor_stop as MonitorStop,
  Monitor_stop as MonitorStopIcon,
  Monitor_up as MonitorUp,
  Monitor_up as MonitorUpIcon,
  Monitor_x as MonitorX,
  Monitor_x as MonitorXIcon,
  Moon,
  Moon as MoonIcon,
  Moon_star as MoonStar,
  Moon_star as MoonStarIcon,
  Ellipsis as MoreHorizontal,
  Ellipsis as MoreHorizontalIcon,
  Ellipsis_vertical as MoreVertical,
  Ellipsis_vertical as MoreVerticalIcon,
  Mountain,
  Mountain as MountainIcon,
  Mountain_snow as MountainSnow,
  Mountain_snow as MountainSnowIcon,
  Mouse,
  Mouse as MouseIcon,
  Mouse_off as MouseOff,
  Mouse_off as MouseOffIcon,
  Mouse_pointer as MousePointer,
  Mouse_pointer_2 as MousePointer2,
  Mouse_pointer_2 as MousePointer2Icon,
  Mouse_pointer_ban as MousePointerBan,
  Mouse_pointer_ban as MousePointerBanIcon,
  Mouse_pointer_click as MousePointerClick,
  Mouse_pointer_click as MousePointerClickIcon,
  Mouse_pointer as MousePointerIcon,
  Square_dashed_mouse_pointer as MousePointerSquareDashed,
  Square_dashed_mouse_pointer as MousePointerSquareDashedIcon,
  Move,
  Move_3d as Move3D,
  Move_3d as Move3DIcon,
  Move_3d as Move3d,
  Move_3d as Move3dIcon,
  Move_diagonal as MoveDiagonal,
  Move_diagonal_2 as MoveDiagonal2,
  Move_diagonal_2 as MoveDiagonal2Icon,
  Move_diagonal as MoveDiagonalIcon,
  Move_down as MoveDown,
  Move_down as MoveDownIcon,
  Move_down_left as MoveDownLeft,
  Move_down_left as MoveDownLeftIcon,
  Move_down_right as MoveDownRight,
  Move_down_right as MoveDownRightIcon,
  Move_horizontal as MoveHorizontal,
  Move_horizontal as MoveHorizontalIcon,
  Move as MoveIcon,
  Move_left as MoveLeft,
  Move_left as MoveLeftIcon,
  Move_right as MoveRight,
  Move_right as MoveRightIcon,
  Move_up as MoveUp,
  Move_up as MoveUpIcon,
  Move_up_left as MoveUpLeft,
  Move_up_left as MoveUpLeftIcon,
  Move_up_right as MoveUpRight,
  Move_up_right as MoveUpRightIcon,
  Move_vertical as MoveVertical,
  Move_vertical as MoveVerticalIcon,
  Music,
  Music_2 as Music2,
  Music_2 as Music2Icon,
  Music_3 as Music3,
  Music_3 as Music3Icon,
  Music_4 as Music4,
  Music_4 as Music4Icon,
  Music as MusicIcon,
  Navigation,
  Navigation_2 as Navigation2,
  Navigation_2 as Navigation2Icon,
  Navigation_2_off as Navigation2Off,
  Navigation_2_off as Navigation2OffIcon,
  Navigation as NavigationIcon,
  Navigation_off as NavigationOff,
  Navigation_off as NavigationOffIcon,
  Network,
  Network as NetworkIcon,
  Newspaper,
  Newspaper as NewspaperIcon,
  Nfc,
  Nfc as NfcIcon,
  Notebook,
  Notebook as NotebookIcon,
  Notebook_pen as NotebookPen,
  Notebook_pen as NotebookPenIcon,
  Notebook_tabs as NotebookTabs,
  Notebook_tabs as NotebookTabsIcon,
  Notebook_text as NotebookText,
  Notebook_text as NotebookTextIcon,
  Notepad_text as NotepadText,
  Notepad_text_dashed as NotepadTextDashed,
  Notepad_text_dashed as NotepadTextDashedIcon,
  Notepad_text as NotepadTextIcon,
  Nut,
  Nut as NutIcon,
  Nut_off as NutOff,
  Nut_off as NutOffIcon,
  Octagon,
  Octagon_alert as OctagonAlert,
  Octagon_alert as OctagonAlertIcon,
  Octagon as OctagonIcon,
  Octagon_minus as OctagonMinus,
  Octagon_minus as OctagonMinusIcon,
  Octagon_pause as OctagonPause,
  Octagon_pause as OctagonPauseIcon,
  Octagon_x as OctagonX,
  Octagon_x as OctagonXIcon,
  Omega,
  Omega as OmegaIcon,
  Option,
  Option as OptionIcon,
  Orbit,
  Orbit as OrbitIcon,
  Origami,
  Origami as OrigamiIcon,
  Indent_decrease as Outdent,
  Indent_decrease as OutdentIcon,
  Package,
  Package_2 as Package2,
  Package_2 as Package2Icon,
  Package_check as PackageCheck,
  Package_check as PackageCheckIcon,
  Package as PackageIcon,
  Package_minus as PackageMinus,
  Package_minus as PackageMinusIcon,
  Package_open as PackageOpen,
  Package_open as PackageOpenIcon,
  Package_plus as PackagePlus,
  Package_plus as PackagePlusIcon,
  Package_search as PackageSearch,
  Package_search as PackageSearchIcon,
  Package_x as PackageX,
  Package_x as PackageXIcon,
  Paint_bucket as PaintBucket,
  Paint_bucket as PaintBucketIcon,
  Paint_roller as PaintRoller,
  Paint_roller as PaintRollerIcon,
  Paintbrush,
  Paintbrush_vertical as Paintbrush2,
  Paintbrush_vertical as Paintbrush2Icon,
  Paintbrush as PaintbrushIcon,
  Paintbrush_vertical as PaintbrushVertical,
  Paintbrush_vertical as PaintbrushVerticalIcon,
  Palette,
  Palette as PaletteIcon,
  Tree_palm as Palmtree,
  Tree_palm as PalmtreeIcon,
  Panel_bottom as PanelBottom,
  Panel_bottom_close as PanelBottomClose,
  Panel_bottom_close as PanelBottomCloseIcon,
  Panel_bottom_dashed as PanelBottomDashed,
  Panel_bottom_dashed as PanelBottomDashedIcon,
  Panel_bottom as PanelBottomIcon,
  Panel_bottom_dashed as PanelBottomInactive,
  Panel_bottom_dashed as PanelBottomInactiveIcon,
  Panel_bottom_open as PanelBottomOpen,
  Panel_bottom_open as PanelBottomOpenIcon,
  Panel_left as PanelLeft,
  Panel_left_close as PanelLeftClose,
  Panel_left_close as PanelLeftCloseIcon,
  Panel_left_dashed as PanelLeftDashed,
  Panel_left_dashed as PanelLeftDashedIcon,
  Panel_left as PanelLeftIcon,
  Panel_left_dashed as PanelLeftInactive,
  Panel_left_dashed as PanelLeftInactiveIcon,
  Panel_left_open as PanelLeftOpen,
  Panel_left_open as PanelLeftOpenIcon,
  Panel_right as PanelRight,
  Panel_right_close as PanelRightClose,
  Panel_right_close as PanelRightCloseIcon,
  Panel_right_dashed as PanelRightDashed,
  Panel_right_dashed as PanelRightDashedIcon,
  Panel_right as PanelRightIcon,
  Panel_right_dashed as PanelRightInactive,
  Panel_right_dashed as PanelRightInactiveIcon,
  Panel_right_open as PanelRightOpen,
  Panel_right_open as PanelRightOpenIcon,
  Panel_top as PanelTop,
  Panel_top_close as PanelTopClose,
  Panel_top_close as PanelTopCloseIcon,
  Panel_top_dashed as PanelTopDashed,
  Panel_top_dashed as PanelTopDashedIcon,
  Panel_top as PanelTopIcon,
  Panel_top_dashed as PanelTopInactive,
  Panel_top_dashed as PanelTopInactiveIcon,
  Panel_top_open as PanelTopOpen,
  Panel_top_open as PanelTopOpenIcon,
  Panels_left_bottom as PanelsLeftBottom,
  Panels_left_bottom as PanelsLeftBottomIcon,
  Columns_3 as PanelsLeftRight,
  Columns_3 as PanelsLeftRightIcon,
  Panels_right_bottom as PanelsRightBottom,
  Panels_right_bottom as PanelsRightBottomIcon,
  Rows_3 as PanelsTopBottom,
  Rows_3 as PanelsTopBottomIcon,
  Panels_top_left as PanelsTopLeft,
  Panels_top_left as PanelsTopLeftIcon,
  Paperclip,
  Paperclip as PaperclipIcon,
  Parentheses,
  Parentheses as ParenthesesIcon,
  Circle_parking as ParkingCircle,
  Circle_parking as ParkingCircleIcon,
  Circle_parking_off as ParkingCircleOff,
  Circle_parking_off as ParkingCircleOffIcon,
  Parking_meter as ParkingMeter,
  Parking_meter as ParkingMeterIcon,
  Square_parking as ParkingSquare,
  Square_parking as ParkingSquareIcon,
  Square_parking_off as ParkingSquareOff,
  Square_parking_off as ParkingSquareOffIcon,
  Party_popper as PartyPopper,
  Party_popper as PartyPopperIcon,
  Pause,
  Circle_pause as PauseCircle,
  Circle_pause as PauseCircleIcon,
  Pause as PauseIcon,
  Octagon_pause as PauseOctagon,
  Octagon_pause as PauseOctagonIcon,
  Paw_print as PawPrint,
  Paw_print as PawPrintIcon,
  Pc_case as PcCase,
  Pc_case as PcCaseIcon,
  Pen,
  Square_pen as PenBox,
  Square_pen as PenBoxIcon,
  Pen as PenIcon,
  Pen_line as PenLine,
  Pen_line as PenLineIcon,
  Pen_off as PenOff,
  Pen_off as PenOffIcon,
  Square_pen as PenSquare,
  Square_pen as PenSquareIcon,
  Pen_tool as PenTool,
  Pen_tool as PenToolIcon,
  Pencil,
  Pencil as PencilIcon,
  Pencil_line as PencilLine,
  Pencil_line as PencilLineIcon,
  Pencil_off as PencilOff,
  Pencil_off as PencilOffIcon,
  Pencil_ruler as PencilRuler,
  Pencil_ruler as PencilRulerIcon,
  Pentagon,
  Pentagon as PentagonIcon,
  Percent,
  Circle_percent as PercentCircle,
  Circle_percent as PercentCircleIcon,
  Diamond_percent as PercentDiamond,
  Diamond_percent as PercentDiamondIcon,
  Percent as PercentIcon,
  Square_percent as PercentSquare,
  Square_percent as PercentSquareIcon,
  Person_standing as PersonStanding,
  Person_standing as PersonStandingIcon,
  Philippine_peso as PhilippinePeso,
  Philippine_peso as PhilippinePesoIcon,
  Phone,
  Phone_call as PhoneCall,
  Phone_call as PhoneCallIcon,
  Phone_forwarded as PhoneForwarded,
  Phone_forwarded as PhoneForwardedIcon,
  Phone as PhoneIcon,
  Phone_incoming as PhoneIncoming,
  Phone_incoming as PhoneIncomingIcon,
  Phone_missed as PhoneMissed,
  Phone_missed as PhoneMissedIcon,
  Phone_off as PhoneOff,
  Phone_off as PhoneOffIcon,
  Phone_outgoing as PhoneOutgoing,
  Phone_outgoing as PhoneOutgoingIcon,
  Pi,
  Pi as PiIcon,
  Square_pi as PiSquare,
  Square_pi as PiSquareIcon,
  Piano,
  Piano as PianoIcon,
  Pickaxe,
  Pickaxe as PickaxeIcon,
  Picture_in_picture as PictureInPicture,
  Picture_in_picture_2 as PictureInPicture2,
  Picture_in_picture_2 as PictureInPicture2Icon,
  Picture_in_picture as PictureInPictureIcon,
  Chart_pie as PieChart,
  Chart_pie as PieChartIcon,
  Piggy_bank as PiggyBank,
  Piggy_bank as PiggyBankIcon,
  Pilcrow,
  Pilcrow as PilcrowIcon,
  Pilcrow_left as PilcrowLeft,
  Pilcrow_left as PilcrowLeftIcon,
  Pilcrow_right as PilcrowRight,
  Pilcrow_right as PilcrowRightIcon,
  Square_pilcrow as PilcrowSquare,
  Square_pilcrow as PilcrowSquareIcon,
  Pill,
  Pill_bottle as PillBottle,
  Pill_bottle as PillBottleIcon,
  Pill as PillIcon,
  Pin,
  Pin as PinIcon,
  Pin_off as PinOff,
  Pin_off as PinOffIcon,
  Pipette,
  Pipette as PipetteIcon,
  Pizza,
  Pizza as PizzaIcon,
  Plane,
  Plane as PlaneIcon,
  Plane_landing as PlaneLanding,
  Plane_landing as PlaneLandingIcon,
  Plane_takeoff as PlaneTakeoff,
  Plane_takeoff as PlaneTakeoffIcon,
  Play,
  Circle_play as PlayCircle,
  Circle_play as PlayCircleIcon,
  Play as PlayIcon,
  Square_play as PlaySquare,
  Square_play as PlaySquareIcon,
  Plug,
  Plug_2 as Plug2,
  Plug_2 as Plug2Icon,
  Plug as PlugIcon,
  Plug_zap as PlugZap,
  Plug_zap as PlugZap2,
  Plug_zap as PlugZap2Icon,
  Plug_zap as PlugZapIcon,
  Plus,
  Circle_plus as PlusCircle,
  Circle_plus as PlusCircleIcon,
  Plus as PlusIcon,
  Square_plus as PlusSquare,
  Square_plus as PlusSquareIcon,
  Pocket,
  Pocket as PocketIcon,
  Pocket_knife as PocketKnife,
  Pocket_knife as PocketKnifeIcon,
  Podcast,
  Podcast as PodcastIcon,
  Pointer,
  Pointer as PointerIcon,
  Pointer_off as PointerOff,
  Pointer_off as PointerOffIcon,
  Popcorn,
  Popcorn as PopcornIcon,
  Popsicle,
  Popsicle as PopsicleIcon,
  Pound_sterling as PoundSterling,
  Pound_sterling as PoundSterlingIcon,
  Power,
  Circle_power as PowerCircle,
  Circle_power as PowerCircleIcon,
  Power as PowerIcon,
  Power_off as PowerOff,
  Power_off as PowerOffIcon,
  Square_power as PowerSquare,
  Square_power as PowerSquareIcon,
  Presentation,
  Presentation as PresentationIcon,
  Printer,
  Printer_check as PrinterCheck,
  Printer_check as PrinterCheckIcon,
  Printer as PrinterIcon,
  Projector,
  Projector as ProjectorIcon,
  Proportions,
  Proportions as ProportionsIcon,
  Puzzle,
  Puzzle as PuzzleIcon,
  Pyramid,
  Pyramid as PyramidIcon,
  Qr_code as QrCode,
  Qr_code as QrCodeIcon,
  Quote,
  Quote as QuoteIcon,
  Rabbit,
  Rabbit as RabbitIcon,
  Radar,
  Radar as RadarIcon,
  Radiation,
  Radiation as RadiationIcon,
  Radical,
  Radical as RadicalIcon,
  Radio,
  Radio as RadioIcon,
  Radio_receiver as RadioReceiver,
  Radio_receiver as RadioReceiverIcon,
  Radio_tower as RadioTower,
  Radio_tower as RadioTowerIcon,
  Radius,
  Radius as RadiusIcon,
  Rail_symbol as RailSymbol,
  Rail_symbol as RailSymbolIcon,
  Rainbow,
  Rainbow as RainbowIcon,
  Rat,
  Rat as RatIcon,
  Ratio,
  Ratio as RatioIcon,
  Receipt,
  Receipt_cent as ReceiptCent,
  Receipt_cent as ReceiptCentIcon,
  Receipt_euro as ReceiptEuro,
  Receipt_euro as ReceiptEuroIcon,
  Receipt as ReceiptIcon,
  Receipt_indian_rupee as ReceiptIndianRupee,
  Receipt_indian_rupee as ReceiptIndianRupeeIcon,
  Receipt_japanese_yen as ReceiptJapaneseYen,
  Receipt_japanese_yen as ReceiptJapaneseYenIcon,
  Receipt_pound_sterling as ReceiptPoundSterling,
  Receipt_pound_sterling as ReceiptPoundSterlingIcon,
  Receipt_russian_ruble as ReceiptRussianRuble,
  Receipt_russian_ruble as ReceiptRussianRubleIcon,
  Receipt_swiss_franc as ReceiptSwissFranc,
  Receipt_swiss_franc as ReceiptSwissFrancIcon,
  Receipt_text as ReceiptText,
  Receipt_text as ReceiptTextIcon,
  Rectangle_ellipsis as RectangleEllipsis,
  Rectangle_ellipsis as RectangleEllipsisIcon,
  Rectangle_horizontal as RectangleHorizontal,
  Rectangle_horizontal as RectangleHorizontalIcon,
  Rectangle_vertical as RectangleVertical,
  Rectangle_vertical as RectangleVerticalIcon,
  Recycle,
  Recycle as RecycleIcon,
  Redo,
  Redo_2 as Redo2,
  Redo_2 as Redo2Icon,
  Redo_dot as RedoDot,
  Redo_dot as RedoDotIcon,
  Redo as RedoIcon,
  Refresh_ccw as RefreshCcw,
  Refresh_ccw_dot as RefreshCcwDot,
  Refresh_ccw_dot as RefreshCcwDotIcon,
  Refresh_ccw as RefreshCcwIcon,
  Refresh_cw as RefreshCw,
  Refresh_cw as RefreshCwIcon,
  Refresh_cw_off as RefreshCwOff,
  Refresh_cw_off as RefreshCwOffIcon,
  Refrigerator,
  Refrigerator as RefrigeratorIcon,
  Regex,
  Regex as RegexIcon,
  Remove_formatting as RemoveFormatting,
  Remove_formatting as RemoveFormattingIcon,
  Repeat,
  Repeat_1 as Repeat1,
  Repeat_1 as Repeat1Icon,
  Repeat_2 as Repeat2,
  Repeat_2 as Repeat2Icon,
  Repeat as RepeatIcon,
  Replace,
  Replace_all as ReplaceAll,
  Replace_all as ReplaceAllIcon,
  Replace as ReplaceIcon,
  Reply,
  Reply_all as ReplyAll,
  Reply_all as ReplyAllIcon,
  Reply as ReplyIcon,
  Rewind,
  Rewind as RewindIcon,
  Ribbon,
  Ribbon as RibbonIcon,
  Rocket,
  Rocket as RocketIcon,
  Rocking_chair as RockingChair,
  Rocking_chair as RockingChairIcon,
  Roller_coaster as RollerCoaster,
  Roller_coaster as RollerCoasterIcon,
  Rotate_3d as Rotate3D,
  Rotate_3d as Rotate3DIcon,
  Rotate_3d as Rotate3d,
  Rotate_3d as Rotate3dIcon,
  Rotate_ccw as RotateCcw,
  Rotate_ccw as RotateCcwIcon,
  Rotate_ccw_square as RotateCcwSquare,
  Rotate_ccw_square as RotateCcwSquareIcon,
  Rotate_cw as RotateCw,
  Rotate_cw as RotateCwIcon,
  Rotate_cw_square as RotateCwSquare,
  Rotate_cw_square as RotateCwSquareIcon,
  Route,
  Route as RouteIcon,
  Route_off as RouteOff,
  Route_off as RouteOffIcon,
  Router,
  Router as RouterIcon,
  Rows_2 as Rows,
  Rows_2 as Rows2,
  Rows_2 as Rows2Icon,
  Rows_3 as Rows3,
  Rows_3 as Rows3Icon,
  Rows_4 as Rows4,
  Rows_4 as Rows4Icon,
  Rows_2 as RowsIcon,
  Rss,
  Rss as RssIcon,
  Ruler,
  Ruler as RulerIcon,
  Russian_ruble as RussianRuble,
  Russian_ruble as RussianRubleIcon,
  Sailboat,
  Sailboat as SailboatIcon,
  Salad,
  Salad as SaladIcon,
  Sandwich,
  Sandwich as SandwichIcon,
  Satellite,
  Satellite_dish as SatelliteDish,
  Satellite_dish as SatelliteDishIcon,
  Satellite as SatelliteIcon,
  Save,
  Save_all as SaveAll,
  Save_all as SaveAllIcon,
  Save as SaveIcon,
  Save_off as SaveOff,
  Save_off as SaveOffIcon,
  Scale,
  Scale_3d as Scale3D,
  Scale_3d as Scale3DIcon,
  Scale_3d as Scale3d,
  Scale_3d as Scale3dIcon,
  Scale as ScaleIcon,
  Scaling,
  Scaling as ScalingIcon,
  Scan,
  Scan_barcode as ScanBarcode,
  Scan_barcode as ScanBarcodeIcon,
  Scan_eye as ScanEye,
  Scan_eye as ScanEyeIcon,
  Scan_face as ScanFace,
  Scan_face as ScanFaceIcon,
  Scan as ScanIcon,
  Scan_line as ScanLine,
  Scan_line as ScanLineIcon,
  Scan_qr_code as ScanQrCode,
  Scan_qr_code as ScanQrCodeIcon,
  Scan_search as ScanSearch,
  Scan_search as ScanSearchIcon,
  Scan_text as ScanText,
  Scan_text as ScanTextIcon,
  Chart_scatter as ScatterChart,
  Chart_scatter as ScatterChartIcon,
  School,
  University as School2,
  University as School2Icon,
  School as SchoolIcon,
  Scissors,
  Scissors as ScissorsIcon,
  Scissors_line_dashed as ScissorsLineDashed,
  Scissors_line_dashed as ScissorsLineDashedIcon,
  Square_scissors as ScissorsSquare,
  Square_bottom_dashed_scissors as ScissorsSquareDashedBottom,
  Square_bottom_dashed_scissors as ScissorsSquareDashedBottomIcon,
  Square_scissors as ScissorsSquareIcon,
  Screen_share as ScreenShare,
  Screen_share as ScreenShareIcon,
  Screen_share_off as ScreenShareOff,
  Screen_share_off as ScreenShareOffIcon,
  Scroll,
  Scroll as ScrollIcon,
  Scroll_text as ScrollText,
  Scroll_text as ScrollTextIcon,
  Search,
  Search_check as SearchCheck,
  Search_check as SearchCheckIcon,
  Search_code as SearchCode,
  Search_code as SearchCodeIcon,
  Search as SearchIcon,
  Search_slash as SearchSlash,
  Search_slash as SearchSlashIcon,
  Search_x as SearchX,
  Search_x as SearchXIcon,
  Section,
  Section as SectionIcon,
  Send,
  Send_horizontal as SendHorizonal,
  Send_horizontal as SendHorizonalIcon,
  Send_horizontal as SendHorizontal,
  Send_horizontal as SendHorizontalIcon,
  Send as SendIcon,
  Send_to_back as SendToBack,
  Send_to_back as SendToBackIcon,
  Separator_horizontal as SeparatorHorizontal,
  Separator_horizontal as SeparatorHorizontalIcon,
  Separator_vertical as SeparatorVertical,
  Separator_vertical as SeparatorVerticalIcon,
  Server,
  Server_cog as ServerCog,
  Server_cog as ServerCogIcon,
  Server_crash as ServerCrash,
  Server_crash as ServerCrashIcon,
  Server as ServerIcon,
  Server_off as ServerOff,
  Server_off as ServerOffIcon,
  Settings,
  Settings_2 as Settings2,
  Settings_2 as Settings2Icon,
  Settings as SettingsIcon,
  Shapes,
  Shapes as ShapesIcon,
  Share,
  Share_2 as Share2,
  Share_2 as Share2Icon,
  Share as ShareIcon,
  Sheet,
  Sheet as SheetIcon,
  Shell,
  Shell as ShellIcon,
  Shield,
  Shield_alert as ShieldAlert,
  Shield_alert as ShieldAlertIcon,
  Shield_ban as ShieldBan,
  Shield_ban as ShieldBanIcon,
  Shield_check as ShieldCheck,
  Shield_check as ShieldCheckIcon,
  Shield_x as ShieldClose,
  Shield_x as ShieldCloseIcon,
  Shield_ellipsis as ShieldEllipsis,
  Shield_ellipsis as ShieldEllipsisIcon,
  Shield_half as ShieldHalf,
  Shield_half as ShieldHalfIcon,
  Shield as ShieldIcon,
  Shield_minus as ShieldMinus,
  Shield_minus as ShieldMinusIcon,
  Shield_off as ShieldOff,
  Shield_off as ShieldOffIcon,
  Shield_plus as ShieldPlus,
  Shield_plus as ShieldPlusIcon,
  Shield_question as ShieldQuestion,
  Shield_question as ShieldQuestionIcon,
  Shield_x as ShieldX,
  Shield_x as ShieldXIcon,
  Ship,
  Ship as ShipIcon,
  Ship_wheel as ShipWheel,
  Ship_wheel as ShipWheelIcon,
  Shirt,
  Shirt as ShirtIcon,
  Shopping_bag as ShoppingBag,
  Shopping_bag as ShoppingBagIcon,
  Shopping_basket as ShoppingBasket,
  Shopping_basket as ShoppingBasketIcon,
  Shopping_cart as ShoppingCart,
  Shopping_cart as ShoppingCartIcon,
  Shovel,
  Shovel as ShovelIcon,
  Shower_head as ShowerHead,
  Shower_head as ShowerHeadIcon,
  Shrink,
  Shrink as ShrinkIcon,
  Shrub,
  Shrub as ShrubIcon,
  Shuffle,
  Shuffle as ShuffleIcon,
  Panel_left as Sidebar,
  Panel_left_close as SidebarClose,
  Panel_left_close as SidebarCloseIcon,
  Panel_left as SidebarIcon,
  Panel_left_open as SidebarOpen,
  Panel_left_open as SidebarOpenIcon,
  Sigma,
  Sigma as SigmaIcon,
  Square_sigma as SigmaSquare,
  Square_sigma as SigmaSquareIcon,
  Signal,
  Signal_high as SignalHigh,
  Signal_high as SignalHighIcon,
  Signal as SignalIcon,
  Signal_low as SignalLow,
  Signal_low as SignalLowIcon,
  Signal_medium as SignalMedium,
  Signal_medium as SignalMediumIcon,
  Signal_zero as SignalZero,
  Signal_zero as SignalZeroIcon,
  Signature,
  Signature as SignatureIcon,
  Signpost,
  Signpost_big as SignpostBig,
  Signpost_big as SignpostBigIcon,
  Signpost as SignpostIcon,
  Siren,
  Siren as SirenIcon,
  Skip_back as SkipBack,
  Skip_back as SkipBackIcon,
  Skip_forward as SkipForward,
  Skip_forward as SkipForwardIcon,
  Skull,
  Skull as SkullIcon,
  Slack,
  Slack as SlackIcon,
  Slash,
  Slash as SlashIcon,
  Square_slash as SlashSquare,
  Square_slash as SlashSquareIcon,
  Slice,
  Slice as SliceIcon,
  Sliders_vertical as Sliders,
  Sliders_horizontal as SlidersHorizontal,
  Sliders_horizontal as SlidersHorizontalIcon,
  Sliders_vertical as SlidersIcon,
  Sliders_vertical as SlidersVertical,
  Sliders_vertical as SlidersVerticalIcon,
  Smartphone,
  Smartphone_charging as SmartphoneCharging,
  Smartphone_charging as SmartphoneChargingIcon,
  Smartphone as SmartphoneIcon,
  Smartphone_nfc as SmartphoneNfc,
  Smartphone_nfc as SmartphoneNfcIcon,
  Smile,
  Smile as SmileIcon,
  Smile_plus as SmilePlus,
  Smile_plus as SmilePlusIcon,
  Snail,
  Snail as SnailIcon,
  Snowflake,
  Snowflake as SnowflakeIcon,
  Sofa,
  Sofa as SofaIcon,
  Arrow_up_narrow_wide as SortAsc,
  Arrow_up_narrow_wide as SortAscIcon,
  Arrow_down_wide_narrow as SortDesc,
  Arrow_down_wide_narrow as SortDescIcon,
  Soup,
  Soup as SoupIcon,
  Space,
  Space as SpaceIcon,
  Spade,
  Spade as SpadeIcon,
  Sparkle,
  Sparkle as SparkleIcon,
  Sparkles,
  Sparkles as SparklesIcon,
  Speaker,
  Speaker as SpeakerIcon,
  Speech,
  Speech as SpeechIcon,
  Spell_check as SpellCheck,
  Spell_check_2 as SpellCheck2,
  Spell_check_2 as SpellCheck2Icon,
  Spell_check as SpellCheckIcon,
  Spline,
  Spline as SplineIcon,
  Split,
  Split as SplitIcon,
  Square_split_horizontal as SplitSquareHorizontal,
  Square_split_horizontal as SplitSquareHorizontalIcon,
  Square_split_vertical as SplitSquareVertical,
  Square_split_vertical as SplitSquareVerticalIcon,
  Spray_can as SprayCan,
  Spray_can as SprayCanIcon,
  Sprout,
  Sprout as SproutIcon,
  Square,
  Square_activity as SquareActivity,
  Square_activity as SquareActivityIcon,
  Square_arrow_down as SquareArrowDown,
  Square_arrow_down as SquareArrowDownIcon,
  Square_arrow_down_left as SquareArrowDownLeft,
  Square_arrow_down_left as SquareArrowDownLeftIcon,
  Square_arrow_down_right as SquareArrowDownRight,
  Square_arrow_down_right as SquareArrowDownRightIcon,
  Square_arrow_left as SquareArrowLeft,
  Square_arrow_left as SquareArrowLeftIcon,
  Square_arrow_out_down_left as SquareArrowOutDownLeft,
  Square_arrow_out_down_left as SquareArrowOutDownLeftIcon,
  Square_arrow_out_down_right as SquareArrowOutDownRight,
  Square_arrow_out_down_right as SquareArrowOutDownRightIcon,
  Square_arrow_out_up_left as SquareArrowOutUpLeft,
  Square_arrow_out_up_left as SquareArrowOutUpLeftIcon,
  Square_arrow_out_up_right as SquareArrowOutUpRight,
  Square_arrow_out_up_right as SquareArrowOutUpRightIcon,
  Square_arrow_right as SquareArrowRight,
  Square_arrow_right as SquareArrowRightIcon,
  Square_arrow_up as SquareArrowUp,
  Square_arrow_up as SquareArrowUpIcon,
  Square_arrow_up_left as SquareArrowUpLeft,
  Square_arrow_up_left as SquareArrowUpLeftIcon,
  Square_arrow_up_right as SquareArrowUpRight,
  Square_arrow_up_right as SquareArrowUpRightIcon,
  Square_asterisk as SquareAsterisk,
  Square_asterisk as SquareAsteriskIcon,
  Square_bottom_dashed_scissors as SquareBottomDashedScissors,
  Square_bottom_dashed_scissors as SquareBottomDashedScissorsIcon,
  Square_chart_gantt as SquareChartGantt,
  Square_chart_gantt as SquareChartGanttIcon,
  Square_check as SquareCheck,
  Square_check_big as SquareCheckBig,
  Square_check_big as SquareCheckBigIcon,
  Square_check as SquareCheckIcon,
  Square_chevron_down as SquareChevronDown,
  Square_chevron_down as SquareChevronDownIcon,
  Square_chevron_left as SquareChevronLeft,
  Square_chevron_left as SquareChevronLeftIcon,
  Square_chevron_right as SquareChevronRight,
  Square_chevron_right as SquareChevronRightIcon,
  Square_chevron_up as SquareChevronUp,
  Square_chevron_up as SquareChevronUpIcon,
  Square_code as SquareCode,
  Square_code as SquareCodeIcon,
  Square_dashed as SquareDashed,
  Square_dashed_bottom as SquareDashedBottom,
  Square_dashed_bottom_code as SquareDashedBottomCode,
  Square_dashed_bottom_code as SquareDashedBottomCodeIcon,
  Square_dashed_bottom as SquareDashedBottomIcon,
  Square_dashed as SquareDashedIcon,
  Square_dashed_kanban as SquareDashedKanban,
  Square_dashed_kanban as SquareDashedKanbanIcon,
  Square_dashed_mouse_pointer as SquareDashedMousePointer,
  Square_dashed_mouse_pointer as SquareDashedMousePointerIcon,
  Square_divide as SquareDivide,
  Square_divide as SquareDivideIcon,
  Square_dot as SquareDot,
  Square_dot as SquareDotIcon,
  Square_equal as SquareEqual,
  Square_equal as SquareEqualIcon,
  Square_function as SquareFunction,
  Square_function as SquareFunctionIcon,
  Square_chart_gantt as SquareGanttChart,
  Square_chart_gantt as SquareGanttChartIcon,
  Square as SquareIcon,
  Square_kanban as SquareKanban,
  Square_kanban as SquareKanbanIcon,
  Square_library as SquareLibrary,
  Square_library as SquareLibraryIcon,
  Square_m as SquareM,
  Square_m as SquareMIcon,
  Square_menu as SquareMenu,
  Square_menu as SquareMenuIcon,
  Square_minus as SquareMinus,
  Square_minus as SquareMinusIcon,
  Square_mouse_pointer as SquareMousePointer,
  Square_mouse_pointer as SquareMousePointerIcon,
  Square_parking as SquareParking,
  Square_parking as SquareParkingIcon,
  Square_parking_off as SquareParkingOff,
  Square_parking_off as SquareParkingOffIcon,
  Square_pen as SquarePen,
  Square_pen as SquarePenIcon,
  Square_percent as SquarePercent,
  Square_percent as SquarePercentIcon,
  Square_pi as SquarePi,
  Square_pi as SquarePiIcon,
  Square_pilcrow as SquarePilcrow,
  Square_pilcrow as SquarePilcrowIcon,
  Square_play as SquarePlay,
  Square_play as SquarePlayIcon,
  Square_plus as SquarePlus,
  Square_plus as SquarePlusIcon,
  Square_power as SquarePower,
  Square_power as SquarePowerIcon,
  Square_radical as SquareRadical,
  Square_radical as SquareRadicalIcon,
  Square_scissors as SquareScissors,
  Square_scissors as SquareScissorsIcon,
  Square_sigma as SquareSigma,
  Square_sigma as SquareSigmaIcon,
  Square_slash as SquareSlash,
  Square_slash as SquareSlashIcon,
  Square_split_horizontal as SquareSplitHorizontal,
  Square_split_horizontal as SquareSplitHorizontalIcon,
  Square_split_vertical as SquareSplitVertical,
  Square_split_vertical as SquareSplitVerticalIcon,
  Square_square as SquareSquare,
  Square_square as SquareSquareIcon,
  Square_stack as SquareStack,
  Square_stack as SquareStackIcon,
  Square_terminal as SquareTerminal,
  Square_terminal as SquareTerminalIcon,
  Square_user as SquareUser,
  Square_user as SquareUserIcon,
  Square_user_round as SquareUserRound,
  Square_user_round as SquareUserRoundIcon,
  Square_x as SquareX,
  Square_x as SquareXIcon,
  Squircle,
  Squircle as SquircleIcon,
  Squirrel,
  Squirrel as SquirrelIcon,
  Stamp,
  Stamp as StampIcon,
  Star,
  Star_half as StarHalf,
  Star_half as StarHalfIcon,
  Star as StarIcon,
  Star_off as StarOff,
  Star_off as StarOffIcon,
  Sparkles as Stars,
  Sparkles as StarsIcon,
  Step_back as StepBack,
  Step_back as StepBackIcon,
  Step_forward as StepForward,
  Step_forward as StepForwardIcon,
  Stethoscope,
  Stethoscope as StethoscopeIcon,
  Sticker,
  Sticker as StickerIcon,
  Sticky_note as StickyNote,
  Sticky_note as StickyNoteIcon,
  Circle_stop as StopCircle,
  Circle_stop as StopCircleIcon,
  Store,
  Store as StoreIcon,
  Stretch_horizontal as StretchHorizontal,
  Stretch_horizontal as StretchHorizontalIcon,
  Stretch_vertical as StretchVertical,
  Stretch_vertical as StretchVerticalIcon,
  Strikethrough,
  Strikethrough as StrikethroughIcon,
  Subscript,
  Subscript as SubscriptIcon,
  Captions as Subtitles,
  Captions as SubtitlesIcon,
  Sun,
  Sun_dim as SunDim,
  Sun_dim as SunDimIcon,
  Sun as SunIcon,
  Sun_medium as SunMedium,
  Sun_medium as SunMediumIcon,
  Sun_moon as SunMoon,
  Sun_moon as SunMoonIcon,
  Sun_snow as SunSnow,
  Sun_snow as SunSnowIcon,
  Sunrise,
  Sunrise as SunriseIcon,
  Sunset,
  Sunset as SunsetIcon,
  Superscript,
  Superscript as SuperscriptIcon,
  Swatch_book as SwatchBook,
  Swatch_book as SwatchBookIcon,
  Swiss_franc as SwissFranc,
  Swiss_franc as SwissFrancIcon,
  Switch_camera as SwitchCamera,
  Switch_camera as SwitchCameraIcon,
  Sword,
  Sword as SwordIcon,
  Swords,
  Swords as SwordsIcon,
  Syringe,
  Syringe as SyringeIcon,
  Table,
  Table_2 as Table2,
  Table_2 as Table2Icon,
  Table_cells_merge as TableCellsMerge,
  Table_cells_merge as TableCellsMergeIcon,
  Table_cells_split as TableCellsSplit,
  Table_cells_split as TableCellsSplitIcon,
  Table_columns_split as TableColumnsSplit,
  Table_columns_split as TableColumnsSplitIcon,
  Table as TableIcon,
  Table_of_contents as TableOfContents,
  Table_of_contents as TableOfContentsIcon,
  Table_properties as TableProperties,
  Table_properties as TablePropertiesIcon,
  Table_rows_split as TableRowsSplit,
  Table_rows_split as TableRowsSplitIcon,
  Tablet,
  Tablet as TabletIcon,
  Tablet_smartphone as TabletSmartphone,
  Tablet_smartphone as TabletSmartphoneIcon,
  Tablets,
  Tablets as TabletsIcon,
  Tag,
  Tag as TagIcon,
  Tags,
  Tags as TagsIcon,
  Tally_1 as Tally1,
  Tally_1 as Tally1Icon,
  Tally_2 as Tally2,
  Tally_2 as Tally2Icon,
  Tally_3 as Tally3,
  Tally_3 as Tally3Icon,
  Tally_4 as Tally4,
  Tally_4 as Tally4Icon,
  Tally_5 as Tally5,
  Tally_5 as Tally5Icon,
  Tangent,
  Tangent as TangentIcon,
  Target,
  Target as TargetIcon,
  Telescope,
  Telescope as TelescopeIcon,
  Tent,
  Tent as TentIcon,
  Tent_tree as TentTree,
  Tent_tree as TentTreeIcon,
  Terminal,
  Terminal as TerminalIcon,
  Square_terminal as TerminalSquare,
  Square_terminal as TerminalSquareIcon,
  Test_tube as TestTube,
  Test_tube_diagonal as TestTube2,
  Test_tube_diagonal as TestTube2Icon,
  Test_tube_diagonal as TestTubeDiagonal,
  Test_tube_diagonal as TestTubeDiagonalIcon,
  Test_tube as TestTubeIcon,
  Test_tubes as TestTubes,
  Test_tubes as TestTubesIcon,
  Text,
  Text_cursor as TextCursor,
  Text_cursor as TextCursorIcon,
  Text_cursor_input as TextCursorInput,
  Text_cursor_input as TextCursorInputIcon,
  Text as TextIcon,
  Text_quote as TextQuote,
  Text_quote as TextQuoteIcon,
  Text_search as TextSearch,
  Text_search as TextSearchIcon,
  Text_select as TextSelect,
  Text_select as TextSelectIcon,
  Text_select as TextSelection,
  Text_select as TextSelectionIcon,
  Theater,
  Theater as TheaterIcon,
  Thermometer,
  Thermometer as ThermometerIcon,
  Thermometer_snowflake as ThermometerSnowflake,
  Thermometer_snowflake as ThermometerSnowflakeIcon,
  Thermometer_sun as ThermometerSun,
  Thermometer_sun as ThermometerSunIcon,
  Thumbs_down as ThumbsDown,
  Thumbs_down as ThumbsDownIcon,
  Thumbs_up as ThumbsUp,
  Thumbs_up as ThumbsUpIcon,
  Ticket,
  Ticket_check as TicketCheck,
  Ticket_check as TicketCheckIcon,
  Ticket as TicketIcon,
  Ticket_minus as TicketMinus,
  Ticket_minus as TicketMinusIcon,
  Ticket_percent as TicketPercent,
  Ticket_percent as TicketPercentIcon,
  Ticket_plus as TicketPlus,
  Ticket_plus as TicketPlusIcon,
  Ticket_slash as TicketSlash,
  Ticket_slash as TicketSlashIcon,
  Ticket_x as TicketX,
  Ticket_x as TicketXIcon,
  Tickets,
  Tickets as TicketsIcon,
  Tickets_plane as TicketsPlane,
  Tickets_plane as TicketsPlaneIcon,
  Timer,
  Timer as TimerIcon,
  Timer_off as TimerOff,
  Timer_off as TimerOffIcon,
  Timer_reset as TimerReset,
  Timer_reset as TimerResetIcon,
  Toggle_left as ToggleLeft,
  Toggle_left as ToggleLeftIcon,
  Toggle_right as ToggleRight,
  Toggle_right as ToggleRightIcon,
  Tornado,
  Tornado as TornadoIcon,
  Torus,
  Torus as TorusIcon,
  Touchpad,
  Touchpad as TouchpadIcon,
  Touchpad_off as TouchpadOff,
  Touchpad_off as TouchpadOffIcon,
  Tower_control as TowerControl,
  Tower_control as TowerControlIcon,
  Toy_brick as ToyBrick,
  Toy_brick as ToyBrickIcon,
  Tractor,
  Tractor as TractorIcon,
  Traffic_cone as TrafficCone,
  Traffic_cone as TrafficConeIcon,
  Tram_front as Train,
  Train_front as TrainFront,
  Train_front as TrainFrontIcon,
  Train_front_tunnel as TrainFrontTunnel,
  Train_front_tunnel as TrainFrontTunnelIcon,
  Tram_front as TrainIcon,
  Train_track as TrainTrack,
  Train_track as TrainTrackIcon,
  Tram_front as TramFront,
  Tram_front as TramFrontIcon,
  Trash,
  Trash_2 as Trash2,
  Trash_2 as Trash2Icon,
  Trash as TrashIcon,
  Tree_deciduous as TreeDeciduous,
  Tree_deciduous as TreeDeciduousIcon,
  Tree_palm as TreePalm,
  Tree_palm as TreePalmIcon,
  Tree_pine as TreePine,
  Tree_pine as TreePineIcon,
  Trees,
  Trees as TreesIcon,
  Trello,
  Trello as TrelloIcon,
  Trending_down as TrendingDown,
  Trending_down as TrendingDownIcon,
  Trending_up as TrendingUp,
  Trending_up_down as TrendingUpDown,
  Trending_up_down as TrendingUpDownIcon,
  Trending_up as TrendingUpIcon,
  Triangle,
  Triangle_alert as TriangleAlert,
  Triangle_alert as TriangleAlertIcon,
  Triangle as TriangleIcon,
  Triangle_right as TriangleRight,
  Triangle_right as TriangleRightIcon,
  Trophy,
  Trophy as TrophyIcon,
  Truck,
  Truck as TruckIcon,
  Turtle,
  Turtle as TurtleIcon,
  Tv,
  Tv_minimal as Tv2,
  Tv_minimal as Tv2Icon,
  Tv as TvIcon,
  Tv_minimal as TvMinimal,
  Tv_minimal as TvMinimalIcon,
  Tv_minimal_play as TvMinimalPlay,
  Tv_minimal_play as TvMinimalPlayIcon,
  Twitch,
  Twitch as TwitchIcon,
  Twitter,
  Twitter as TwitterIcon,
  Type,
  Type as TypeIcon,
  Type_outline as TypeOutline,
  Type_outline as TypeOutlineIcon,
  Umbrella,
  Umbrella as UmbrellaIcon,
  Umbrella_off as UmbrellaOff,
  Umbrella_off as UmbrellaOffIcon,
  Underline,
  Underline as UnderlineIcon,
  Undo,
  Undo_2 as Undo2,
  Undo_2 as Undo2Icon,
  Undo_dot as UndoDot,
  Undo_dot as UndoDotIcon,
  Undo as UndoIcon,
  Unfold_horizontal as UnfoldHorizontal,
  Unfold_horizontal as UnfoldHorizontalIcon,
  Unfold_vertical as UnfoldVertical,
  Unfold_vertical as UnfoldVerticalIcon,
  Ungroup,
  Ungroup as UngroupIcon,
  University,
  University as UniversityIcon,
  Unlink,
  Unlink_2 as Unlink2,
  Unlink_2 as Unlink2Icon,
  Unlink as UnlinkIcon,
  Lock_open as Unlock,
  Lock_open as UnlockIcon,
  Lock_keyhole_open as UnlockKeyhole,
  Lock_keyhole_open as UnlockKeyholeIcon,
  Unplug,
  Unplug as UnplugIcon,
  Upload,
  Cloud_upload as UploadCloud,
  Cloud_upload as UploadCloudIcon,
  Upload as UploadIcon,
  Usb,
  Usb as UsbIcon,
  User,
  User_round as User2,
  User_round as User2Icon,
  User_check as UserCheck,
  User_round_check as UserCheck2,
  User_round_check as UserCheck2Icon,
  User_check as UserCheckIcon,
  Circle_user as UserCircle,
  Circle_user_round as UserCircle2,
  Circle_user_round as UserCircle2Icon,
  Circle_user as UserCircleIcon,
  User_cog as UserCog,
  User_round_cog as UserCog2,
  User_round_cog as UserCog2Icon,
  User_cog as UserCogIcon,
  User as UserIcon,
  User_minus as UserMinus,
  User_round_minus as UserMinus2,
  User_round_minus as UserMinus2Icon,
  User_minus as UserMinusIcon,
  User_pen as UserPen,
  User_pen as UserPenIcon,
  User_plus as UserPlus,
  User_round_plus as UserPlus2,
  User_round_plus as UserPlus2Icon,
  User_plus as UserPlusIcon,
  User_round as UserRound,
  User_round_check as UserRoundCheck,
  User_round_check as UserRoundCheckIcon,
  User_round_cog as UserRoundCog,
  User_round_cog as UserRoundCogIcon,
  User_round as UserRoundIcon,
  User_round_minus as UserRoundMinus,
  User_round_minus as UserRoundMinusIcon,
  User_round_pen as UserRoundPen,
  User_round_pen as UserRoundPenIcon,
  User_round_plus as UserRoundPlus,
  User_round_plus as UserRoundPlusIcon,
  User_round_search as UserRoundSearch,
  User_round_search as UserRoundSearchIcon,
  User_round_x as UserRoundX,
  User_round_x as UserRoundXIcon,
  User_search as UserSearch,
  User_search as UserSearchIcon,
  Square_user as UserSquare,
  Square_user_round as UserSquare2,
  Square_user_round as UserSquare2Icon,
  Square_user as UserSquareIcon,
  User_x as UserX,
  User_round_x as UserX2,
  User_round_x as UserX2Icon,
  User_x as UserXIcon,
  Users,
  Users_round as Users2,
  Users_round as Users2Icon,
  Users as UsersIcon,
  Users_round as UsersRound,
  Users_round as UsersRoundIcon,
  Utensils,
  Utensils_crossed as UtensilsCrossed,
  Utensils_crossed as UtensilsCrossedIcon,
  Utensils as UtensilsIcon,
  Utility_pole as UtilityPole,
  Utility_pole as UtilityPoleIcon,
  Variable,
  Variable as VariableIcon,
  Vault,
  Vault as VaultIcon,
  Vegan,
  Vegan as VeganIcon,
  Venetian_mask as VenetianMask,
  Venetian_mask as VenetianMaskIcon,
  Badge_check as Verified,
  Badge_check as VerifiedIcon,
  Vibrate,
  Vibrate as VibrateIcon,
  Vibrate_off as VibrateOff,
  Vibrate_off as VibrateOffIcon,
  Video,
  Video as VideoIcon,
  Video_off as VideoOff,
  Video_off as VideoOffIcon,
  Videotape,
  Videotape as VideotapeIcon,
  View,
  View as ViewIcon,
  Voicemail,
  Voicemail as VoicemailIcon,
  Volleyball,
  Volleyball as VolleyballIcon,
  Volume,
  Volume_1 as Volume1,
  Volume_1 as Volume1Icon,
  Volume_2 as Volume2,
  Volume_2 as Volume2Icon,
  Volume as VolumeIcon,
  Volume_off as VolumeOff,
  Volume_off as VolumeOffIcon,
  Volume_x as VolumeX,
  Volume_x as VolumeXIcon,
  Vote,
  Vote as VoteIcon,
  Wallet,
  Wallet_minimal as Wallet2,
  Wallet_minimal as Wallet2Icon,
  Wallet_cards as WalletCards,
  Wallet_cards as WalletCardsIcon,
  Wallet as WalletIcon,
  Wallet_minimal as WalletMinimal,
  Wallet_minimal as WalletMinimalIcon,
  Wallpaper,
  Wallpaper as WallpaperIcon,
  Wand,
  Wand_sparkles as Wand2,
  Wand_sparkles as Wand2Icon,
  Wand as WandIcon,
  Wand_sparkles as WandSparkles,
  Wand_sparkles as WandSparklesIcon,
  Warehouse,
  Warehouse as WarehouseIcon,
  Washing_machine as WashingMachine,
  Washing_machine as WashingMachineIcon,
  Watch,
  Watch as WatchIcon,
  Waves,
  Waves as WavesIcon,
  Waypoints,
  Waypoints as WaypointsIcon,
  Webcam,
  Webcam as WebcamIcon,
  Webhook,
  Webhook as WebhookIcon,
  Webhook_off as WebhookOff,
  Webhook_off as WebhookOffIcon,
  Weight,
  Weight as WeightIcon,
  Wheat,
  Wheat as WheatIcon,
  Wheat_off as WheatOff,
  Wheat_off as WheatOffIcon,
  Whole_word as WholeWord,
  Whole_word as WholeWordIcon,
  Wifi,
  Wifi_high as WifiHigh,
  Wifi_high as WifiHighIcon,
  Wifi as WifiIcon,
  Wifi_low as WifiLow,
  Wifi_low as WifiLowIcon,
  Wifi_off as WifiOff,
  Wifi_off as WifiOffIcon,
  Wifi_zero as WifiZero,
  Wifi_zero as WifiZeroIcon,
  Wind,
  Wind_arrow_down as WindArrowDown,
  Wind_arrow_down as WindArrowDownIcon,
  Wind as WindIcon,
  Wine,
  Wine as WineIcon,
  Wine_off as WineOff,
  Wine_off as WineOffIcon,
  Workflow,
  Workflow as WorkflowIcon,
  Worm,
  Worm as WormIcon,
  Wrap_text as WrapText,
  Wrap_text as WrapTextIcon,
  Wrench,
  Wrench as WrenchIcon,
  X,
  Circle_x as XCircle,
  Circle_x as XCircleIcon,
  X as XIcon,
  Octagon_x as XOctagon,
  Octagon_x as XOctagonIcon,
  Square_x as XSquare,
  Square_x as XSquareIcon,
  Youtube,
  Youtube as YoutubeIcon,
  Zap,
  Zap as ZapIcon,
  Zap_off as ZapOff,
  Zap_off as ZapOffIcon,
  Zoom_in as ZoomIn,
  Zoom_in as ZoomInIcon,
  Zoom_out as ZoomOut,
  Zoom_out as ZoomOutIcon,
  defaultAttributes_default as defaultAttributes,
  icons_exports as icons
};
/*! Bundled license information:

lucide-svelte/dist/defaultAttributes.js:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/a-arrow-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/a-arrow-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/a-large-small.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/accessibility.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/activity.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/air-vent.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/airplay.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/alarm-clock-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/alarm-clock-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/alarm-clock-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/alarm-clock-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/alarm-clock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/alarm-smoke.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/album.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-center-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-center-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-center.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-end-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-end-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-horizontal-distribute-center.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-horizontal-distribute-end.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-horizontal-distribute-start.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-horizontal-justify-center.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-horizontal-justify-end.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-horizontal-justify-start.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-horizontal-space-around.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-horizontal-space-between.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-justify.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-start-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-start-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-vertical-distribute-center.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-vertical-distribute-end.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-vertical-distribute-start.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-vertical-justify-center.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-vertical-justify-end.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-vertical-justify-start.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-vertical-space-around.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/align-vertical-space-between.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ambulance.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ampersand.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ampersands.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/amphora.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/anchor.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/angry.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/annoyed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/antenna.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/anvil.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/aperture.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/app-window-mac.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/app-window.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/apple.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/archive-restore.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/archive-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/archive.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/armchair.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-big-down-dash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-big-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-big-left-dash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-big-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-big-right-dash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-big-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-big-up-dash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-big-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-0-1.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-1-0.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-a-z.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-from-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-narrow-wide.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-to-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-to-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-wide-narrow.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down-z-a.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-left-from-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-left-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-left-to-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-right-from-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-right-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-right-to-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-0-1.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-1-0.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-a-z.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-from-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-from-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-narrow-wide.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-to-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-wide-narrow.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up-z-a.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrow-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/arrows-up-from-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/asterisk.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/at-sign.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/atom.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/audio-lines.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/audio-waveform.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/award.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/axe.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/axis-3d.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/baby.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/backpack.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-alert.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-cent.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-dollar-sign.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-euro.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-help.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-indian-rupee.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-info.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-japanese-yen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-percent.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-pound-sterling.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-russian-ruble.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-swiss-franc.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/badge.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/baggage-claim.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ban.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/banana.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bandage.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/banknote.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/barcode.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/baseline.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bath.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/battery-charging.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/battery-full.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/battery-low.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/battery-medium.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/battery-warning.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/battery.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/beaker.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bean-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bean.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bed-double.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bed-single.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/beef.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/beer-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/beer.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bell-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bell-electric.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bell-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bell-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bell-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bell-ring.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bell.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/between-horizontal-end.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/between-horizontal-start.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/between-vertical-end.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/between-vertical-start.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/biceps-flexed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bike.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/binary.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/binoculars.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/biohazard.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bird.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bitcoin.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/blend.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/blinds.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/blocks.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bluetooth-connected.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bluetooth-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bluetooth-searching.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bluetooth.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bold.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bolt.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bomb.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bone.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-a.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-audio.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-copy.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-headphones.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-heart.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-image.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-key.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-lock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-marked.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-open-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-open-text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-open.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-type.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-up-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-user.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/book.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bookmark-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bookmark-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bookmark-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bookmark-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bookmark.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/boom-box.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bot-message-square.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bot-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/box.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/boxes.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/braces.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/brackets.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/brain-circuit.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/brain-cog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/brain.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/brick-wall.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/briefcase-business.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/briefcase-conveyor-belt.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/briefcase-medical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/briefcase.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bring-to-front.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/brush.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bug-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bug-play.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bug.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/building-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/building.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bus-front.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/bus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cable-car.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cable.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cake-slice.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cake.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calculator.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-1.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-arrow-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-arrow-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-check-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-clock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-cog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-days.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-fold.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-heart.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-minus-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-plus-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-range.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-search.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-x-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/calendar.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/camera-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/camera.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/candy-cane.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/candy-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/candy.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cannabis.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/captions-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/captions.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/car-front.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/car-taxi-front.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/car.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/caravan.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/carrot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/case-lower.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/case-sensitive.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/case-upper.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cassette-tape.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cast.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/castle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cat.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cctv.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-area.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-bar-big.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-bar-decreasing.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-bar-increasing.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-bar-stacked.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-bar.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-candlestick.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-column-big.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-column-decreasing.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-column-increasing.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-column-stacked.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-column.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-gantt.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-network.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-no-axes-column-decreasing.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-no-axes-column-increasing.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-no-axes-column.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-no-axes-combined.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-no-axes-gantt.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-pie.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-scatter.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chart-spline.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/check-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chef-hat.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cherry.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevron-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevron-first.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevron-last.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevron-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevron-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevron-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevrons-down-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevrons-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevrons-left-right-ellipsis.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevrons-left-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevrons-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevrons-right-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevrons-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevrons-up-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chevrons-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/chrome.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/church.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cigarette-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cigarette.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-alert.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-arrow-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-arrow-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-arrow-out-down-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-arrow-out-down-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-arrow-out-up-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-arrow-out-up-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-arrow-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-arrow-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-check-big.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-chevron-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-chevron-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-chevron-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-chevron-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-divide.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-dollar-sign.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-dot-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-ellipsis.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-equal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-fading-arrow-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-fading-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-gauge.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-help.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-parking-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-parking.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-pause.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-percent.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-play.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-power.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-slash-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-slash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-stop.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-user-round.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-user.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/circuit-board.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/citrus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clapperboard.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clipboard-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clipboard-copy.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clipboard-list.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clipboard-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clipboard-paste.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clipboard-pen-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clipboard-pen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clipboard-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clipboard-type.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clipboard-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clipboard.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-1.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-10.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-11.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-12.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-3.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-4.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-5.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-6.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-7.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-8.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-9.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-alert.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-arrow-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock-arrow-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-cog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-download.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-drizzle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-fog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-hail.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-lightning.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-moon-rain.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-moon.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-rain-wind.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-rain.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-snow.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-sun-rain.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-sun.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud-upload.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloud.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cloudy.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/clover.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/club.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/code-xml.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/code.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/codepen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/codesandbox.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/coffee.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/coins.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/columns-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/columns-3.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/columns-4.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/combine.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/command.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/compass.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/component.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/computer.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/concierge-bell.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cone.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/construction.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/contact-round.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/contact.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/container.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/contrast.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cookie.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cooking-pot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/copy-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/copy-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/copy-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/copy-slash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/copy-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/copy.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/copyleft.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/copyright.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/corner-down-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/corner-down-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/corner-left-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/corner-left-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/corner-right-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/corner-right-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/corner-up-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/corner-up-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cpu.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/creative-commons.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/credit-card.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/croissant.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/crop.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cross.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/crosshair.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/crown.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cuboid.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cup-soda.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/currency.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/cylinder.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dam.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/database-backup.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/database-zap.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/database.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/delete.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dessert.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/diameter.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/diamond-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/diamond-percent.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/diamond-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/diamond.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dice-1.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dice-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dice-3.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dice-4.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dice-5.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dice-6.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dices.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/diff.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/disc-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/disc-3.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/disc-album.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/disc.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/divide.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dna-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dna.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dollar-sign.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/donut.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/door-closed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/door-open.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/download.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/drafting-compass.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/drama.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dribbble.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/drill.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/droplet.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/droplets.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/drum.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/drumstick.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/dumbbell.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ear-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ear.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/earth-lock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/earth.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/eclipse.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/egg-fried.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/egg-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/egg.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ellipsis-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ellipsis.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/equal-not.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/equal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/eraser.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ethernet-port.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/euro.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/expand.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/external-link.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/eye-closed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/eye-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/eye.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/facebook.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/factory.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fan.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fast-forward.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/feather.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fence.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ferris-wheel.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/figma.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-archive.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-audio-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-audio.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-axis-3d.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-badge-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-badge.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-box.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-chart-column-increasing.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-chart-column.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-chart-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-chart-pie.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-check-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-clock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-code-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-code.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-cog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-diff.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-digit.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-heart.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-image.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-input.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-json-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-json.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-key-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-key.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-lock-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-lock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-minus-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-music.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-output.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-pen-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-pen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-plus-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-question.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-scan.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-search-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-search.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-sliders.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-spreadsheet.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-stack.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-symlink.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-terminal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-type-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-type.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-user.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-video-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-video.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-volume-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-volume.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-warning.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-x-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/file.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/files.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/film.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/filter-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/filter.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fingerprint.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fire-extinguisher.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fish-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fish-symbol.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fish.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flag-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flag-triangle-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flag-triangle-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flag.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flame-kindling.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flame.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flashlight-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flashlight.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flask-conical-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flask-conical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flask-round.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flip-horizontal-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flip-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flip-vertical-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flip-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flower-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/flower.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/focus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fold-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fold-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-archive.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-clock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-closed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-code.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-cog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-git-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-git.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-heart.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-input.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-kanban.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-key.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-lock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-open-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-open.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-output.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-pen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-root.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-search-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-search.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-symlink.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-sync.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-tree.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folder.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/folders.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/footprints.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/forklift.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/forward.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/frame.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/framer.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/frown.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fuel.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/fullscreen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gallery-horizontal-end.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gallery-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gallery-thumbnails.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gallery-vertical-end.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gallery-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gamepad-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gamepad.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gauge.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gavel.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gem.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ghost.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gift.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-branch-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-branch.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-commit-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-commit-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-compare-arrows.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-compare.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-fork.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-graph.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-merge.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-pull-request-arrow.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-pull-request-closed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-pull-request-create-arrow.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-pull-request-create.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-pull-request-draft.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/git-pull-request.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/github.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/gitlab.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/glass-water.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/glasses.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/globe-lock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/globe.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/goal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/grab.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/graduation-cap.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/grape.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/grid-2x2-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/grid-2x2-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/grid-2x2-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/grid-2x2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/grid-3x3.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/grip-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/grip-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/grip.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/group.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/guitar.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ham.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hammer.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hand-coins.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hand-heart.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hand-helping.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hand-metal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hand-platter.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hand.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/handshake.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hard-drive-download.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hard-drive-upload.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hard-drive.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hard-hat.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/haze.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hdmi-port.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heading-1.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heading-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heading-3.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heading-4.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heading-5.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heading-6.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heading.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/headphone-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/headphones.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/headset.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heart-crack.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heart-handshake.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heart-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heart-pulse.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heart.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/heater.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hexagon.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/highlighter.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/history.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hop-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hop.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hospital.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hotel.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/hourglass.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/house-plug.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/house-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/house.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ice-cream-bowl.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ice-cream-cone.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/id-card.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/image-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/image-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/image-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/image-play.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/image-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/image-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/image.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/images.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/import.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/inbox.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/indent-decrease.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/indent-increase.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/indian-rupee.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/infinity.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/info.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/inspection-panel.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/instagram.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/italic.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/iteration-ccw.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/iteration-cw.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/japanese-yen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/joystick.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/kanban.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/key-round.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/key-square.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/key.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/keyboard-music.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/keyboard-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/keyboard.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lamp-ceiling.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lamp-desk.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lamp-floor.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lamp-wall-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lamp-wall-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lamp.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/land-plot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/landmark.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/languages.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/laptop-minimal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/laptop.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lasso-select.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lasso.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/laugh.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/layers-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/layers-3.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/layers.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/layout-dashboard.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/layout-grid.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/layout-list.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/layout-panel-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/layout-panel-top.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/layout-template.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/leaf.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/leafy-green.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lectern.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/letter-text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/library-big.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/library.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/life-buoy.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ligature.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lightbulb-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lightbulb.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/link-2-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/link-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/link.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/linkedin.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-checks.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-collapse.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-end.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-filter.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-music.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-ordered.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-restart.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-start.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-todo.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-tree.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-video.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/list.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/loader-circle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/loader-pinwheel.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/loader.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/locate-fixed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/locate-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/locate.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lock-keyhole-open.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lock-keyhole.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lock-open.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/log-in.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/log-out.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/logs.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/lollipop.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/luggage.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/magnet.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mail-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mail-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mail-open.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mail-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mail-question.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mail-search.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mail-warning.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mail-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mail.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mailbox.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mails.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pin-check-inside.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pin-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pin-house.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pin-minus-inside.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pin-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pin-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pin-plus-inside.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pin-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pin-x-inside.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pin-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pin.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map-pinned.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/map.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/martini.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/maximize-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/maximize.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/medal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/megaphone-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/megaphone.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/meh.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/memory-stick.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/menu.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/merge.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-circle-code.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-circle-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-circle-heart.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-circle-more.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-circle-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-circle-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-circle-question.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-circle-reply.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-circle-warning.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-circle-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-circle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-code.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-diff.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-heart.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-lock.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-more.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-quote.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-reply.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-share.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-warning.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/message-square.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/messages-square.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mic-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mic-vocal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mic.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/microchip.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/microscope.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/microwave.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/milestone.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/milk-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/milk.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/minimize-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/minimize.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-cog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-pause.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-play.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-smartphone.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-speaker.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-stop.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/monitor.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/moon-star.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/moon.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mountain-snow.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mountain.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mouse-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mouse-pointer-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mouse-pointer-ban.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mouse-pointer-click.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mouse-pointer.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/mouse.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-3d.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-diagonal-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-diagonal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-down-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-down-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-up-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-up-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/move.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/music-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/music-3.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/music-4.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/music.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/navigation-2-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/navigation-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/navigation-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/navigation.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/network.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/newspaper.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/nfc.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/notebook-pen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/notebook-tabs.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/notebook-text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/notebook.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/notepad-text-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/notepad-text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/nut-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/nut.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/octagon-alert.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/octagon-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/octagon-pause.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/octagon-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/octagon.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/omega.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/option.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/orbit.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/origami.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/package-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/package-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/package-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/package-open.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/package-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/package-search.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/package-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/package.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/paint-bucket.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/paint-roller.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/paintbrush-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/paintbrush.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/palette.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-bottom-close.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-bottom-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-bottom-open.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-bottom.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-left-close.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-left-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-left-open.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-right-close.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-right-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-right-open.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-top-close.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-top-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-top-open.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panel-top.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panels-left-bottom.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panels-right-bottom.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/panels-top-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/paperclip.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/parentheses.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/parking-meter.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/party-popper.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pause.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/paw-print.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pc-case.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pen-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pen-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pen-tool.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pencil-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pencil-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pencil-ruler.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pencil.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pentagon.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/percent.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/person-standing.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/philippine-peso.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/phone-call.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/phone-forwarded.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/phone-incoming.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/phone-missed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/phone-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/phone-outgoing.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/phone.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pi.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/piano.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pickaxe.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/picture-in-picture-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/picture-in-picture.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/piggy-bank.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pilcrow-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pilcrow-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pilcrow.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pill-bottle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pill.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pin-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pin.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pipette.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pizza.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/plane-landing.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/plane-takeoff.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/plane.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/play.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/plug-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/plug-zap.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/plug.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pocket-knife.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pocket.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/podcast.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pointer-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pointer.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/popcorn.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/popsicle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pound-sterling.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/power-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/power.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/presentation.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/printer-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/printer.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/projector.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/proportions.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/puzzle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/pyramid.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/qr-code.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/quote.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rabbit.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/radar.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/radiation.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/radical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/radio-receiver.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/radio-tower.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/radio.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/radius.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rail-symbol.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rainbow.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rat.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ratio.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/receipt-cent.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/receipt-euro.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/receipt-indian-rupee.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/receipt-japanese-yen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/receipt-pound-sterling.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/receipt-russian-ruble.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/receipt-swiss-franc.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/receipt-text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/receipt.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rectangle-ellipsis.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rectangle-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rectangle-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/recycle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/redo-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/redo-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/redo.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/refresh-ccw-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/refresh-ccw.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/refresh-cw-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/refresh-cw.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/refrigerator.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/regex.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/remove-formatting.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/repeat-1.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/repeat-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/repeat.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/replace-all.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/replace.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/reply-all.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/reply.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rewind.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ribbon.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rocket.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rocking-chair.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/roller-coaster.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rotate-3d.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rotate-ccw-square.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rotate-ccw.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rotate-cw-square.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rotate-cw.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/route-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/route.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/router.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rows-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rows-3.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rows-4.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/rss.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ruler.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/russian-ruble.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sailboat.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/salad.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sandwich.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/satellite-dish.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/satellite.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/save-all.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/save-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/save.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scale-3d.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scale.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scaling.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scan-barcode.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scan-eye.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scan-face.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scan-line.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scan-qr-code.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scan-search.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scan-text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scan.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/school.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scissors-line-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scissors.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/screen-share-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/screen-share.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scroll-text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/scroll.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/search-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/search-code.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/search-slash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/search-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/search.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/section.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/send-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/send-to-back.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/send.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/separator-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/separator-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/server-cog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/server-crash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/server-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/server.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/settings-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/settings.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shapes.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/share-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/share.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sheet.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shell.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shield-alert.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shield-ban.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shield-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shield-ellipsis.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shield-half.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shield-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shield-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shield-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shield-question.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shield-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shield.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ship-wheel.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ship.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shirt.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shopping-bag.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shopping-basket.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shopping-cart.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shovel.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shower-head.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shrink.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shrub.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/shuffle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sigma.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/signal-high.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/signal-low.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/signal-medium.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/signal-zero.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/signal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/signature.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/signpost-big.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/signpost.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/siren.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/skip-back.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/skip-forward.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/skull.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/slack.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/slash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/slice.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sliders-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sliders-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/smartphone-charging.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/smartphone-nfc.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/smartphone.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/smile-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/smile.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/snail.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/snowflake.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sofa.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/soup.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/space.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/spade.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sparkle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sparkles.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/speaker.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/speech.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/spell-check-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/spell-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/spline.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/split.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/spray-can.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sprout.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-activity.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-down-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-down-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-out-down-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-out-down-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-out-up-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-out-up-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-up-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-up-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-arrow-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-asterisk.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-bottom-dashed-scissors.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-chart-gantt.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-check-big.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-chevron-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-chevron-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-chevron-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-chevron-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-code.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-dashed-bottom-code.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-dashed-bottom.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-dashed-kanban.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-dashed-mouse-pointer.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-dashed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-divide.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-equal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-function.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-kanban.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-library.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-m.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-menu.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-mouse-pointer.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-parking-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-parking.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-pen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-percent.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-pi.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-pilcrow.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-play.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-power.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-radical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-scissors.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-sigma.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-slash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-split-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-split-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-square.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-stack.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-terminal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-user-round.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-user.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/square.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/squircle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/squirrel.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/stamp.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/star-half.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/star-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/star.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/step-back.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/step-forward.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/stethoscope.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sticker.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sticky-note.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/store.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/stretch-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/stretch-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/strikethrough.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/subscript.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sun-dim.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sun-medium.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sun-moon.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sun-snow.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sun.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sunrise.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sunset.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/superscript.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/swatch-book.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/swiss-franc.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/switch-camera.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/sword.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/swords.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/syringe.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/table-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/table-cells-merge.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/table-cells-split.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/table-columns-split.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/table-of-contents.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/table-properties.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/table-rows-split.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/table.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tablet-smartphone.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tablet.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tablets.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tag.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tags.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tally-1.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tally-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tally-3.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tally-4.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tally-5.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tangent.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/target.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/telescope.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tent-tree.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tent.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/terminal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/test-tube-diagonal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/test-tube.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/test-tubes.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/text-cursor-input.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/text-cursor.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/text-quote.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/text-search.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/text-select.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/theater.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/thermometer-snowflake.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/thermometer-sun.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/thermometer.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/thumbs-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/thumbs-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ticket-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ticket-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ticket-percent.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ticket-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ticket-slash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ticket-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ticket.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tickets-plane.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tickets.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/timer-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/timer-reset.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/timer.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/toggle-left.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/toggle-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tornado.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/torus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/touchpad-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/touchpad.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tower-control.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/toy-brick.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tractor.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/traffic-cone.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/train-front-tunnel.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/train-front.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/train-track.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tram-front.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/trash-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/trash.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tree-deciduous.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tree-palm.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tree-pine.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/trees.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/trello.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/trending-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/trending-up-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/trending-up.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/triangle-alert.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/triangle-right.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/triangle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/trophy.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/truck.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/turtle.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tv-minimal-play.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tv-minimal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/tv.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/twitch.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/twitter.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/type-outline.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/type.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/umbrella-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/umbrella.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/underline.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/undo-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/undo-dot.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/undo.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/unfold-horizontal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/unfold-vertical.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/ungroup.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/university.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/unlink-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/unlink.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/unplug.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/upload.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/usb.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-cog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-pen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-round-check.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-round-cog.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-round-minus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-round-pen.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-round-plus.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-round-search.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-round-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-round.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-search.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/user.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/users-round.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/users.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/utensils-crossed.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/utensils.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/utility-pole.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/variable.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/vault.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/vegan.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/venetian-mask.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/vibrate-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/vibrate.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/video-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/video.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/videotape.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/view.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/voicemail.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/volleyball.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/volume-1.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/volume-2.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/volume-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/volume-x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/volume.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/vote.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wallet-cards.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wallet-minimal.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wallet.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wallpaper.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wand-sparkles.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wand.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/warehouse.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/washing-machine.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/watch.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/waves.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/waypoints.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/webcam.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/webhook-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/webhook.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/weight.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wheat-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wheat.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/whole-word.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wifi-high.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wifi-low.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wifi-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wifi-zero.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wifi.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wind-arrow-down.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wind.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wine-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wine.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/workflow.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/worm.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wrap-text.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/wrench.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/x.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/youtube.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/zap-off.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/zap.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/zoom-in.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/zoom-out.svelte:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/index.js:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/aliases/aliases.js:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/aliases/prefixed.js:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/aliases/suffixed.js:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/aliases/index.js:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/types.js:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/lucide-svelte.js:
  (**
   * @license lucide-svelte v0.456.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=lucide-svelte.js.map
