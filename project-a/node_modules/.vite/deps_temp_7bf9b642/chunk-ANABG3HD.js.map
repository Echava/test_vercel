{
  "version": 3,
  "sources": ["../../svelte/src/internal/shared/warnings.js", "../../svelte/src/internal/shared/clone.js", "../../svelte/src/internal/shared/validate.js"],
  "sourcesContent": ["/* This file is generated by scripts/process-messages/index.js. Do not edit! */\r\n\r\nimport { DEV } from 'esm-env';\r\n\r\nvar bold = 'font-weight: bold';\r\nvar normal = 'font-weight: normal';\r\n\r\n/**\r\n * `<svelte:element this=\"%tag%\">` is a void element — it cannot have content\r\n * @param {string} tag\r\n */\r\nexport function dynamic_void_element_content(tag) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] dynamic_void_element_content\\n%c\\`<svelte:element this=\"${tag}\">\\` is a void element — it cannot have content`, bold, normal);\r\n\t} else {\r\n\t\t// TODO print a link to the documentation\r\n\t\tconsole.warn(\"dynamic_void_element_content\");\r\n\t}\r\n}\r\n\r\n/**\r\n * The following properties cannot be cloned with `$state.snapshot` — the return value contains the originals:\r\n * \r\n * %properties%\r\n * @param {string | undefined | null} [properties]\r\n */\r\nexport function state_snapshot_uncloneable(properties) {\r\n\tif (DEV) {\r\n\t\tconsole.warn(`%c[svelte] state_snapshot_uncloneable\\n%c${properties\r\n\t\t\t? `The following properties cannot be cloned with \\`$state.snapshot\\` — the return value contains the originals:\r\n\r\n${properties}`\r\n\t\t\t: \"Value cannot be cloned with `$state.snapshot` — the original value was returned\"}`, bold, normal);\r\n\t} else {\r\n\t\t// TODO print a link to the documentation\r\n\t\tconsole.warn(\"state_snapshot_uncloneable\");\r\n\t}\r\n}", "/** @import { Snapshot } from './types' */\r\nimport { DEV } from 'esm-env';\r\nimport * as w from './warnings.js';\r\nimport { get_prototype_of, is_array, object_prototype } from './utils.js';\r\n\r\n/**\r\n * In dev, we keep track of which properties could not be cloned. In prod\r\n * we don't bother, but we keep a dummy array around so that the\r\n * signature stays the same\r\n * @type {string[]}\r\n */\r\nconst empty = [];\r\n\r\n/**\r\n * @template T\r\n * @param {T} value\r\n * @param {boolean} [skip_warning]\r\n * @returns {Snapshot<T>}\r\n */\r\nexport function snapshot(value, skip_warning = false) {\r\n\tif (DEV && !skip_warning) {\r\n\t\t/** @type {string[]} */\r\n\t\tconst paths = [];\r\n\r\n\t\tconst copy = clone(value, new Map(), '', paths);\r\n\t\tif (paths.length === 1 && paths[0] === '') {\r\n\t\t\t// value could not be cloned\r\n\t\t\tw.state_snapshot_uncloneable();\r\n\t\t} else if (paths.length > 0) {\r\n\t\t\t// some properties could not be cloned\r\n\t\t\tconst slice = paths.length > 10 ? paths.slice(0, 7) : paths.slice(0, 10);\r\n\t\t\tconst excess = paths.length - slice.length;\r\n\r\n\t\t\tlet uncloned = slice.map((path) => `- <value>${path}`).join('\\n');\r\n\t\t\tif (excess > 0) uncloned += `\\n- ...and ${excess} more`;\r\n\r\n\t\t\tw.state_snapshot_uncloneable(uncloned);\r\n\t\t}\r\n\r\n\t\treturn copy;\r\n\t}\r\n\r\n\treturn clone(value, new Map(), '', empty);\r\n}\r\n\r\n/**\r\n * @template T\r\n * @param {T} value\r\n * @param {Map<T, Snapshot<T>>} cloned\r\n * @param {string} path\r\n * @param {string[]} paths\r\n * @returns {Snapshot<T>}\r\n */\r\nfunction clone(value, cloned, path, paths) {\r\n\tif (typeof value === 'object' && value !== null) {\r\n\t\tconst unwrapped = cloned.get(value);\r\n\t\tif (unwrapped !== undefined) return unwrapped;\r\n\r\n\t\tif (value instanceof Map) return /** @type {Snapshot<T>} */ (new Map(value));\r\n\t\tif (value instanceof Set) return /** @type {Snapshot<T>} */ (new Set(value));\r\n\r\n\t\tif (is_array(value)) {\r\n\t\t\tconst copy = /** @type {Snapshot<any>} */ ([]);\r\n\t\t\tcloned.set(value, copy);\r\n\r\n\t\t\tfor (let i = 0; i < value.length; i += 1) {\r\n\t\t\t\tcopy.push(clone(value[i], cloned, DEV ? `${path}[${i}]` : path, paths));\r\n\t\t\t}\r\n\r\n\t\t\treturn copy;\r\n\t\t}\r\n\r\n\t\tif (get_prototype_of(value) === object_prototype) {\r\n\t\t\t/** @type {Snapshot<any>} */\r\n\t\t\tconst copy = {};\r\n\t\t\tcloned.set(value, copy);\r\n\r\n\t\t\tfor (var key in value) {\r\n\t\t\t\t// @ts-expect-error\r\n\t\t\t\tcopy[key] = clone(value[key], cloned, DEV ? `${path}.${key}` : path, paths);\r\n\t\t\t}\r\n\r\n\t\t\treturn copy;\r\n\t\t}\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\r\n\t\t}\r\n\r\n\t\tif (typeof (/** @type {T & { toJSON?: any } } */ (value).toJSON) === 'function') {\r\n\t\t\treturn clone(\r\n\t\t\t\t/** @type {T & { toJSON(): any } } */ (value).toJSON(),\r\n\t\t\t\tcloned,\r\n\t\t\t\tDEV ? `${path}.toJSON()` : path,\r\n\t\t\t\tpaths\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tif (value instanceof EventTarget) {\r\n\t\t// can't be cloned\r\n\t\treturn /** @type {Snapshot<T>} */ (value);\r\n\t}\r\n\r\n\ttry {\r\n\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\r\n\t} catch (e) {\r\n\t\tif (DEV) {\r\n\t\t\tpaths.push(path);\r\n\t\t}\r\n\r\n\t\treturn /** @type {Snapshot<T>} */ (value);\r\n\t}\r\n}\r\n", "/** @import { TemplateNode } from '#client' */\r\n/** @import { Getters } from '#shared' */\r\nimport { is_void } from '../../utils.js';\r\nimport * as w from './warnings.js';\r\nimport * as e from './errors.js';\r\n\r\nexport { invalid_default_snippet } from './errors.js';\r\n\r\n/**\r\n * @param {() => string} tag_fn\r\n * @returns {void}\r\n */\r\nexport function validate_void_dynamic_element(tag_fn) {\r\n\tconst tag = tag_fn();\r\n\tif (tag && is_void(tag)) {\r\n\t\tw.dynamic_void_element_content(tag);\r\n\t}\r\n}\r\n\r\n/** @param {() => unknown} tag_fn */\r\nexport function validate_dynamic_element_tag(tag_fn) {\r\n\tconst tag = tag_fn();\r\n\tconst is_string = typeof tag === 'string';\r\n\tif (tag && !is_string) {\r\n\t\te.svelte_element_invalid_this_value();\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {any} store\r\n * @param {string} name\r\n */\r\nexport function validate_store(store, name) {\r\n\tif (store != null && typeof store.subscribe !== 'function') {\r\n\t\te.store_invalid_shape(name);\r\n\t}\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
